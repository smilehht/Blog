{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/avatar.jpeg","path":"avatar.jpeg","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/main.css","path":"main.css","modified":1,"renderable":0},{"_id":"source/alipay.jpeg","path":"alipay.jpeg","modified":1,"renderable":0},{"_id":"source/weixinpay.jpeg","path":"weixinpay.jpeg","modified":1,"renderable":0},{"_id":"source/demo/demo.js","path":"demo/demo.js","modified":1,"renderable":0},{"_id":"source/demo/index.html","path":"demo/index.html","modified":1,"renderable":0},{"_id":"source/demo/index_react.html","path":"demo/index_react.html","modified":1,"renderable":0},{"_id":"source/alipay.png","path":"alipay.png","modified":1,"renderable":0},{"_id":"source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":0},{"_id":"source/fonts/default-skin.svg","path":"fonts/default-skin.svg","modified":1,"renderable":0},{"_id":"source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":0},{"_id":"source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":0},{"_id":"source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":0},{"_id":"source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":0},{"_id":"source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":0},{"_id":"source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":0},{"_id":"source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":0},{"_id":"source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":0},{"_id":"source/fonts/tooltip.svg","path":"fonts/tooltip.svg","modified":1,"renderable":0},{"_id":"source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":0},{"_id":"source/weixinpay.png","path":"weixinpay.png","modified":1,"renderable":0},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":1,"renderable":1},{"_id":"source/demo/html/css制作环形.html","path":"demo/html/css制作环形.html","modified":1,"renderable":0},{"_id":"source/demo/html/纯CSS3瀑布布局.html","path":"demo/html/纯CSS3瀑布布局.html","modified":1,"renderable":0},{"_id":"source/demo/javaScript/1.基础JavaScript练习.html","path":"demo/javaScript/1.基础JavaScript练习.html","modified":1,"renderable":0},{"_id":"source/demo/javaScript/5.碰撞检测.html","path":"demo/javaScript/5.碰撞检测.html","modified":1,"renderable":0},{"_id":"source/demo/javaScript/百度百科滚动导航.html","path":"demo/javaScript/百度百科滚动导航.html","modified":1,"renderable":0},{"_id":"source/demo/website/index.html","path":"demo/website/index.html","modified":1,"renderable":0},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"source/demo/bootstrap/css/bootstrap-theme.css","path":"demo/bootstrap/css/bootstrap-theme.css","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/img/2.jpg","path":"demo/bootstrap/img/2.jpg","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.eot","path":"demo/bootstrap/fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/js/npm.js","path":"demo/bootstrap/js/npm.js","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/webpage/12.nav.html","path":"demo/bootstrap/webpage/12.nav.html","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/webpage/4.form-2.html","path":"demo/bootstrap/webpage/4.form-2.html","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/webpage/6.button.html","path":"demo/bootstrap/webpage/6.button.html","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/webpage/7.pictures.html","path":"demo/bootstrap/webpage/7.pictures.html","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/webpage/8.input-group-addon.html","path":"demo/bootstrap/webpage/8.input-group-addon.html","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/webpage/9.dropdown.html","path":"demo/bootstrap/webpage/9.dropdown.html","modified":1,"renderable":0},{"_id":"source/demo/html/css3新特性/css实现雷达图.html","path":"demo/html/css3新特性/css实现雷达图.html","modified":1,"renderable":0},{"_id":"source/demo/html/css3新特性/task.1.13.css","path":"demo/html/css3新特性/task.1.13.css","modified":1,"renderable":0},{"_id":"source/demo/html/css3新特性/task1.13_CSS3新特性.html","path":"demo/html/css3新特性/task1.13_CSS3新特性.html","modified":1,"renderable":0},{"_id":"source/demo/html/css3新特性/task_1_12_1.jpg","path":"demo/html/css3新特性/task_1_12_1.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/flexbox栅格化布局/Flexbox布局练习.html","path":"demo/html/flexbox栅格化布局/Flexbox布局练习.html","modified":1,"renderable":0},{"_id":"source/demo/html/css3新特性/纯CSS3瀑布布局.html","path":"demo/html/css3新特性/纯CSS3瀑布布局.html","modified":1,"renderable":0},{"_id":"source/demo/html/css3新特性/纯css实现全景移动.html","path":"demo/html/css3新特性/纯css实现全景移动.html","modified":1,"renderable":0},{"_id":"source/demo/html/flexbox栅格化布局/task1.10.css","path":"demo/html/flexbox栅格化布局/task1.10.css","modified":1,"renderable":0},{"_id":"source/demo/html/响应式网格(栅格化)布局/task1.8_响应式网格(栅格化)布局.html","path":"demo/html/响应式网格(栅格化)布局/task1.8_响应式网格(栅格化)布局.html","modified":1,"renderable":0},{"_id":"source/demo/html/响应式网格(栅格化)布局/task_1_8_1.png","path":"demo/html/响应式网格(栅格化)布局/task_1_8_1.png","modified":1,"renderable":0},{"_id":"source/demo/html/响应式网格(栅格化)布局/task1.8.css","path":"demo/html/响应式网格(栅格化)布局/task1.8.css","modified":1,"renderable":0},{"_id":"source/demo/html/两栏式布局/task1.5.css","path":"demo/html/两栏式布局/task1.5.css","modified":1,"renderable":0},{"_id":"source/demo/html/响应式网格(栅格化)布局/响应式网格(栅格化)布局.md","path":"demo/html/响应式网格(栅格化)布局/响应式网格(栅格化)布局.md","modified":1,"renderable":0},{"_id":"source/demo/html/两栏式布局/1.5.CSS_coding.html","path":"demo/html/两栏式布局/1.5.CSS_coding.html","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/1.9.css","path":"demo/html/实现一个复杂的页面/1.9.css","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/task1.9.实现一个复杂的页面.html","path":"demo/html/实现一个复杂的页面/task1.9.实现一个复杂的页面.html","modified":1,"renderable":0},{"_id":"source/demo/html/模拟报纸排版/1.6.css","path":"demo/html/模拟报纸排版/1.6.css","modified":1,"renderable":0},{"_id":"source/demo/html/模拟报纸排版/1.6.newspaperLayout.html","path":"demo/html/模拟报纸排版/1.6.newspaperLayout.html","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/task1.11.css","path":"demo/html/移动Web布局实践/task1.11.css","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/task1.11_移动Web布局实践.html","path":"demo/html/移动Web布局实践/task1.11_移动Web布局实践.html","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/task1.7.css","path":"demo/html/页面架构及样式布局/task1.7.css","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/task1.7__页面架构及样式布局.html","path":"demo/html/页面架构及样式布局/task1.7__页面架构及样式布局.html","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/task1.8__响应式网格(栅格化)布局.html","path":"demo/html/页面架构及样式布局/task1.8__响应式网格(栅格化)布局.html","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/1.全屏滚动.html","path":"demo/jQuery特效/全屏滚动/1.全屏滚动.html","modified":1,"renderable":0},{"_id":"source/demo/javaScript/2.dom操作/task.js","path":"demo/javaScript/2.dom操作/task.js","modified":1,"renderable":0},{"_id":"source/demo/javaScript/2.dom操作/task1.16.css","path":"demo/javaScript/2.dom操作/task1.16.css","modified":1,"renderable":0},{"_id":"source/demo/javaScript/2.dom操作/task1.16_零基础JavaScript编码.html","path":"demo/javaScript/2.dom操作/task1.16_零基础JavaScript编码.html","modified":1,"renderable":0},{"_id":"source/demo/javaScript/3.数据展示/task.js","path":"demo/javaScript/3.数据展示/task.js","modified":1,"renderable":0},{"_id":"source/demo/javaScript/3.数据展示/js实现数据展现.html","path":"demo/javaScript/3.数据展示/js实现数据展现.html","modified":1,"renderable":0},{"_id":"source/demo/javaScript/stylesheet/baidubaike.css","path":"demo/javaScript/stylesheet/baidubaike.css","modified":1,"renderable":0},{"_id":"source/demo/javaScript/模拟QQ聊天/baidu.png","path":"demo/javaScript/模拟QQ聊天/baidu.png","modified":1,"renderable":0},{"_id":"source/demo/javaScript/模拟QQ聊天/google.png","path":"demo/javaScript/模拟QQ聊天/google.png","modified":1,"renderable":0},{"_id":"source/demo/javaScript/模拟QQ聊天/sendMessage.html","path":"demo/javaScript/模拟QQ聊天/sendMessage.html","modified":1,"renderable":0},{"_id":"source/demo/js/build/react-dom-server.js","path":"demo/js/build/react-dom-server.js","modified":1,"renderable":0},{"_id":"source/demo/js/build/react-dom-server.min.js","path":"demo/js/build/react-dom-server.min.js","modified":1,"renderable":0},{"_id":"source/demo/js/build/react-dom.js","path":"demo/js/build/react-dom.js","modified":1,"renderable":0},{"_id":"source/demo/js/build/react-dom.min.js","path":"demo/js/build/react-dom.min.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/react-dom-server.min.js","path":"demo/reactjs/build/react-dom-server.min.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/react-dom-server.js","path":"demo/reactjs/build/react-dom-server.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/react-dom.js","path":"demo/reactjs/build/react-dom.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/react-dom.min.js","path":"demo/reactjs/build/react-dom.min.js","modified":1,"renderable":0},{"_id":"source/demo/website/css/style.css","path":"demo/website/css/style.css","modified":1,"renderable":0},{"_id":"source/demo/website/images/2.jpg","path":"demo/website/images/2.jpg","modified":1,"renderable":0},{"_id":"source/demo/website/images/20120216.jpg","path":"demo/website/images/20120216.jpg","modified":1,"renderable":0},{"_id":"source/demo/website/images/4.jpg","path":"demo/website/images/4.jpg","modified":1,"renderable":0},{"_id":"source/demo/website/images/4.png","path":"demo/website/images/4.png","modified":1,"renderable":0},{"_id":"source/demo/website/images/adindex.gif","path":"demo/website/images/adindex.gif","modified":1,"renderable":0},{"_id":"source/demo/website/images/chos.gif","path":"demo/website/images/chos.gif","modified":1,"renderable":0},{"_id":"source/demo/website/images/5.jpg","path":"demo/website/images/5.jpg","modified":1,"renderable":0},{"_id":"source/demo/website/images/5.png","path":"demo/website/images/5.png","modified":1,"renderable":0},{"_id":"source/demo/website/images/hot.gif","path":"demo/website/images/hot.gif","modified":1,"renderable":0},{"_id":"source/demo/website/images/headerbg.png","path":"demo/website/images/headerbg.png","modified":1,"renderable":0},{"_id":"source/demo/website/images/logo.gif","path":"demo/website/images/logo.gif","modified":1,"renderable":0},{"_id":"source/demo/website/images/common.jpg","path":"demo/website/images/common.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/reactDemo.png","path":"demo/reactjs/reactDemo.png","modified":1,"renderable":0},{"_id":"source/demo/website/script/script.js","path":"demo/website/script/script.js","modified":1,"renderable":0},{"_id":"source/demo/布局/单列居中布局/1.html","path":"demo/布局/单列居中布局/1.html","modified":1,"renderable":0},{"_id":"source/demo/布局/单列居中布局/2.html","path":"demo/布局/单列居中布局/2.html","modified":1,"renderable":0},{"_id":"source/demo/布局/单列居中布局/3.html","path":"demo/布局/单列居中布局/3.html","modified":1,"renderable":0},{"_id":"source/demo/布局/单列居中布局/4.html","path":"demo/布局/单列居中布局/4.html","modified":1,"renderable":0},{"_id":"source/demo/布局/单列居中布局/单列居中布局解决放案.docx","path":"demo/布局/单列居中布局/单列居中布局解决放案.docx","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/css/bootstrap-theme.min.css","path":"demo/bootstrap/css/bootstrap-theme.min.css","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.ttf","path":"demo/bootstrap/fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.svg","path":"demo/bootstrap/fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.woff2","path":"demo/bootstrap/fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/js/bootstrap.min.js","path":"demo/bootstrap/js/bootstrap.min.js","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/js/bootstrap.js","path":"demo/bootstrap/js/bootstrap.js","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/js/jquery.min__1.js","path":"demo/bootstrap/js/jquery.min__1.js","modified":1,"renderable":0},{"_id":"source/demo/html/css3新特性/timg.jpeg","path":"demo/html/css3新特性/timg.jpeg","modified":1,"renderable":0},{"_id":"source/demo/js/jquery/jquery-1.12.1.min.js","path":"demo/js/jquery/jquery-1.12.1.min.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/jquery/jquery-1.12.1.min.js","path":"demo/reactjs/jquery/jquery-1.12.1.min.js","modified":1,"renderable":0},{"_id":"source/demo/website/images/3.jpg","path":"demo/website/images/3.jpg","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/css/bootstrap-theme.css.map","path":"demo/bootstrap/css/bootstrap-theme.css.map","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/css/bootstrap.css","path":"demo/bootstrap/css/bootstrap.css","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/css/bootstrap.min.css","path":"demo/bootstrap/css/bootstrap.min.css","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.woff","path":"demo/bootstrap/fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/js/jquery.min.js","path":"demo/bootstrap/js/jquery.min.js","modified":1,"renderable":0},{"_id":"source/demo/html/两栏式布局/img/1.jpg","path":"demo/html/两栏式布局/img/1.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/两栏式布局/img/baidu.png","path":"demo/html/两栏式布局/img/baidu.png","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/brand.png","path":"demo/html/实现一个复杂的页面/img/brand.png","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/account.jpg","path":"demo/html/实现一个复杂的页面/img/account.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/calender.jpg","path":"demo/html/实现一个复杂的页面/img/calender.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/file1.png","path":"demo/html/实现一个复杂的页面/img/file1.png","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/folder1.png","path":"demo/html/实现一个复杂的页面/img/folder1.png","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/folder.png","path":"demo/html/实现一个复杂的页面/img/folder.png","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/login.png","path":"demo/html/实现一个复杂的页面/img/login.png","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/hht.jpg","path":"demo/html/实现一个复杂的页面/img/hht.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/report.png","path":"demo/html/实现一个复杂的页面/img/report.png","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/share.png","path":"demo/html/实现一个复杂的页面/img/share.png","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/star.png","path":"demo/html/实现一个复杂的页面/img/star.png","modified":1,"renderable":0},{"_id":"source/demo/html/模拟报纸排版/img/brand.png","path":"demo/html/模拟报纸排版/img/brand.png","modified":1,"renderable":0},{"_id":"source/demo/html/模拟报纸排版/img/pic.jpg","path":"demo/html/模拟报纸排版/img/pic.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/img/2.jpg","path":"demo/html/移动Web布局实践/img/2.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/img/3.jpg","path":"demo/html/移动Web布局实践/img/3.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/img/4.jpg","path":"demo/html/移动Web布局实践/img/4.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_01.png","path":"demo/html/页面架构及样式布局/img/task_1_07_01.png","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/img/6.jpg","path":"demo/html/移动Web布局实践/img/6.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_02.png","path":"demo/html/页面架构及样式布局/img/task_1_07_02.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_03.png","path":"demo/html/页面架构及样式布局/img/task_1_07_03.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_04.png","path":"demo/html/页面架构及样式布局/img/task_1_07_04.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_05.png","path":"demo/html/页面架构及样式布局/img/task_1_07_05.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_06.png","path":"demo/html/页面架构及样式布局/img/task_1_07_06.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_07.png","path":"demo/html/页面架构及样式布局/img/task_1_07_07.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_08.png","path":"demo/html/页面架构及样式布局/img/task_1_07_08.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_10.png","path":"demo/html/页面架构及样式布局/img/task_1_07_10.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_15.png","path":"demo/html/页面架构及样式布局/img/task_1_07_15.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_2.jpg","path":"demo/html/页面架构及样式布局/img/task_1_07_2.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_3.jpg","path":"demo/html/页面架构及样式布局/img/task_1_07_3.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_4.jpg","path":"demo/html/页面架构及样式布局/img/task_1_07_4.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_5.jpg","path":"demo/html/页面架构及样式布局/img/task_1_07_5.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_6.jpg","path":"demo/html/页面架构及样式布局/img/task_1_07_6.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_9.png","path":"demo/html/页面架构及样式布局/img/task_1_07_9.png","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/css/bootstrap.css","path":"demo/jQuery特效/全屏滚动/css/bootstrap.css","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/css/style.css","path":"demo/jQuery特效/全屏滚动/css/style.css","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.eot","path":"demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.woff2","path":"demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.ttf","path":"demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.woff","path":"demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/bg2.jpg","path":"demo/jQuery特效/全屏滚动/img/bg2.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/bg1.jpg","path":"demo/jQuery特效/全屏滚动/img/bg1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/item2-2.jpg","path":"demo/jQuery特效/全屏滚动/img/item2-2.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/item1-31.jpg","path":"demo/jQuery特效/全屏滚动/img/item1-31.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/item1-1.jpg","path":"demo/jQuery特效/全屏滚动/img/item1-1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/hht.jpg","path":"demo/jQuery特效/全屏滚动/img/hht.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/item2-1.jpg","path":"demo/jQuery特效/全屏滚动/img/item2-1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/item3-1.jpg","path":"demo/jQuery特效/全屏滚动/img/item3-1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/item3-2.jpg","path":"demo/jQuery特效/全屏滚动/img/item3-2.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/item4-1.jpg","path":"demo/jQuery特效/全屏滚动/img/item4-1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/item4-2.jpg","path":"demo/jQuery特效/全屏滚动/img/item4-2.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill1-1.jpg","path":"demo/jQuery特效/全屏滚动/img/skill1-1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill2-1.jpg","path":"demo/jQuery特效/全屏滚动/img/skill2-1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill2.jpg","path":"demo/jQuery特效/全屏滚动/img/skill2.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill1.jpg","path":"demo/jQuery特效/全屏滚动/img/skill1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill2-2.jpg","path":"demo/jQuery特效/全屏滚动/img/skill2-2.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill2.png","path":"demo/jQuery特效/全屏滚动/img/skill2.png","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill3-1.jpeg","path":"demo/jQuery特效/全屏滚动/img/skill3-1.jpeg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill3.JPEG","path":"demo/jQuery特效/全屏滚动/img/skill3.JPEG","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill4.jpg","path":"demo/jQuery特效/全屏滚动/img/skill4.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill4-1.jpg","path":"demo/jQuery特效/全屏滚动/img/skill4-1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill5.png","path":"demo/jQuery特效/全屏滚动/img/skill5.png","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill5-1.png","path":"demo/jQuery特效/全屏滚动/img/skill5-1.png","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/title.png","path":"demo/jQuery特效/全屏滚动/img/title.png","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/item1.jpg","path":"demo/jQuery特效/全屏滚动/jquery/item1.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/jquery.fullPage.css","path":"demo/jQuery特效/全屏滚动/jquery/jquery.fullPage.css","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/item2.jpg","path":"demo/jQuery特效/全屏滚动/jquery/item2.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/jquery.fullPage.min.js","path":"demo/jQuery特效/全屏滚动/jquery/jquery.fullPage.min.js","modified":1,"renderable":0},{"_id":"source/demo/js/build/react-with-addons.min.js","path":"demo/js/build/react-with-addons.min.js","modified":1,"renderable":0},{"_id":"source/demo/js/build/react.min.js","path":"demo/js/build/react.min.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/0.Reactjs模板.html","path":"demo/reactjs/Demos/sampleDemos/0.Reactjs模板.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/2.JSX的简单语法.html","path":"demo/reactjs/Demos/sampleDemos/2.JSX的简单语法.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/3.我来自于HHT的组件.html","path":"demo/reactjs/Demos/sampleDemos/3.我来自于HHT的组件.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/5.propTypes__验证属性是否符合规范.html","path":"demo/reactjs/Demos/sampleDemos/5.propTypes__验证属性是否符合规范.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/1.简单的reactjs示例.html","path":"demo/reactjs/Demos/sampleDemos/1.简单的reactjs示例.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/4.this.props.children.html","path":"demo/reactjs/Demos/sampleDemos/4.this.props.children.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/6.getDefaultProps.html","path":"demo/reactjs/Demos/sampleDemos/6.getDefaultProps.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/8.表单.html","path":"demo/reactjs/Demos/sampleDemos/8.表单.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/react-with-addons.min.js","path":"demo/reactjs/build/react-with-addons.min.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/react.min.js","path":"demo/reactjs/build/react.min.js","modified":1,"renderable":0},{"_id":"source/demo/website/images/1.jpg","path":"demo/website/images/1.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/7.this.state.html","path":"demo/reactjs/Demos/sampleDemos/7.this.state.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/sampleDemos/9.组件的嵌套.html","path":"demo/reactjs/Demos/sampleDemos/9.组件的嵌套.html","modified":1,"renderable":0},{"_id":"source/demo/website/images/upload/1.jpg","path":"demo/website/images/upload/1.jpg","modified":1,"renderable":0},{"_id":"source/demo/website/images/upload/3.jpg","path":"demo/website/images/upload/3.jpg","modified":1,"renderable":0},{"_id":"source/demo/website/images/upload/4.png","path":"demo/website/images/upload/4.png","modified":1,"renderable":0},{"_id":"source/demo/website/images/upload/2.jpg","path":"demo/website/images/upload/2.jpg","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/2.float(double)+margin.html","path":"demo/布局/多列布局/1.定宽加自适应/2.float(double)+margin.html","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/1.float(single)+margin.html","path":"demo/布局/多列布局/1.定宽加自适应/1.float(single)+margin.html","modified":1,"renderable":0},{"_id":"source/demo/website/images/upload/5.png","path":"demo/website/images/upload/5.png","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/1.float(single)+margin.png","path":"demo/布局/多列布局/1.定宽加自适应/1.float(single)+margin.png","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/3.float+overflow.html","path":"demo/布局/多列布局/1.定宽加自适应/3.float+overflow.html","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/4.table.html","path":"demo/布局/多列布局/1.定宽加自适应/4.table.html","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/2.float(double)+margin.png","path":"demo/布局/多列布局/1.定宽加自适应/2.float(double)+margin.png","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/3.float+overflow.png","path":"demo/布局/多列布局/1.定宽加自适应/3.float+overflow.png","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/5.flex.html","path":"demo/布局/多列布局/1.定宽加自适应/5.flex.html","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/4.table.png","path":"demo/布局/多列布局/1.定宽加自适应/4.table.png","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/5.flex.png","path":"demo/布局/多列布局/1.定宽加自适应/5.flex.png","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/多列布局之定宽+自适应.md","path":"demo/布局/多列布局/1.定宽加自适应/多列布局之定宽+自适应.md","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/2.table.html","path":"demo/布局/多列布局/2.不定宽加自适应/2.table.html","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/1、float+overflow.jpg","path":"demo/布局/多列布局/2.不定宽加自适应/1、float+overflow.jpg","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/1.float+overflow.html","path":"demo/布局/多列布局/2.不定宽加自适应/1.float+overflow.html","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/2、table.jpg","path":"demo/布局/多列布局/2.不定宽加自适应/2、table.jpg","modified":1,"renderable":0},{"_id":"source/slider.js","path":"slider.js","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/3.flex.html","path":"demo/布局/多列布局/2.不定宽加自适应/3.flex.html","modified":1,"renderable":0},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/3、flex布局.jpg","path":"demo/布局/多列布局/2.不定宽加自适应/3、flex布局.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/img/5.jpg","path":"demo/html/移动Web布局实践/img/5.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_7.jpg","path":"demo/html/页面架构及样式布局/img/task_1_07_7.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_8.jpg","path":"demo/html/页面架构及样式布局/img/task_1_07_8.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.svg","path":"demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/jquery.min.js","path":"demo/jQuery特效/全屏滚动/jquery/jquery.min.js","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/img/1.jpg","path":"demo/bootstrap/img/1.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/img/1.jpg","path":"demo/html/移动Web布局实践/img/1.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/模拟报纸排版/img/picture.png","path":"demo/html/模拟报纸排版/img/picture.png","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_1.jpg","path":"demo/html/页面架构及样式布局/img/task_1_07_1.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/search/searchBox.html","path":"demo/reactjs/Demos/components/search/searchBox.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/search/searchBox.php","path":"demo/reactjs/Demos/components/search/searchBox.php","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/search/thinking-in-react-components.png","path":"demo/reactjs/Demos/components/search/thinking-in-react-components.png","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/comment.php","path":"demo/reactjs/Demos/components/commentBox/comment.php","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/commentBox.html","path":"demo/reactjs/Demos/components/commentBox/commentBox.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/comments.php","path":"demo/reactjs/Demos/components/commentBox/comments.php","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/searchBox/searchBox - 副本.html","path":"demo/reactjs/Demos/components/searchBox/searchBox - 副本.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/searchBox/searchBox.html","path":"demo/reactjs/Demos/components/searchBox/searchBox.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/searchBox/thinking-in-react-components.png","path":"demo/reactjs/Demos/components/searchBox/thinking-in-react-components.png","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/searchBox/searchBox.php","path":"demo/reactjs/Demos/components/searchBox/searchBox.php","modified":1,"renderable":0},{"_id":"source/demo/js/jquery/jquery.js","path":"demo/js/jquery/jquery.js","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/bg4.jpg","path":"demo/jQuery特效/全屏滚动/img/bg4.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/jquery/jquery.js","path":"demo/reactjs/jquery/jquery.js","modified":1,"renderable":0},{"_id":"source/main.js","path":"main.js","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/js/jquery.js","path":"demo/bootstrap/js/jquery.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/search/script/search.js","path":"demo/reactjs/Demos/components/search/script/search.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/search/style/search.css","path":"demo/reactjs/Demos/components/search/style/search.css","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/img/baidu.jpg","path":"demo/reactjs/Demos/components/commentBox/img/baidu.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/img/google.jpg","path":"demo/reactjs/Demos/components/commentBox/img/google.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/img/huohu.jpg","path":"demo/reactjs/Demos/components/commentBox/img/huohu.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/script/CommentBox.html","path":"demo/reactjs/Demos/components/commentBox/script/CommentBox.html","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/script/commentBox.js","path":"demo/reactjs/Demos/components/commentBox/script/commentBox.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/script/main.js","path":"demo/reactjs/Demos/components/commentBox/script/main.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/searchBox/script/search.js","path":"demo/reactjs/Demos/components/searchBox/script/search.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/完成效果图.jpg","path":"demo/reactjs/Demos/components/commentBox/完成效果图.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/style/commentBox.css","path":"demo/reactjs/Demos/components/commentBox/style/commentBox.css","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/searchBox/style/search.css","path":"demo/reactjs/Demos/components/searchBox/style/search.css","modified":1,"renderable":0},{"_id":"source/demo/website/script/jquery.js","path":"demo/website/script/jquery.js","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/task_1_9_2.jpg","path":"demo/html/实现一个复杂的页面/task_1_9_2.jpg","modified":1,"renderable":0},{"_id":"source/demo/jQuery特效/全屏滚动/img/bg3.jpg","path":"demo/jQuery特效/全屏滚动/img/bg3.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/Demos/components/commentBox/script/require.js","path":"demo/reactjs/Demos/components/commentBox/script/require.js","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/task_1_11_1.jpg","path":"demo/html/移动Web布局实践/task_1_11_1.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/两栏式布局/task_1_5_1.jpg","path":"demo/html/两栏式布局/task_1_5_1.jpg","modified":1,"renderable":0},{"_id":"source/demo/bootstrap/css/bootstrap.css.map","path":"demo/bootstrap/css/bootstrap.css.map","modified":1,"renderable":0},{"_id":"source/demo/html/模拟报纸排版/img/show.png","path":"demo/html/模拟报纸排版/img/show.png","modified":1,"renderable":0},{"_id":"source/demo/html/移动Web布局实践/实现效果.jpg","path":"demo/html/移动Web布局实践/实现效果.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/task_1_7_2.jpg","path":"demo/html/页面架构及样式布局/task_1_7_2.jpg","modified":1,"renderable":0},{"_id":"source/demo/js/build/react.js","path":"demo/js/build/react.js","modified":1,"renderable":0},{"_id":"source/demo/js/build/react-with-addons.js","path":"demo/js/build/react-with-addons.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/react.js","path":"demo/reactjs/build/react.js","modified":1,"renderable":0},{"_id":"source/demo/html/模拟报纸排版/task_1_6_3.jpg","path":"demo/html/模拟报纸排版/task_1_6_3.jpg","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/react-with-addons.js","path":"demo/reactjs/build/react-with-addons.js","modified":1,"renderable":0},{"_id":"source/demo/js/build/browser.min.js","path":"demo/js/build/browser.min.js","modified":1,"renderable":0},{"_id":"source/demo/reactjs/build/browser.min.js","path":"demo/reactjs/build/browser.min.js","modified":1,"renderable":0},{"_id":"source/demo/html/实现一个复杂的页面/img/sunrise.jpg","path":"demo/html/实现一个复杂的页面/img/sunrise.jpg","modified":1,"renderable":0},{"_id":"source/demo/html/页面架构及样式布局/T07__新世界__By__HHT.png","path":"demo/html/页面架构及样式布局/T07__新世界__By__HHT.png","modified":1,"renderable":0},{"_id":"source/demo/html/模拟报纸排版/task_1_6_1.psd","path":"demo/html/模拟报纸排版/task_1_6_1.psd","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"4ac56bcaac202d59127ca48861b2f64d704e03f8","modified":1555305019231},{"_id":"source/avatar.jpeg","hash":"ec4d87601dd9fc14d99ee068f9829194b5c19a74","modified":1555137295263},{"_id":"source/favicon.ico","hash":"931b41272797e9637bdff7223eced3ddacbaa3e8","modified":1555137352897},{"_id":"source/main.css","hash":"978d85fb60d7b3fd3e1af41c84bdfcc8255ae0d0","modified":1555252536590},{"_id":"themes/yilia/.DS_Store","hash":"9655ca388ad36f2e7f339e439030d699e635ca8b","modified":1556248260390},{"_id":"themes/yilia/README.md","hash":"32fc73c7de825d0c62bb5e2e916045e60e0c35a7","modified":1555137480168},{"_id":"themes/yilia/_config.yml","hash":"a3ce3914a3a8a7b525d462ef059c175a28074dbf","modified":1555253065813},{"_id":"themes/yilia/package.json","hash":"a31ab390da613cb720c0801aa692d5005b02fb16","modified":1556248140593},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1555126277044},{"_id":"source/alipay.jpeg","hash":"fe08b13d6a16d3297d8a20ee1535a82ef3eae911","modified":1555168212331},{"_id":"source/weixinpay.jpeg","hash":"2dfd62c490a2f425070ad71143f6ecc00cacad97","modified":1555168212724},{"_id":"source/_posts/.DS_Store","hash":"ba8ae11e6d8dc5a9956d2f29d834f98e506af044","modified":1555167033407},{"_id":"source/_posts/JS常用API整理.md","hash":"6ccef13eee1810a7364039a7dd5996186754a75f","modified":1555149521483},{"_id":"source/_posts/My-first-post.md","hash":"7baee119e491c0aa5f549a499bf89e4fbfa1d10c","modified":1555129658938},{"_id":"source/_posts/design-pattern.md","hash":"c81d0d8251a222832f67e7e1731e694a98cad15e","modified":1555149658565},{"_id":"source/_posts/debug.md","hash":"7ce4d1e74ecc68fc28a28c0a3b0ef5f2335df6b3","modified":1555304653366},{"_id":"source/_posts/deploy.md","hash":"1328b8394812d578411aaa9896b3b27f77840098","modified":1556358352091},{"_id":"source/_posts/nginx.md","hash":"0c1c6565da054bd113ac67f6e550e6898267008a","modified":1557118093537},{"_id":"source/_posts/full-screen.md","hash":"148d1508e64077931b1faa65fed596d83f087f75","modified":1555149477476},{"_id":"source/_posts/page.md","hash":"1ae412cd7a8f816d9d45ed0dad573792305f8a67","modified":1555149354982},{"_id":"source/_posts/pictures.md","hash":"8e159816b8259e908bfa329651e6acc7d6bd9ab4","modified":1555304633250},{"_id":"source/_posts/react-router-4.md","hash":"794c30895767647d47b30cf00d2c0359992ec8a0","modified":1555152354650},{"_id":"source/_posts/summary.md","hash":"a5d43a46db400f8dd8b2876f304359379e7a91ab","modified":1555304580617},{"_id":"source/_posts/ssh.md","hash":"f4d49b5cb2b3e03b2d06ad06756b28558b956c88","modified":1556359992100},{"_id":"source/_posts/require.md","hash":"3d536f58edcdee913f8dffcc5c22d7f8364366fe","modified":1555129921690},{"_id":"source/_posts/webpack.md","hash":"af323b93f702e942b27546b2c43003df40440af5","modified":1555149698849},{"_id":"source/demo/.DS_Store","hash":"677afb91d1438fd1b69ecbad9374f4cd6d6dfd6c","modified":1555252348029},{"_id":"source/demo/demo.js","hash":"c820c1b8fdce0060663d1516d5464ef0b1437eee","modified":1555122810487},{"_id":"source/demo/index.html","hash":"c77a323ede95f98ed7e88c1327337bce065fe452","modified":1555305230945},{"_id":"source/demo/index_react.html","hash":"d18c7e91f49ccdd31804050dd95bbaedb70e8ffd","modified":1555122810551},{"_id":"source/alipay.png","hash":"25906d3754357d8eda5fedcfba2c1264bd530bc7","modified":1555168516481},{"_id":"source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1555122810605},{"_id":"source/fonts/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1555122810605},{"_id":"source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1555122810606},{"_id":"source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1555122810606},{"_id":"source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1555122810606},{"_id":"source/fonts/iconfont.eot","hash":"a6048d19579aa03fa2e0cf6f4ea0c91cc9906946","modified":1555122810606},{"_id":"source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1555122810606},{"_id":"source/fonts/iconfont.ttf","hash":"4eecc4e6e094525636c66a0f036d9d136eb043b4","modified":1555122810607},{"_id":"source/fonts/iconfont.svg","hash":"7c4d7a123d44d525f322076b74100493a735d9be","modified":1555122810606},{"_id":"source/fonts/tooltip.4004ff.svg","hash":"a5e9fe67e0604c24279281d9fdd2ce1f4536d3e5","modified":1555122810607},{"_id":"source/fonts/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1555122810607},{"_id":"source/fonts/iconfont.woff","hash":"3b5c92c260005b654d2cb54e3d44c7a79e5a52b9","modified":1555122810607},{"_id":"source/weixinpay.png","hash":"5ec3fd8ca868c24e45b0830f250df7f524303b03","modified":1555168457881},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1555126277013},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1555126277013},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1555126277013},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1555126277014},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1555126277014},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1555126277013},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1555126277014},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1555126277020},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1555126277020},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1555126277020},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1555126277020},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1555126277020},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1555126277021},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1555126277021},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"55573f9c859595824b1b61d1582b8f435868570a","modified":1556248563474},{"_id":"themes/yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1555126277044},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1555126277021},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1555126277036},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1555126277019},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1555126277042},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1555126277043},{"_id":"source/_posts/JS常用API整理/Object.png","hash":"cdf38bb82df5228ac78165902eac8f5b5a531ded","modified":1555137226930},{"_id":"source/_posts/JS常用API整理/String.png","hash":"72129730ec4d512d5ade3afedb618be9fe4848b3","modified":1555137226992},{"_id":"source/_posts/debug/15535759171201.jpg","hash":"fffd584b18dba79713a7c035171d079bf533a350","modified":1553575917123},{"_id":"source/_posts/debug/20180324155945272.png","hash":"c63d88445c01d00457a2e72caab1a8ecf6f21601","modified":1553419396528},{"_id":"source/_posts/debug/20180324151603563.png","hash":"d46d74ceca58e218dda951ed9d0054ffa6be1b56","modified":1553421800087},{"_id":"source/_posts/debug/idb-db.png","hash":"f1291365a6e9194ebb83791ebb5af3d122b72042","modified":1553689541024},{"_id":"source/_posts/debug/idb-kvps.png","hash":"000026690b2e528475932a8619f0e78fc10c8232","modified":1553689547140},{"_id":"source/_posts/debug/js-profile.png","hash":"d054b3c9157ccf3ba568b018a347086479e533f2","modified":1553667401973},{"_id":"source/_posts/debug/mixedoverview.png","hash":"df7e4fb5bcc7b8bc4cfba0b8d404455dc8c849b8","modified":1553690385176},{"_id":"source/_posts/debug/nonsecuremain.png","hash":"1172052646bb3af508c57c05f3162277ab979fc5","modified":1553690344056},{"_id":"source/_posts/debug/overview-annotated.jpg","hash":"38cf9313d3e13381bb5e5cdff2cadf228060a7fa","modified":1553666772319},{"_id":"source/_posts/debug/web-sql-console.png","hash":"e183d3c371f9734029d43b8b614e147874c9ac53","modified":1553689115881},{"_id":"source/_posts/debug/timeline-annotated.png","hash":"cf36ac127d4f928bd2c272a52b4461b88fce6694","modified":1553666618600},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午4.38.19.png","hash":"178254a66adf43bc100d34a926d05fb3456b73b8","modified":1553416704550},{"_id":"source/_posts/debug/屏幕快照 2019-03-28 下午2.01.39.png","hash":"ef430c98f110f38d14d62c69bd740e5b8a62360e","modified":1553752904907},{"_id":"source/_posts/debug/屏幕快照 2019-03-28 上午11.44.09.png","hash":"f45c96df25c0164b00f9053884fe0a33a735d383","modified":1553744655274},{"_id":"source/_posts/debug/屏幕快照 2019-03-28 下午2.04.21.png","hash":"8e46de069c8578c369570914696552bc414c19b8","modified":1553753066793},{"_id":"source/_posts/nginx/1.png","hash":"b056fd77b5c34907659b72e5828d7a57816abfaa","modified":1557118033380},{"_id":"source/_posts/deploy/deploy.png","hash":"2032f7f014fe1ca8f1b453eb98cc086183a23dc0","modified":1556247785645},{"_id":"source/_posts/pictures/15331179979335.jpg","hash":"b4059ff9bebc643d513b622553c66809139ed6e6","modified":1533117997000},{"_id":"source/_posts/pictures/15331180641337.jpg","hash":"f06b0e6460f1bca0d00a3f7e9c4f0b29bf77b5f1","modified":1533118064000},{"_id":"source/_posts/pictures/15332643831055.jpg","hash":"a15b4ebb44c2b55a11c543f0e0a79006ba231f65","modified":1533264383000},{"_id":"source/_posts/pictures/15332675960710.jpg","hash":"70a124cff9fb899bc9b4593ca0b46ef1a79f0d15","modified":1533267596000},{"_id":"source/_posts/pictures/15332643083915.jpg","hash":"5994aea8ffe7a4a30765dedc529de34ff5a23c0f","modified":1533264308000},{"_id":"source/_posts/pictures/15332642376956.jpg","hash":"60d98a8bc1b67283e59ff67f8e4b1ff8489b279c","modified":1533264237000},{"_id":"source/_posts/pictures/5831473-3031e966db4e6b7d.gif","hash":"967a2a7ffe709bbd15f73d9859a2c21375bf48bd","modified":1533267610000},{"_id":"source/_posts/pictures/“基线”格式的JPG加载过程.gif","hash":"967a2a7ffe709bbd15f73d9859a2c21375bf48bd","modified":1533267610000},{"_id":"source/_posts/pictures/“连续”格式的JPG加载过程.gif","hash":"27f4d2438166771aad52b9286322d713938e6365","modified":1533267730000},{"_id":"source/_posts/pictures/jpg格式保存方式.png","hash":"d7834bf513173aa7c03c94c9d0dfdf85d6e3a8db","modified":1533267906000},{"_id":"source/_posts/pictures/懒加载.png","hash":"8ccb9af2ae924a336c5dea1bf53709c54c9d1ded","modified":1533729181000},{"_id":"source/demo/html/css制作环形.html","hash":"63bdf8679502d2a4e1197268c1090e639f00cf60","modified":1555122810489},{"_id":"source/demo/html/纯CSS3瀑布布局.html","hash":"f32529285e42062db32135f8b91ddd31810a9e4d","modified":1555122810534},{"_id":"source/demo/javaScript/1.基础JavaScript练习.html","hash":"8cf121313763e71452f2cf53bd1a2013bd1ccbe8","modified":1555122810560},{"_id":"source/demo/javaScript/5.碰撞检测.html","hash":"dde2a2e96ae06b1e73ea1569be79eddd028e9c54","modified":1555122810561},{"_id":"source/demo/javaScript/百度百科滚动导航.html","hash":"4a21b2b32ec06a983657d3e62d2d13f9392c1780","modified":1555122810562},{"_id":"source/demo/website/index.html","hash":"6bb4fd6084c758770cf20464ab40d048499d5edf","modified":1555122810597},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"826c3daacf8b8cdcd9376108c3d7a655b3bfda69","modified":1555128831427},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1555126277014},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1555126277014},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1555126277015},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1555126277015},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1555126277015},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1555126277015},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1555126277015},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1555126277015},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"5cc5636db877621d5cc0c52665b1511aff4f0437","modified":1555129097380},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1555126277016},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1555126277016},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1555126277016},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1555126277019},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1555126277016},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1555126277020},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1555126277037},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1555126277038},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1555126277037},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1555126277038},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1555126277039},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1555126277039},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1555126277040},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1555126277041},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1555126277041},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1555126277021},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1555126277022},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1555126277022},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1555126277022},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"59e97035f7b8a06d93c5e5153d9963d2eda2694a","modified":1556248555796},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1555126277023},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1555126277021},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1555126277023},{"_id":"themes/yilia/source-src/css/article.scss","hash":"e2f65d9d9ca2a39988191bff315866cb6d80de23","modified":1556248541222},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1555126277025},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1555126277026},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1555126277026},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1555126277027},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1555126277027},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1555126277028},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1555126277028},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1555126277029},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"dc17d967a005f364f820c142fda56aff5e92312a","modified":1556248546447},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1555126277029},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1555126277029},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1555126277029},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1555126277030},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1555126277030},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1555126277030},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1555126277030},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1555126277031},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1555126277033},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1555126277031},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1555126277033},{"_id":"themes/yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1555126277033},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1555126277033},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1555126277032},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1555126277034},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1555126277034},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1555126277034},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1555126277035},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1555126277035},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1555126277035},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1555126277036},{"_id":"source/_posts/JS常用API整理/Array.png","hash":"e1e2e9d9b905f6993c94b71712b6ce263b6d804d","modified":1555137226866},{"_id":"source/_posts/debug/1658016-a26cb97a6601c64c.webp","hash":"3f7f8d07e2522c1917af5aa85da8ce82d7ed0efe","modified":1553758383502},{"_id":"source/_posts/debug/add-column.png","hash":"79082738b285457c31683854b0bddcfb3bbd861b","modified":1553578107001},{"_id":"source/_posts/debug/WechatIMG28.jpeg","hash":"3ef13c40186607f2b3dab46eca4928295a44ca58","modified":1553758532235},{"_id":"source/_posts/debug/chromePerformance2.png","hash":"5e868d98d663bc9d13f4c0dd01dc1e682a7faf9d","modified":1553422123190},{"_id":"source/_posts/debug/clear-browser-cookies.png","hash":"f653d9accfc4cb5f32cdd0bfdfdc0ac9c9110c34","modified":1553577721525},{"_id":"source/_posts/debug/openfile.png","hash":"c6214d674339f584ec100b1890fdc89345d2a148","modified":1553694435675},{"_id":"source/_posts/debug/screenshot-hover.png","hash":"43fb34071654dc89ab2f07128086a28b01d4526d","modified":1553577193481},{"_id":"source/_posts/debug/伪元素.png","hash":"cc2ac6f32a65c65bd9b3f1ea827f5e367a17a7ec","modified":1552815312846},{"_id":"source/_posts/debug/屏幕快照 2019-03-17 下午10.56.24.png","hash":"03fc36dd9b1d70ab7346ac29eae74fd5bec8fc3b","modified":1552834595172},{"_id":"source/_posts/debug/屏幕快照 2019-03-26 下午12.54.07.png","hash":"926e15e1c1e53e5d835a4bd6e1cdb7f648cff7bd","modified":1553576053219},{"_id":"source/_posts/nginx/2.png","hash":"5abbd45536b84629c2c97605db36b320265d9b85","modified":1557118033422},{"_id":"source/_posts/nginx/3.png","hash":"3975c3d3efc2b4a793b94792fb46bdaff524e34f","modified":1557118033437},{"_id":"source/_posts/debug/添加新样式.png","hash":"e5dc32d834031e9cc125d1478a030b4fd1836484","modified":1553308309160},{"_id":"source/_posts/pictures/15332640085635.jpg","hash":"765ddc6e762fcad3e0289928a8c5af9988ffab97","modified":1533264008000},{"_id":"source/_posts/pictures/15332640185394.jpg","hash":"c8dd6b907d0dd8b1948a114a1b65b68804157e1d","modified":1533264018000},{"_id":"source/_posts/pictures/15332640316291.jpg","hash":"c8dd6b907d0dd8b1948a114a1b65b68804157e1d","modified":1533264031000},{"_id":"source/_posts/pictures/15332641324646.jpg","hash":"1db1208f4d92b928b362eb538d221f3fef30dd40","modified":1533264132000},{"_id":"source/_posts/pictures/位图.png","hash":"5a0e1017a341cf9d26f25f648eb2592b72f0bbdb","modified":1533203389000},{"_id":"source/_posts/pictures/图片分类.png","hash":"68f5c3e199cdf4f9476dd6599148f024c1c29d1e","modified":1533803833000},{"_id":"source/_posts/pictures/如何选择图片.jpeg","hash":"508482fc53bebdbc4b5e87608801263505687b4e","modified":1533723359000},{"_id":"source/_posts/debug/preserve-log.svg","hash":"c9ce74fcbba66ea7223893b23765ece6a1ab2a67","modified":1553575934055},{"_id":"source/_posts/debug/preserve-log.png","hash":"c9ce74fcbba66ea7223893b23765ece6a1ab2a67","modified":1553575991533},{"_id":"source/_posts/debug/屏幕快照 2019-03-23 上午11.07.15.png","hash":"e73697fdfd1bbdbcace15bf6d591b80343206541","modified":1553310440823},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午4.42.29.png","hash":"0b9e6a3d4ea8e8035553ae789fe8f17493c7ee25","modified":1553416955111},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午6.29.30 2.png","hash":"9d22f8e78d78816797480b745b5ff54d82ab4ec2","modified":1553423716180},{"_id":"source/_posts/debug/断点.png","hash":"f3e099ba8382003e18a1b1712a1ac7c461f17bbe","modified":1553311973759},{"_id":"source/_posts/debug/查看css.png","hash":"87b0d69aeac1cbaf86d8a7c09ad025808ffab1da","modified":1552813926842},{"_id":"source/demo/bootstrap/css/bootstrap-theme.css","hash":"ecf2245dd39ea3b17ccb4bea42cda46356376078","modified":1555122810478},{"_id":"source/demo/bootstrap/img/2.jpg","hash":"5b36056c23a38ac202b55d46b65afb27c0c41299","modified":1555122810483},{"_id":"source/_posts/pictures/矢量图.png","hash":"9343bef6c43a2b586159db91d7a257317f983ff3","modified":1533202451000},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1555122810481},{"_id":"source/demo/bootstrap/js/npm.js","hash":"e2b7590d6ec1fdac66b01fdf66ae0879f53b1262","modified":1555122810486},{"_id":"source/demo/bootstrap/webpage/12.nav.html","hash":"f377d8a276cacde9de90439498f6fd84a1aa1a37","modified":1555122810487},{"_id":"source/demo/bootstrap/webpage/4.form-2.html","hash":"46dab9f50c847f19e6317c0b1b1de1c199696cf5","modified":1555122810487},{"_id":"source/demo/bootstrap/webpage/6.button.html","hash":"80ee082e94f22eff534a29bfb2fed176ad8ac1a6","modified":1555122810487},{"_id":"source/demo/bootstrap/webpage/7.pictures.html","hash":"9f89d025522862d249b32844350ffdc59521087a","modified":1555122810487},{"_id":"source/demo/bootstrap/webpage/8.input-group-addon.html","hash":"35cc0e63836dd2b5706826771faa37f5f144d5a3","modified":1555122810487},{"_id":"source/demo/bootstrap/webpage/9.dropdown.html","hash":"c935691ae07d0bd3a9300c465a5c75a5c1edfb5c","modified":1555122810487},{"_id":"source/demo/html/css3新特性/css实现雷达图.html","hash":"1927f1c1a36dbd6dd4caef67d4e27f35a7d98545","modified":1555122810487},{"_id":"source/demo/html/css3新特性/task.1.13.css","hash":"703e8e563aebf59c52b4d51fc96099b6751d3bf7","modified":1555122810488},{"_id":"source/demo/html/css3新特性/task1.13_CSS3新特性.html","hash":"90dabc7fbf77396ea95a2bb1f1393cfc82668d02","modified":1555122810488},{"_id":"source/demo/html/css3新特性/task_1_12_1.jpg","hash":"1046badd68cba90d593adcf902461a3a929540c7","modified":1555122810488},{"_id":"source/demo/html/flexbox栅格化布局/Flexbox布局练习.html","hash":"9d53ac4f1039129bc22e25786ae9ac6c7fccd7bd","modified":1555122810489},{"_id":"source/demo/html/css3新特性/纯CSS3瀑布布局.html","hash":"f32529285e42062db32135f8b91ddd31810a9e4d","modified":1555122810489},{"_id":"source/demo/html/css3新特性/纯css实现全景移动.html","hash":"9e4212a923a9eb34481a099b11433b77a879965d","modified":1555122810489},{"_id":"source/demo/html/flexbox栅格化布局/task1.10.css","hash":"ab3a111277decd1288c97d0b9969ae1ec9a43a4c","modified":1555122810489},{"_id":"source/demo/html/响应式网格(栅格化)布局/task1.8_响应式网格(栅格化)布局.html","hash":"3b9a1a7dc00a763ac07ee848dafdb3f96a1fb3f2","modified":1555122810493},{"_id":"source/demo/html/响应式网格(栅格化)布局/task_1_8_1.png","hash":"b088a0aadc4cb5acb0cd12e7dc1caab2bd324b2b","modified":1555122810493},{"_id":"source/demo/html/响应式网格(栅格化)布局/task1.8.css","hash":"a08d1f3bad5b72d93db9f60e524ee54815845d1f","modified":1555122810493},{"_id":"source/demo/html/两栏式布局/task1.5.css","hash":"9ceef07c273d604ab1ecc305c3205bfa6ec33dcd","modified":1555122810490},{"_id":"source/demo/html/响应式网格(栅格化)布局/响应式网格(栅格化)布局.md","hash":"780ec0ab03ce54dd7f1ade3dcf0912c3af585eeb","modified":1555122810493},{"_id":"source/demo/html/两栏式布局/1.5.CSS_coding.html","hash":"82db69e65aa924f060d479b88af866d4a2657b02","modified":1555122810489},{"_id":"source/demo/html/实现一个复杂的页面/1.9.css","hash":"48bcefbab2ce830572409ae1afc840d2d463e775","modified":1555122810493},{"_id":"source/demo/html/实现一个复杂的页面/task1.9.实现一个复杂的页面.html","hash":"2d13920dc8187f029267d5676f4b02d6136d50b9","modified":1555122810502},{"_id":"source/demo/html/模拟报纸排版/1.6.css","hash":"cd37ba580d0a10c9faad57d9c674fd45d4a6f226","modified":1555122810504},{"_id":"source/demo/html/模拟报纸排版/1.6.newspaperLayout.html","hash":"2bd4fc77ae6c77d45534521a79252d4dc73a28ba","modified":1555122810504},{"_id":"source/demo/html/移动Web布局实践/task1.11.css","hash":"dd7e3a401cba2c8fd16377258a2bceea8b375499","modified":1555122810529},{"_id":"source/demo/html/移动Web布局实践/task1.11_移动Web布局实践.html","hash":"75bb0d3b0fc4d44860c78e79effe98bd0fbac834","modified":1555122810529},{"_id":"source/demo/html/页面架构及样式布局/task1.7.css","hash":"839d6d442f628d3e8c8c0fb43a915d941895081f","modified":1555122810547},{"_id":"source/demo/html/页面架构及样式布局/task1.7__页面架构及样式布局.html","hash":"c9e989a807b707be154f011dba1febc8bad2168c","modified":1555122810547},{"_id":"source/demo/html/页面架构及样式布局/task1.8__响应式网格(栅格化)布局.html","hash":"7f9a848314f4a717a64f7d15e47d5eeed7499447","modified":1555122810547},{"_id":"source/demo/jQuery特效/全屏滚动/1.全屏滚动.html","hash":"0eee78a910bf7b06ba90708620b2fa16d0748723","modified":1555122810551},{"_id":"source/demo/javaScript/2.dom操作/task.js","hash":"e47e1be2ee53086c7633ef9aa806a16976e7fc4e","modified":1555122810560},{"_id":"source/demo/javaScript/2.dom操作/task1.16.css","hash":"5eb5cfafc652ed13a27ec4b883eeb9e3f1c2a114","modified":1555122810561},{"_id":"source/demo/javaScript/2.dom操作/task1.16_零基础JavaScript编码.html","hash":"227fa9936372e99e5738c0d24f9da4c5cff64d99","modified":1555122810561},{"_id":"source/demo/javaScript/3.数据展示/task.js","hash":"c128c17287e618b5a673d14b93baf6759f8ad107","modified":1555122810561},{"_id":"source/demo/javaScript/3.数据展示/js实现数据展现.html","hash":"659202ad133cfe89b69eaadb88dfba560d905f95","modified":1555122810561},{"_id":"source/demo/javaScript/stylesheet/baidubaike.css","hash":"581577751c9dc809d2cc3c4e1a63ed605abebb26","modified":1555122810561},{"_id":"source/demo/javaScript/模拟QQ聊天/baidu.png","hash":"0e6e53f8b6a1d4c34ef45c82ce1df7a46b425b3f","modified":1555122810561},{"_id":"source/demo/javaScript/模拟QQ聊天/google.png","hash":"cf660a86fdc58098c25aa18021b899bc27a66b2d","modified":1555122810562},{"_id":"source/demo/javaScript/模拟QQ聊天/sendMessage.html","hash":"7a0a730133c194dd521403eb29ea45d2406810d8","modified":1555122810562},{"_id":"source/demo/js/build/react-dom-server.js","hash":"f643c30b1689aebfb4264b0130416f6e7f97a25d","modified":1555122810566},{"_id":"source/demo/js/build/react-dom-server.min.js","hash":"5266a7ab081b80c3c4cc762f11e522eee65d03f9","modified":1555122810566},{"_id":"source/demo/js/build/react-dom.js","hash":"15f0ad7516feeb2b30617a34f99dcbdbf3deb973","modified":1555122810566},{"_id":"source/demo/js/build/react-dom.min.js","hash":"e3b4a73fe2976c9356190460cddce6dadeed1343","modified":1555122810566},{"_id":"source/demo/reactjs/build/react-dom-server.min.js","hash":"5266a7ab081b80c3c4cc762f11e522eee65d03f9","modified":1555122810587},{"_id":"source/demo/reactjs/build/react-dom-server.js","hash":"f643c30b1689aebfb4264b0130416f6e7f97a25d","modified":1555122810587},{"_id":"source/demo/reactjs/build/react-dom.js","hash":"15f0ad7516feeb2b30617a34f99dcbdbf3deb973","modified":1555122810587},{"_id":"source/demo/reactjs/build/react-dom.min.js","hash":"e3b4a73fe2976c9356190460cddce6dadeed1343","modified":1555122810587},{"_id":"source/demo/website/css/style.css","hash":"8ca09ef733723b9c298ca682042d1b17179a820d","modified":1555122810593},{"_id":"source/demo/website/images/2.jpg","hash":"195cde3788812fe08c79fe1a7ea4c3116abd6925","modified":1555122810594},{"_id":"source/demo/website/images/20120216.jpg","hash":"c297c21f750f990820de56a3b838cf88d64e9204","modified":1555122810594},{"_id":"source/demo/website/images/4.jpg","hash":"09f696551fb4b00435bd9a6ecff10fce24c5fd8c","modified":1555122810595},{"_id":"source/demo/website/images/4.png","hash":"476ccbeacfe893e2bd8a1319b9ae17cfd1a61b7c","modified":1555122810595},{"_id":"source/demo/website/images/adindex.gif","hash":"d5cf336ee2b06e574c317b16602aedd33cc3468c","modified":1555122810595},{"_id":"source/demo/website/images/chos.gif","hash":"f8acfce1945de16741eb7491ddd77f49b3a6e8ef","modified":1555122810595},{"_id":"source/demo/website/images/5.jpg","hash":"5553e9625394ff3838d2bb0c6376051d39d20d77","modified":1555122810595},{"_id":"source/demo/website/images/5.png","hash":"59cbd59b73eb857f1dfeb77b8d60707a00572d47","modified":1555122810595},{"_id":"source/demo/website/images/hot.gif","hash":"9181113e3025ec702ec6aea5a77cd8dc20f29519","modified":1555122810596},{"_id":"source/demo/website/images/headerbg.png","hash":"3920ad2912d60c819dd8180928a7278f0f2a1f1f","modified":1555122810596},{"_id":"source/demo/website/images/logo.gif","hash":"686ea810a83c6163a6f0c8dcbcb777a42124b7d0","modified":1555122810596},{"_id":"source/demo/website/images/common.jpg","hash":"056f3d3ac9697152ad9b460b66cf36468d07a591","modified":1555122810596},{"_id":"source/demo/reactjs/reactDemo.png","hash":"2448f238d9572aa73ced528630b8cada927ce869","modified":1555122810593},{"_id":"source/demo/website/script/script.js","hash":"d05f444fdd86127f7d16ba7dedc30e8edc467c59","modified":1555122810598},{"_id":"source/demo/布局/单列居中布局/1.html","hash":"b172c5a566cb096dc0d35013dd8f94232cdef45b","modified":1555122810598},{"_id":"source/demo/布局/单列居中布局/2.html","hash":"8892ca2640139abd10c742b99abe1436593e53f1","modified":1555122810599},{"_id":"source/demo/布局/单列居中布局/3.html","hash":"15600147db3d4046a6270d7f4655106f8536af71","modified":1555122810599},{"_id":"source/demo/布局/单列居中布局/4.html","hash":"f32ae24bd5848a435414affcfd625468bc0b9b1c","modified":1555122810599},{"_id":"source/demo/布局/单列居中布局/单列居中布局解决放案.docx","hash":"92be4318a7342901cb3e7ad499d4bd628b0f241b","modified":1555122810599},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1555126277016},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1555126277016},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1555126277017},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1555126277017},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1555126277017},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1555126277017},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1555126277017},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1555126277018},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1555126277018},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1555126277017},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1555126277019},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1555126277023},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1555126277023},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1555126277024},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1555126277024},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1555126277025},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1555126277025},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1555126277026},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1555126277027},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1555126277027},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1555126277028},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午4.32.41.png","hash":"0b9007cb5d6c14b3db926d3f9bed161505d7c6bb","modified":1553416367011},{"_id":"source/demo/bootstrap/css/bootstrap-theme.min.css","hash":"4c936da026b2fb2e6b63d3d4ddbc3d9beb658d17","modified":1555122810480},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1555122810482},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1555122810482},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1555122810483},{"_id":"source/demo/bootstrap/js/bootstrap.min.js","hash":"6c264e0e0026ab5ece49350c6a8812398e696cbb","modified":1555122810484},{"_id":"source/demo/bootstrap/js/bootstrap.js","hash":"bbf55e20f1ebb6368522799f29db39830a08ef93","modified":1555122810484},{"_id":"source/demo/bootstrap/js/jquery.min__1.js","hash":"06e872300088b9ba8a08427d28ed0efcdf9c6ff5","modified":1555122810486},{"_id":"source/demo/html/css3新特性/timg.jpeg","hash":"ca92d5f8eb1592b05843a3f336d79403c5967381","modified":1555122810488},{"_id":"source/demo/js/jquery/jquery-1.12.1.min.js","hash":"f16bd01623fd56d1372ea2eb55cd52a28cd883f8","modified":1555122810575},{"_id":"source/demo/reactjs/jquery/jquery-1.12.1.min.js","hash":"f16bd01623fd56d1372ea2eb55cd52a28cd883f8","modified":1555122810590},{"_id":"source/demo/website/images/3.jpg","hash":"c2292d1bb531c510602e315501b9947e50850762","modified":1555122810594},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1555126277024},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1555126277026},{"_id":"source/demo/bootstrap/css/bootstrap-theme.css.map","hash":"abc2e3a1163de52378c71bb92d007c22abb0a393","modified":1555122810479},{"_id":"source/demo/bootstrap/css/bootstrap.css","hash":"6987e3bdad7a3a5d143ddf2453e29782dbd99c29","modified":1555122810480},{"_id":"source/demo/bootstrap/css/bootstrap.min.css","hash":"08df9a96752852f2cbd310c30facd934e348c2c5","modified":1555122810481},{"_id":"source/demo/bootstrap/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1555122810483},{"_id":"source/demo/bootstrap/js/jquery.min.js","hash":"276c87ff3e1e3155679c318938e74e5c1b76d809","modified":1555122810486},{"_id":"source/demo/html/两栏式布局/img/1.jpg","hash":"3a60d045f434b77194fb9f3d51f908f14252ccdf","modified":1555122810489},{"_id":"source/demo/html/两栏式布局/img/baidu.png","hash":"cb424dfba12f371ea71f31cd3a2f09b1445ba2cb","modified":1555122810490},{"_id":"source/demo/html/实现一个复杂的页面/img/brand.png","hash":"ad2947d5069944f91aaa5765be5765e135782e31","modified":1555122810494},{"_id":"source/demo/html/实现一个复杂的页面/img/account.jpg","hash":"3d7aaac74070e8c1e405ad32eef4d007baeb56ed","modified":1555122810494},{"_id":"source/demo/html/实现一个复杂的页面/img/calender.jpg","hash":"ba67faaebef3445c0d6e8607c67c40c349f8e86e","modified":1555122810494},{"_id":"source/demo/html/实现一个复杂的页面/img/file1.png","hash":"b5a7931ea569935bd08e7fb72bd0900e01b6f64e","modified":1555122810494},{"_id":"source/demo/html/实现一个复杂的页面/img/folder1.png","hash":"8e95ab66307654bf132bc25df3a0ff8875133429","modified":1555122810495},{"_id":"source/demo/html/实现一个复杂的页面/img/folder.png","hash":"031be8dcb51d8992caf4d3ab2f6a5d4dd1206bde","modified":1555122810494},{"_id":"source/demo/html/实现一个复杂的页面/img/login.png","hash":"bbc8355cbc2299a8e290077e184c7c0a5e9fe642","modified":1555122810496},{"_id":"source/demo/html/实现一个复杂的页面/img/hht.jpg","hash":"27f68f460bdde5d032cd60ecedc52bc6c30571e9","modified":1555122810495},{"_id":"source/demo/html/实现一个复杂的页面/img/report.png","hash":"a03f7b8b3b616865aeb1eed1656b8b84ab9ea92f","modified":1555122810496},{"_id":"source/demo/html/实现一个复杂的页面/img/share.png","hash":"39a706bbbb40ce905e637f3d67bcd052db2a4e5f","modified":1555122810496},{"_id":"source/demo/html/实现一个复杂的页面/img/star.png","hash":"3b22819a246c03f6c358ae1080368787f65cd69e","modified":1555122810496},{"_id":"source/demo/html/模拟报纸排版/img/brand.png","hash":"1a95bff68b94d81c0c34f1455a8788ae8ca9388f","modified":1555122810505},{"_id":"source/demo/html/模拟报纸排版/img/pic.jpg","hash":"c13c61d67d30c30a7a02f0e33f33b5b44e638b47","modified":1555122810505},{"_id":"source/demo/html/移动Web布局实践/img/2.jpg","hash":"958079b67aee6a1f58bd0a0c766f91679aaae8ed","modified":1555122810528},{"_id":"source/demo/html/移动Web布局实践/img/3.jpg","hash":"54c3d956b30b374751e43093786fe5975d2c0c73","modified":1555122810528},{"_id":"source/demo/html/移动Web布局实践/img/4.jpg","hash":"ef7f71fd97b67025903260e88c7bea9bd5ec8557","modified":1555122810528},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_01.png","hash":"e630f4a491799053c79dcbdb82b02c9362a2ece1","modified":1555122810543},{"_id":"source/demo/html/移动Web布局实践/img/6.jpg","hash":"138312b1da71d3ca139c21bf33be4949a6fdfca9","modified":1555122810528},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_02.png","hash":"fe54b2645d7a316d296371f05ce3f2ef6398da94","modified":1555122810543},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_03.png","hash":"b9e826cb09df019fd602a28ddb00cfff6533721f","modified":1555122810543},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_04.png","hash":"75a573483c6f10a746e2e3dec485c080c9d318f7","modified":1555122810543},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_05.png","hash":"afb26b21c7b1c5a7be585029fe8eaa91367d4eaa","modified":1555122810543},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_06.png","hash":"e9ab3e0eaf4856c9e4fd94ba127b0f68d8cd8748","modified":1555122810543},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_07.png","hash":"30e2bbbcde18e639302f7ca74a004cb4e1149455","modified":1555122810544},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_08.png","hash":"35aeb8cd0b99ae8b3feccc2e10a445de7c1dc427","modified":1555122810544},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_10.png","hash":"58970cf364e445c917d0232b13132aece363cf32","modified":1555122810544},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_15.png","hash":"8f7b709e93ae5c285812628ccecc217957646acc","modified":1555122810545},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_2.jpg","hash":"3a26cefdd04ef28da4167d727caf1f6efcfef2b1","modified":1555122810545},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_3.jpg","hash":"a89099cc493fddbaffbcecc8181e269bb64cb2d8","modified":1555122810545},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_4.jpg","hash":"781d791b0f3b08b32aea041d557ba5b9b097a90b","modified":1555122810546},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_5.jpg","hash":"3260068671b8f734b07e31441bd93f2222591cd2","modified":1555122810546},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_6.jpg","hash":"c39622be3a38f7c95dc17cf3073a6377bd83b8a0","modified":1555122810546},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_9.png","hash":"e109d710161b31b616d1b5aedd6e41324b4c4f46","modified":1555122810547},{"_id":"source/demo/jQuery特效/全屏滚动/css/bootstrap.css","hash":"16b3279166dae1c248ded07608e82f898d3792c5","modified":1555122810551},{"_id":"source/demo/jQuery特效/全屏滚动/css/style.css","hash":"9ac5518badabdc7cad65e72817b203db7828f4f4","modified":1555122810551},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1555122810552},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1555122810553},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1555122810552},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1555122810553},{"_id":"source/demo/jQuery特效/全屏滚动/img/bg2.jpg","hash":"ebf1b6f8e0def63fd2e424dddf8d5b043694b849","modified":1555122810553},{"_id":"source/demo/jQuery特效/全屏滚动/img/bg1.jpg","hash":"1744ea97518620df6a15b6cabe849c7cd94c1af7","modified":1555122810553},{"_id":"source/demo/jQuery特效/全屏滚动/img/item2-2.jpg","hash":"2e943319fe78b77743450c1b78dc96a382b1d7e6","modified":1555122810556},{"_id":"source/demo/jQuery特效/全屏滚动/img/item1-31.jpg","hash":"5b928b020479583cecc37c972a63178ea5232943","modified":1555122810556},{"_id":"source/demo/jQuery特效/全屏滚动/img/item1-1.jpg","hash":"51acb9823529a2f10c8f21820f692976234328f9","modified":1555122810555},{"_id":"source/demo/jQuery特效/全屏滚动/img/hht.jpg","hash":"27f68f460bdde5d032cd60ecedc52bc6c30571e9","modified":1555122810555},{"_id":"source/demo/jQuery特效/全屏滚动/img/item2-1.jpg","hash":"71de269be1fda9a76b85e7d562815bb9977be0e9","modified":1555122810556},{"_id":"source/demo/jQuery特效/全屏滚动/img/item3-1.jpg","hash":"40a8eb8f51a14d9be43c42ed8ddaf578c7c21693","modified":1555122810556},{"_id":"source/demo/jQuery特效/全屏滚动/img/item3-2.jpg","hash":"56e3a62bf29b5ca0de2fc8e98787fd55046a6f40","modified":1555122810556},{"_id":"source/demo/jQuery特效/全屏滚动/img/item4-1.jpg","hash":"53b4eeb95c7375e881a7def7f89a7f9e70e82980","modified":1555122810556},{"_id":"source/demo/jQuery特效/全屏滚动/img/item4-2.jpg","hash":"67e77be74c800755ac73b58f3735c398c5044338","modified":1555122810556},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill1-1.jpg","hash":"4685a9e39c78d5b28be25490c6588f3998e22b3b","modified":1555122810556},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill2-1.jpg","hash":"7b13c93c8707f1d7f28fb918c3e83eaf6684b84d","modified":1555122810557},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill2.jpg","hash":"0638d721d1cf52f7259a7aa0669f3bc40460e88a","modified":1555122810557},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill1.jpg","hash":"6f5398ba1a68afb75d1e6b52728b4b1f4c4bdcb7","modified":1555122810557},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill2-2.jpg","hash":"35487feee995a27b898aa267c88475712f41c73a","modified":1555122810557},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill2.png","hash":"889d3e124e3f94046582f7e48cf151098c14cb0f","modified":1555122810558},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill3-1.jpeg","hash":"88f076027ff7759a6709baf47b652532feed200c","modified":1555122810558},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill3.JPEG","hash":"b978b74844554483850260ccfbc1f018c804a431","modified":1555122810558},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill4.jpg","hash":"9199d03a1d717b4c4f5998316626d69f735226fb","modified":1555122810558},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill4-1.jpg","hash":"9d48e2d82f8518ac3df04025429c5e677db786a1","modified":1555122810558},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill5.png","hash":"cc07128cb8e37926439ab81ddeceea9d59e4207f","modified":1555122810559},{"_id":"source/demo/jQuery特效/全屏滚动/img/skill5-1.png","hash":"db84d509e1dfe2cddc38a83c61f21756b7ef128c","modified":1555122810559},{"_id":"source/demo/jQuery特效/全屏滚动/img/title.png","hash":"e109d710161b31b616d1b5aedd6e41324b4c4f46","modified":1555122810559},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/item1.jpg","hash":"344284028a32e6e9f03c5c4fc83407f40c91b1e4","modified":1555122810559},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/jquery.fullPage.css","hash":"a911c202cc1d4c30362893c457c2aeb4bf7dc4d8","modified":1555122810559},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/item2.jpg","hash":"658a31a74ed526acc8c4ed7745ba57e7335adcd4","modified":1555122810559},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/jquery.fullPage.min.js","hash":"551c68657c653c9dec7f385aef036b8237600b8f","modified":1555122810560},{"_id":"source/demo/js/build/react-with-addons.min.js","hash":"2045c8496f27489a4cc5769f2ad32f732164f5e6","modified":1555122810570},{"_id":"source/demo/js/build/react.min.js","hash":"7cb0f056e2dceb9f5a4939252f1e0f1d7d90e7c0","modified":1555122810574},{"_id":"source/demo/reactjs/Demos/sampleDemos/0.Reactjs模板.html","hash":"a26232339c925b6653bec2173dd8fe23be1db0c0","modified":1555122810581},{"_id":"source/demo/reactjs/Demos/sampleDemos/2.JSX的简单语法.html","hash":"8055e41d206a5496719db70f7083c52ce8f0ada1","modified":1555122810582},{"_id":"source/demo/reactjs/Demos/sampleDemos/3.我来自于HHT的组件.html","hash":"1c371e9ee5392ea81a5a0201d345194bcd78cae7","modified":1555122810582},{"_id":"source/demo/reactjs/Demos/sampleDemos/5.propTypes__验证属性是否符合规范.html","hash":"c7aa8f91c3d71e4a94420cdb4a655f1a99cd23ad","modified":1555122810582},{"_id":"source/demo/reactjs/Demos/sampleDemos/1.简单的reactjs示例.html","hash":"17742df9d5c09e5f9ddf63d8aedd2b9a2b89b8e4","modified":1555122810581},{"_id":"source/demo/reactjs/Demos/sampleDemos/4.this.props.children.html","hash":"db4abb3f9201a534d63f0bdf25143f3916c60b9a","modified":1555122810582},{"_id":"source/demo/reactjs/Demos/sampleDemos/6.getDefaultProps.html","hash":"39b2885689aec5d7d58ac745c86e47787977d540","modified":1555122810582},{"_id":"source/demo/reactjs/Demos/sampleDemos/8.表单.html","hash":"a375e65c5c099a094b68dfdf0317d26bac1d61f6","modified":1555122810582},{"_id":"source/demo/reactjs/build/react-with-addons.min.js","hash":"2045c8496f27489a4cc5769f2ad32f732164f5e6","modified":1555122810588},{"_id":"source/demo/reactjs/build/react.min.js","hash":"7cb0f056e2dceb9f5a4939252f1e0f1d7d90e7c0","modified":1555122810590},{"_id":"source/demo/website/images/1.jpg","hash":"0e47a11f3882569f7bf344b638d7f5c1a6bb515b","modified":1555122810593},{"_id":"source/demo/reactjs/Demos/sampleDemos/7.this.state.html","hash":"c2eb211a3fe8c46f8d4631af4020ae42d1da0c32","modified":1555122810582},{"_id":"source/demo/reactjs/Demos/sampleDemos/9.组件的嵌套.html","hash":"751e3bb00ae018f3618cfc45ec41d1078d724c72","modified":1555122810582},{"_id":"source/demo/website/images/upload/1.jpg","hash":"c297c21f750f990820de56a3b838cf88d64e9204","modified":1555122810596},{"_id":"source/demo/website/images/upload/3.jpg","hash":"f06469d9a28e0dc15d4818a08196ba19d75fe532","modified":1555122810596},{"_id":"source/demo/website/images/upload/4.png","hash":"476ccbeacfe893e2bd8a1319b9ae17cfd1a61b7c","modified":1555122810597},{"_id":"source/demo/website/images/upload/2.jpg","hash":"0d4b0f3434d85fea36dab6d0213e853db7289c01","modified":1555122810596},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/2.float(double)+margin.html","hash":"d02beacf0cba1f7025e21f1a02301bacbbcf0359","modified":1555122810600},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/1.float(single)+margin.html","hash":"e06a1400c7013600c3123a46d50ae7e2e43b1482","modified":1555122810599},{"_id":"source/demo/website/images/upload/5.png","hash":"59cbd59b73eb857f1dfeb77b8d60707a00572d47","modified":1555122810597},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/1.float(single)+margin.png","hash":"41407984bb409690ef58c5b2dcb1088c7415273b","modified":1555122810599},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/3.float+overflow.html","hash":"c31bcbbadaab03db81fa3a0de04c250b9f2be2cf","modified":1555122810600},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/4.table.html","hash":"02ae75e1a0574b7a6ddac5286241ef8f38c6d3e2","modified":1555122810600},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/2.float(double)+margin.png","hash":"a0c2df39a65c82839aa622ca8e0f7388e0bfbc7a","modified":1555122810600},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/3.float+overflow.png","hash":"c80f6f96395c4b6a5a71d49a1fdbdbf2af5fde44","modified":1555122810600},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/5.flex.html","hash":"3c44a837b0786c61ffac3356e08f9cce5d667ca1","modified":1555122810601},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/4.table.png","hash":"ef17be79920de910bf945cf699c42aa97946cf26","modified":1555122810601},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/5.flex.png","hash":"a77449a1a7316c08526f7bc8774293e85c124854","modified":1555122810601},{"_id":"source/demo/布局/多列布局/1.定宽加自适应/多列布局之定宽+自适应.md","hash":"7851cde6374e400844d1eb1c79eab59c6b0c7823","modified":1555122810601},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/2.table.html","hash":"3c0d33cec71c5fbb5de8610c7870e8cd662fdcf5","modified":1555122810602},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/1、float+overflow.jpg","hash":"9e8608e08c17b48113ca5a8a3bd724e5c747ef0c","modified":1555122810601},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/1.float+overflow.html","hash":"65ec6e90e90dcfeaad8251467de2c3bf290ad724","modified":1555122810601},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/2、table.jpg","hash":"90ad3404e2f7e7968b9f08d2faa560998e2ae7e5","modified":1555122810602},{"_id":"source/slider.js","hash":"a857e5aaefdac2ac214cb4b549d0743657ab4fba","modified":1555122810625},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/3.flex.html","hash":"012ce1323343c421173f78b2346bc63217f6012d","modified":1555122810602},{"_id":"source/demo/布局/多列布局/2.不定宽加自适应/3、flex布局.jpg","hash":"89281532358f4dda1f7e026c92217c345c0707b4","modified":1555122810602},{"_id":"source/demo/html/移动Web布局实践/img/5.jpg","hash":"106e825a6c59cbfa4c8d1820a2be28653e56b08a","modified":1555122810528},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_7.jpg","hash":"cd0d5a9c2151f4077d324d6677d3780f2a50aa5e","modified":1555122810546},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_8.jpg","hash":"da5a1d1196f5f905daac2ccb280402ae5735fefe","modified":1555122810547},{"_id":"source/demo/jQuery特效/全屏滚动/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1555122810552},{"_id":"source/demo/jQuery特效/全屏滚动/jquery/jquery.min.js","hash":"06e872300088b9ba8a08427d28ed0efcdf9c6ff5","modified":1555122810560},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午3.44.39.png","hash":"a3e7e502d159f8322953d3c3535af8e9170f323d","modified":1553413485177},{"_id":"source/_posts/debug/屏幕快照 2019-03-23 上午10.49.24.png","hash":"25d3b489bea1b37b836f87112f4855398e8aea53","modified":1553309381223},{"_id":"source/demo/bootstrap/img/1.jpg","hash":"9ca59d84bf54283282fee0501644ef126ed80de7","modified":1555122810483},{"_id":"source/demo/html/移动Web布局实践/img/1.jpg","hash":"1fceffde45b417913cb761346c9598bfd6060a36","modified":1555122810528},{"_id":"source/demo/html/模拟报纸排版/img/picture.png","hash":"f2a757e821d999ad00d68c5c9be5e7f3d5eaf311","modified":1555122810505},{"_id":"source/demo/html/页面架构及样式布局/img/task_1_07_1.jpg","hash":"4e0afdebe4e7c23ca3d4cb3824bab9cb8904927b","modified":1555122810544},{"_id":"source/demo/reactjs/Demos/components/search/searchBox.html","hash":"7293eebd18471e63da563a693db250e5cf8959e8","modified":1555122810580},{"_id":"source/demo/reactjs/Demos/components/search/searchBox.php","hash":"84412cd4395a29cef49914bcc49bac3974b524bf","modified":1555122810580},{"_id":"source/demo/reactjs/Demos/components/search/thinking-in-react-components.png","hash":"db05fbd63c4edd7fb1263c85c7463a089f25e0e0","modified":1555122810580},{"_id":"source/demo/reactjs/Demos/components/commentBox/comment.php","hash":"c832012b6f10b68957237d3e7323d8b0ce031043","modified":1555122810577},{"_id":"source/demo/reactjs/Demos/components/commentBox/commentBox.html","hash":"cb06884da39530e5fa3fe02011defd603c447f49","modified":1555122810577},{"_id":"source/demo/reactjs/Demos/components/commentBox/comments.php","hash":"c832012b6f10b68957237d3e7323d8b0ce031043","modified":1555122810577},{"_id":"source/demo/reactjs/Demos/components/searchBox/searchBox - 副本.html","hash":"5d8cddaa9b942d79d87d587bc9b89098f4d6dfdc","modified":1555122810580},{"_id":"source/demo/reactjs/Demos/components/searchBox/searchBox.html","hash":"9eb5b669f3759ea6b022a21211aca58eb1a54ae9","modified":1555122810581},{"_id":"source/demo/reactjs/Demos/components/searchBox/thinking-in-react-components.png","hash":"db05fbd63c4edd7fb1263c85c7463a089f25e0e0","modified":1555122810581},{"_id":"source/demo/reactjs/Demos/components/searchBox/searchBox.php","hash":"84412cd4395a29cef49914bcc49bac3974b524bf","modified":1555122810581},{"_id":"source/demo/js/jquery/jquery.js","hash":"73d15ef036af1980629bcde3f32cc5869654ad4c","modified":1555122810577},{"_id":"source/demo/jQuery特效/全屏滚动/img/bg4.jpg","hash":"361ecccab0f77201ef0589afcef4907d2d49934b","modified":1555122810555},{"_id":"source/demo/reactjs/jquery/jquery.js","hash":"73d15ef036af1980629bcde3f32cc5869654ad4c","modified":1555122810592},{"_id":"source/main.js","hash":"0924738d804a287c4566638828391f828c4eb9e3","modified":1555122810620},{"_id":"source/_posts/debug/audits-2.png","hash":"1f75f891611b3a381c193bd2a032ed6c7a0a42db","modified":1553750644160},{"_id":"source/demo/bootstrap/js/jquery.js","hash":"0d7896e2bb23f88e26e52b22a075350b354df447","modified":1555122810485},{"_id":"source/demo/reactjs/Demos/components/search/script/search.js","hash":"fa8ba2cfd11493c945a7ca45eb91c6df6b2af9d6","modified":1555122810579},{"_id":"source/demo/reactjs/Demos/components/search/style/search.css","hash":"4739f191f6ebac47da26bed28953bae8205ffd6d","modified":1555122810580},{"_id":"source/demo/reactjs/Demos/components/commentBox/img/baidu.jpg","hash":"c37ca0fe2cfca07b6390ba01bc7ddc7231c9414a","modified":1555122810577},{"_id":"source/demo/reactjs/Demos/components/commentBox/img/google.jpg","hash":"8e127746ba855818da991c6d3e5103a7ea87f775","modified":1555122810578},{"_id":"source/demo/reactjs/Demos/components/commentBox/img/huohu.jpg","hash":"9a41c588f81b5c49a5e3d35aad0c0762a4dd15d5","modified":1555122810578},{"_id":"source/demo/reactjs/Demos/components/commentBox/script/CommentBox.html","hash":"d16962608bd5736bb7b82d79545ce05132858897","modified":1555122810578},{"_id":"source/demo/reactjs/Demos/components/commentBox/script/commentBox.js","hash":"bd9e44c56a6c7a257eb9ccb4d4dc21ee3cef90f3","modified":1555122810578},{"_id":"source/demo/reactjs/Demos/components/commentBox/script/main.js","hash":"36dce037fac6a4ac60ac79e37fa3b9381398c085","modified":1555122810578},{"_id":"source/demo/reactjs/Demos/components/searchBox/script/search.js","hash":"fa8ba2cfd11493c945a7ca45eb91c6df6b2af9d6","modified":1555122810580},{"_id":"source/demo/reactjs/Demos/components/commentBox/完成效果图.jpg","hash":"6777fdd494089caef7b95c53a946150fe610558a","modified":1555122810579},{"_id":"source/demo/reactjs/Demos/components/commentBox/style/commentBox.css","hash":"e7302f09cc5ca1089be0d8c720667fca36fc0a66","modified":1555122810579},{"_id":"source/demo/reactjs/Demos/components/searchBox/style/search.css","hash":"4739f191f6ebac47da26bed28953bae8205ffd6d","modified":1555122810581},{"_id":"source/demo/website/script/jquery.js","hash":"73d15ef036af1980629bcde3f32cc5869654ad4c","modified":1555122810598},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午6.29.30.sketch","hash":"b0d75a34670244c6f81117ebd71c553c500da007","modified":1553423648026},{"_id":"source/demo/html/实现一个复杂的页面/task_1_9_2.jpg","hash":"598cac3d8bcbc34092021b6be49c81ee043d3b6c","modified":1555122810504},{"_id":"source/demo/jQuery特效/全屏滚动/img/bg3.jpg","hash":"fb4e3c80c26a8c228cf7387bab36d5be85712584","modified":1555122810555},{"_id":"source/demo/reactjs/Demos/components/commentBox/script/require.js","hash":"54e7b2f47119d7a56295f248672b7387bf5025eb","modified":1555122810579},{"_id":"source/demo/html/移动Web布局实践/task_1_11_1.jpg","hash":"4131b1f9786a72edb7f93368d5c340a4a59be8be","modified":1555122810531},{"_id":"source/demo/html/两栏式布局/task_1_5_1.jpg","hash":"29e1841ba4f6cf4f6b8af52fd92c2d7b22729218","modified":1555122810492},{"_id":"source/demo/bootstrap/css/bootstrap.css.map","hash":"16506513c5f3d95982e73fb6820cf3c4c58d6897","modified":1555122810481},{"_id":"source/demo/html/模拟报纸排版/img/show.png","hash":"f759d4b298db186813029e2a9c5d2fd78758e6b0","modified":1555122810506},{"_id":"source/demo/html/移动Web布局实践/实现效果.jpg","hash":"2cd451466ca2828518cc173e430c4059a22ee9d4","modified":1555122810534},{"_id":"source/demo/html/页面架构及样式布局/task_1_7_2.jpg","hash":"225391c075d24f48aaa8907d819706df82ad4ae5","modified":1555122810550},{"_id":"source/_posts/debug/屏幕快照 2019-03-28 下午3.34.17.png","hash":"ea10c0e2e278795a8207c9b44ecf63aa55f2a6bc","modified":1553758462818},{"_id":"source/demo/js/build/react.js","hash":"52f02d76035fef50127d73e406e79e763391d266","modified":1555122810573},{"_id":"source/demo/js/build/react-with-addons.js","hash":"74f736f710d8ce90e9605c1411fdd20bee6d4c52","modified":1555122810569},{"_id":"source/demo/reactjs/build/react.js","hash":"52f02d76035fef50127d73e406e79e763391d266","modified":1555122810589},{"_id":"source/demo/html/模拟报纸排版/task_1_6_3.jpg","hash":"25e0c080c7a032486b221eabadb5af4c0adab8ed","modified":1555122810527},{"_id":"source/demo/reactjs/build/react-with-addons.js","hash":"74f736f710d8ce90e9605c1411fdd20bee6d4c52","modified":1555122810588},{"_id":"source/demo/js/build/browser.min.js","hash":"9c9af35a79ecc365a59f774510b1070b194175a9","modified":1555122810566},{"_id":"source/demo/reactjs/build/browser.min.js","hash":"9c9af35a79ecc365a59f774510b1070b194175a9","modified":1555122810587},{"_id":"source/demo/html/实现一个复杂的页面/img/sunrise.jpg","hash":"4435a17175b380c7b1f62c41b26b9828c83ced81","modified":1555122810502},{"_id":"source/demo/html/页面架构及样式布局/T07__新世界__By__HHT.png","hash":"b5410faec120b38045f765efe351f70b7c613c13","modified":1555122810543},{"_id":"source/demo/html/模拟报纸排版/task_1_6_1.psd","hash":"09f3632a78ee4afbafb013bcdac40ca7a105a7d9","modified":1555122810524}],"Category":[],"Data":[],"Page":[],"Post":[{"layout":"post","title":"JS常用API整理","date":"2017-08-26T16:00:00.000Z","_content":"\n### 数组常见API整理\n\n<!-- more -->\n\n![Array](./JS常用API整理/Array.png)\n### Object常见API整理\n![Object](./JS常用API整理/Object.png)\n\n### String常见API整理\n![String](./JS常用API整理/String.png)\n\n","source":"_posts/JS常用API整理.md","raw":"---\nlayout: post\ntitle: JS常用API整理\ndate: 2017-08-27\ntags:\n    - API\n    - JS\n---\n\n### 数组常见API整理\n\n<!-- more -->\n\n![Array](./JS常用API整理/Array.png)\n### Object常见API整理\n![Object](./JS常用API整理/Object.png)\n\n### String常见API整理\n![String](./JS常用API整理/String.png)\n\n","slug":"JS常用API整理","published":1,"updated":"2019-04-13T09:58:41.483Z","comments":1,"photos":[],"link":"","_id":"cjvbvwwlx0000re6h92nb2aq5","content":"<h3 id=\"数组常见API整理\"><a href=\"#数组常见API整理\" class=\"headerlink\" title=\"数组常见API整理\"></a>数组常见API整理</h3><a id=\"more\"></a>\n<p><img src=\"/2017/08/27/JS常用API整理/Array.png\" alt=\"Array\"></p>\n<h3 id=\"Object常见API整理\"><a href=\"#Object常见API整理\" class=\"headerlink\" title=\"Object常见API整理\"></a>Object常见API整理</h3><p><img src=\"/2017/08/27/JS常用API整理/Object.png\" alt=\"Object\"></p>\n<h3 id=\"String常见API整理\"><a href=\"#String常见API整理\" class=\"headerlink\" title=\"String常见API整理\"></a>String常见API整理</h3><p><img src=\"/2017/08/27/JS常用API整理/String.png\" alt=\"String\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"数组常见API整理\"><a href=\"#数组常见API整理\" class=\"headerlink\" title=\"数组常见API整理\"></a>数组常见API整理</h3>","more":"<p><img src=\"/2017/08/27/JS常用API整理/Array.png\" alt=\"Array\"></p>\n<h3 id=\"Object常见API整理\"><a href=\"#Object常见API整理\" class=\"headerlink\" title=\"Object常见API整理\"></a>Object常见API整理</h3><p><img src=\"/2017/08/27/JS常用API整理/Object.png\" alt=\"Object\"></p>\n<h3 id=\"String常见API整理\"><a href=\"#String常见API整理\" class=\"headerlink\" title=\"String常见API整理\"></a>String常见API整理</h3><p><img src=\"/2017/08/27/JS常用API整理/String.png\" alt=\"String\"></p>"},{"title":"My-first-post","date":"2016-01-01T16:00:00.000Z","_content":"","source":"_posts/My-first-post.md","raw":"---\ntitle: My-first-post\ndate: 2016-01-02\ntags: \n     My-first-post\n---","slug":"My-first-post","published":1,"updated":"2019-04-13T04:27:38.938Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwm30001re6h9eh66pdy","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Javascript 设计模式与开发实践","date":"2017-12-27T16:00:00.000Z","_content":"\n\n文中总结内容来自于《JavaScript设计模式与开发实践》\n\n[设计模式](https://note.youdao.com/ynoteshare1/index.html?id=e321fcee20306f5d0fb56740c9c7962a&type=note)\n\n点击链接进入云笔记分享页查看","source":"_posts/design-pattern.md","raw":"---\ntitle: Javascript 设计模式与开发实践\ndate: 2017-12-28\ntags:\n    - 设计模式\n    - 云笔记\n---\n\n\n文中总结内容来自于《JavaScript设计模式与开发实践》\n\n[设计模式](https://note.youdao.com/ynoteshare1/index.html?id=e321fcee20306f5d0fb56740c9c7962a&type=note)\n\n点击链接进入云笔记分享页查看","slug":"design-pattern","published":1,"updated":"2019-04-13T10:00:58.565Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwm80003re6hl27gleqj","content":"<p>文中总结内容来自于《JavaScript设计模式与开发实践》</p>\n<p><a href=\"https://note.youdao.com/ynoteshare1/index.html?id=e321fcee20306f5d0fb56740c9c7962a&amp;type=note\" target=\"_blank\" rel=\"noopener\">设计模式</a></p>\n<p>点击链接进入云笔记分享页查看</p>\n","site":{"data":{}},"excerpt":"","more":"<p>文中总结内容来自于《JavaScript设计模式与开发实践》</p>\n<p><a href=\"https://note.youdao.com/ynoteshare1/index.html?id=e321fcee20306f5d0fb56740c9c7962a&amp;type=note\" target=\"_blank\" rel=\"noopener\">设计模式</a></p>\n<p>点击链接进入云笔记分享页查看</p>\n"},{"title":"前后端分离部署","date":"2019-04-26T02:55:15.000Z","_content":"\n#### 一、为什么要前后端分离部署 —— 解耦\n传统的前后端开发模式是前端开发完成后将html、css、js等静态资源传给后端，然后由后端对静态资源进行部署，并配置相应的路径指向对应的html。这种模式存在很大的一个问题是前后端的耦合很紧密，前端修改内容后依靠后端上线(即使后端不改)，或者后端的更改也可能会影响前端。\n\n<!-- more -->\n\n这种耦合度高的模式，在开发、调试、测试、部署等环节都相互制约着，影响着彼此的开发效率，而且出错率高。\n\n在传统模式的基础上衍生出另一种模式，这种模式和前者的区别是css、js等静态资源在cdn(或其他服务器)上部署，html直接引静态资源的路径。相比前者，这种模式做了一些优化，但还不够彻底，依然存在耦合度等问题。\n\n为了解决上述问题，采用前后端分离开发部署的方式。那么，什么是前后端分离开发部署？前后端分离开发部署就是前后并行开发，一般是两个不同的repository，在开发完成后，经过测试、部署后两个可以独立访问。\n\n#### 二、怎样实现前后端分离部署\n**前后端分离部署结构图：**\n\n<img src=\"./deploy/deploy.png\" width = \"100%\" />\n\n**从图中我们可以看出：**\n- 1、前后端相互独立，分开部署，前端server提供html、css、js、图片等静态资源，后端提供数据服务，js通过接口将前后端建立连接。\n- 2、前后端各有一个服务器。图示中为Nginx服务器，实际中可以为其他服务器，每个服务器为各端服务\n- 3、前后端分离部署对用户而言是透明的，无感知的。对于开发人员来说，降低前后端耦合度，各端主要精力放在自身服务上，而不用过多关注对方的变动\n\n#### 三、前后端分离部署应注意的问题\n前后端分离部署为开发人员提供了一些便利，但也存在一些问题需要解决：\n\n**跨域**\n\n - 问题描述：前后端部署在不同的服务器上，隶属不同的域名，在浏览器同源的限制下，前端请求后端接口存在跨域问题\n - 解决方案：\n    - 借助nginx反向代理来解决跨域\n    - 借助CORS来解决跨域\n    - 其他跨域解决方案(自行百度)。。。\n\n1、借助Nginx反向代理来解决跨域\n\n```\n// nginx.conf文件\nserver {\n\n    listen 80; // 默认访问80端口\n    server_name XXX.com; // 域名\n    root \"C:/front_end/build\"; // 前端静态文件的存放目录\n    location / {\n      try_files $uri /index.html;\n    }\n    \n    // nginx的反向代理来解决跨域，'/api'——接口的路径\n    location /api {\n        // 前端请求路径以/api开头时，Nginx会代理到proxy_pass上\n        proxy_pass http://localhost:8082; // 后端运行的端口\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection ‘upgrade’;\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n  }\n```\n\nNginx的相关知识，请查阅[前端开发者必备的 Nginx 知识](https://mp.weixin.qq.com/s/BA_JZ_kMBFZBE7jjQDNc1Q)，这篇文章讲的很详细\n\n2、后端处理\n前端需要跨域需要后端设置Access-Control-Allow-Origin字段，设置为*或者对应域名\n\n```\nAccess-Control-Allow-Origin: * // 允许来自任何域名的跨域请求\n或\nAccess-Control-Allow-Origin: http://www.google.com // 允许来自特定域名的跨域请求\n```\n\n3、特殊情况\n\n- 最近做的项目是前后端分离部署的，前后端不仅存在跨域问题，而且还需要携带cookie，对于这种情况需要前端在请求头带上`withCredentials: true`，具体的携带方法，不同的请求库设置方式不同，`axios.defaults.withCredentials = true`(axios)，`Vue.http.options.xhr = { withCredentials: true }`(vue-resource)，其他请求库的设置方法自行百度。\n- 当withCredentials的情况下，后端要设置Access-Control-Allow-Origin为特定域名的请求，而不能设置为`*`，而应该是具体的域名，而且需要这是Access-Control-Allow-Credentials为true\n\n```\nAccess-Control-Allow-Origin: http://www.google.com \nAccess-Control-Allow-Credentials: true\n```\n \n**部署**\n\n- 问题描述：前后端上线顺序的问题。前后端在既定的接口服务上线了，但随着后续需求的变化，接口A发生变动，前端需要对改变后接口的处理，存在的问题是：假如后端先上线，那么前端之前的代码并未兼容后端的新接口，会存在一定的问题；假如前端先上线，那么前端请求的接口A还是老的接口，也会存在问题。\n- 解决方案：\n    - 前后端服务在流量少的时候部署，这时候影响范围小，但仍有风险\n    - 前后端服务通过脚本并行部署，这样就不会存在前后不同时上线的问题\n    - 其他解决方案。。。\n","source":"_posts/deploy.md","raw":"---\ntitle: 前后端分离部署\ndate: 2019-04-26 10:55:15\ntags:\n  - deploy\n  - 配置\n---\n\n#### 一、为什么要前后端分离部署 —— 解耦\n传统的前后端开发模式是前端开发完成后将html、css、js等静态资源传给后端，然后由后端对静态资源进行部署，并配置相应的路径指向对应的html。这种模式存在很大的一个问题是前后端的耦合很紧密，前端修改内容后依靠后端上线(即使后端不改)，或者后端的更改也可能会影响前端。\n\n<!-- more -->\n\n这种耦合度高的模式，在开发、调试、测试、部署等环节都相互制约着，影响着彼此的开发效率，而且出错率高。\n\n在传统模式的基础上衍生出另一种模式，这种模式和前者的区别是css、js等静态资源在cdn(或其他服务器)上部署，html直接引静态资源的路径。相比前者，这种模式做了一些优化，但还不够彻底，依然存在耦合度等问题。\n\n为了解决上述问题，采用前后端分离开发部署的方式。那么，什么是前后端分离开发部署？前后端分离开发部署就是前后并行开发，一般是两个不同的repository，在开发完成后，经过测试、部署后两个可以独立访问。\n\n#### 二、怎样实现前后端分离部署\n**前后端分离部署结构图：**\n\n<img src=\"./deploy/deploy.png\" width = \"100%\" />\n\n**从图中我们可以看出：**\n- 1、前后端相互独立，分开部署，前端server提供html、css、js、图片等静态资源，后端提供数据服务，js通过接口将前后端建立连接。\n- 2、前后端各有一个服务器。图示中为Nginx服务器，实际中可以为其他服务器，每个服务器为各端服务\n- 3、前后端分离部署对用户而言是透明的，无感知的。对于开发人员来说，降低前后端耦合度，各端主要精力放在自身服务上，而不用过多关注对方的变动\n\n#### 三、前后端分离部署应注意的问题\n前后端分离部署为开发人员提供了一些便利，但也存在一些问题需要解决：\n\n**跨域**\n\n - 问题描述：前后端部署在不同的服务器上，隶属不同的域名，在浏览器同源的限制下，前端请求后端接口存在跨域问题\n - 解决方案：\n    - 借助nginx反向代理来解决跨域\n    - 借助CORS来解决跨域\n    - 其他跨域解决方案(自行百度)。。。\n\n1、借助Nginx反向代理来解决跨域\n\n```\n// nginx.conf文件\nserver {\n\n    listen 80; // 默认访问80端口\n    server_name XXX.com; // 域名\n    root \"C:/front_end/build\"; // 前端静态文件的存放目录\n    location / {\n      try_files $uri /index.html;\n    }\n    \n    // nginx的反向代理来解决跨域，'/api'——接口的路径\n    location /api {\n        // 前端请求路径以/api开头时，Nginx会代理到proxy_pass上\n        proxy_pass http://localhost:8082; // 后端运行的端口\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection ‘upgrade’;\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n  }\n```\n\nNginx的相关知识，请查阅[前端开发者必备的 Nginx 知识](https://mp.weixin.qq.com/s/BA_JZ_kMBFZBE7jjQDNc1Q)，这篇文章讲的很详细\n\n2、后端处理\n前端需要跨域需要后端设置Access-Control-Allow-Origin字段，设置为*或者对应域名\n\n```\nAccess-Control-Allow-Origin: * // 允许来自任何域名的跨域请求\n或\nAccess-Control-Allow-Origin: http://www.google.com // 允许来自特定域名的跨域请求\n```\n\n3、特殊情况\n\n- 最近做的项目是前后端分离部署的，前后端不仅存在跨域问题，而且还需要携带cookie，对于这种情况需要前端在请求头带上`withCredentials: true`，具体的携带方法，不同的请求库设置方式不同，`axios.defaults.withCredentials = true`(axios)，`Vue.http.options.xhr = { withCredentials: true }`(vue-resource)，其他请求库的设置方法自行百度。\n- 当withCredentials的情况下，后端要设置Access-Control-Allow-Origin为特定域名的请求，而不能设置为`*`，而应该是具体的域名，而且需要这是Access-Control-Allow-Credentials为true\n\n```\nAccess-Control-Allow-Origin: http://www.google.com \nAccess-Control-Allow-Credentials: true\n```\n \n**部署**\n\n- 问题描述：前后端上线顺序的问题。前后端在既定的接口服务上线了，但随着后续需求的变化，接口A发生变动，前端需要对改变后接口的处理，存在的问题是：假如后端先上线，那么前端之前的代码并未兼容后端的新接口，会存在一定的问题；假如前端先上线，那么前端请求的接口A还是老的接口，也会存在问题。\n- 解决方案：\n    - 前后端服务在流量少的时候部署，这时候影响范围小，但仍有风险\n    - 前后端服务通过脚本并行部署，这样就不会存在前后不同时上线的问题\n    - 其他解决方案。。。\n","slug":"deploy","published":1,"updated":"2019-04-27T09:45:52.091Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwma0004re6h7g3c765w","content":"<h4 id=\"一、为什么要前后端分离部署-——-解耦\"><a href=\"#一、为什么要前后端分离部署-——-解耦\" class=\"headerlink\" title=\"一、为什么要前后端分离部署 —— 解耦\"></a>一、为什么要前后端分离部署 —— 解耦</h4><p>传统的前后端开发模式是前端开发完成后将html、css、js等静态资源传给后端，然后由后端对静态资源进行部署，并配置相应的路径指向对应的html。这种模式存在很大的一个问题是前后端的耦合很紧密，前端修改内容后依靠后端上线(即使后端不改)，或者后端的更改也可能会影响前端。</p>\n<a id=\"more\"></a>\n<p>这种耦合度高的模式，在开发、调试、测试、部署等环节都相互制约着，影响着彼此的开发效率，而且出错率高。</p>\n<p>在传统模式的基础上衍生出另一种模式，这种模式和前者的区别是css、js等静态资源在cdn(或其他服务器)上部署，html直接引静态资源的路径。相比前者，这种模式做了一些优化，但还不够彻底，依然存在耦合度等问题。</p>\n<p>为了解决上述问题，采用前后端分离开发部署的方式。那么，什么是前后端分离开发部署？前后端分离开发部署就是前后并行开发，一般是两个不同的repository，在开发完成后，经过测试、部署后两个可以独立访问。</p>\n<h4 id=\"二、怎样实现前后端分离部署\"><a href=\"#二、怎样实现前后端分离部署\" class=\"headerlink\" title=\"二、怎样实现前后端分离部署\"></a>二、怎样实现前后端分离部署</h4><p><strong>前后端分离部署结构图：</strong></p>\n<p><img src=\"/2019/04/26/deploy/deploy.png\" width=\"100%\"></p>\n<p><strong>从图中我们可以看出：</strong></p>\n<ul>\n<li>1、前后端相互独立，分开部署，前端server提供html、css、js、图片等静态资源，后端提供数据服务，js通过接口将前后端建立连接。</li>\n<li>2、前后端各有一个服务器。图示中为Nginx服务器，实际中可以为其他服务器，每个服务器为各端服务</li>\n<li>3、前后端分离部署对用户而言是透明的，无感知的。对于开发人员来说，降低前后端耦合度，各端主要精力放在自身服务上，而不用过多关注对方的变动</li>\n</ul>\n<h4 id=\"三、前后端分离部署应注意的问题\"><a href=\"#三、前后端分离部署应注意的问题\" class=\"headerlink\" title=\"三、前后端分离部署应注意的问题\"></a>三、前后端分离部署应注意的问题</h4><p>前后端分离部署为开发人员提供了一些便利，但也存在一些问题需要解决：</p>\n<p><strong>跨域</strong></p>\n<ul>\n<li>问题描述：前后端部署在不同的服务器上，隶属不同的域名，在浏览器同源的限制下，前端请求后端接口存在跨域问题</li>\n<li>解决方案：<ul>\n<li>借助nginx反向代理来解决跨域</li>\n<li>借助CORS来解决跨域</li>\n<li>其他跨域解决方案(自行百度)。。。</li>\n</ul>\n</li>\n</ul>\n<p>1、借助Nginx反向代理来解决跨域</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// nginx.conf文件</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    listen 80; // 默认访问80端口</span><br><span class=\"line\">    server_name XXX.com; // 域名</span><br><span class=\"line\">    root &quot;C:/front_end/build&quot;; // 前端静态文件的存放目录</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">      try_files $uri /index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // nginx的反向代理来解决跨域，&apos;/api&apos;——接口的路径</span><br><span class=\"line\">    location /api &#123;</span><br><span class=\"line\">        // 前端请求路径以/api开头时，Nginx会代理到proxy_pass上</span><br><span class=\"line\">        proxy_pass http://localhost:8082; // 后端运行的端口</span><br><span class=\"line\">        proxy_http_version 1.1;</span><br><span class=\"line\">        proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">        proxy_set_header Connection ‘upgrade’;</span><br><span class=\"line\">        proxy_set_header Host $host;</span><br><span class=\"line\">        proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>Nginx的相关知识，请查阅<a href=\"https://mp.weixin.qq.com/s/BA_JZ_kMBFZBE7jjQDNc1Q\" target=\"_blank\" rel=\"noopener\">前端开发者必备的 Nginx 知识</a>，这篇文章讲的很详细</p>\n<p>2、后端处理<br>前端需要跨域需要后端设置Access-Control-Allow-Origin字段，设置为*或者对应域名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access-Control-Allow-Origin: * // 允许来自任何域名的跨域请求</span><br><span class=\"line\">或</span><br><span class=\"line\">Access-Control-Allow-Origin: http://www.google.com // 允许来自特定域名的跨域请求</span><br></pre></td></tr></table></figure>\n<p>3、特殊情况</p>\n<ul>\n<li>最近做的项目是前后端分离部署的，前后端不仅存在跨域问题，而且还需要携带cookie，对于这种情况需要前端在请求头带上<code>withCredentials: true</code>，具体的携带方法，不同的请求库设置方式不同，<code>axios.defaults.withCredentials = true</code>(axios)，<code>Vue.http.options.xhr = { withCredentials: true }</code>(vue-resource)，其他请求库的设置方法自行百度。</li>\n<li>当withCredentials的情况下，后端要设置Access-Control-Allow-Origin为特定域名的请求，而不能设置为<code>*</code>，而应该是具体的域名，而且需要这是Access-Control-Allow-Credentials为true</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access-Control-Allow-Origin: http://www.google.com </span><br><span class=\"line\">Access-Control-Allow-Credentials: true</span><br></pre></td></tr></table></figure>\n<p><strong>部署</strong></p>\n<ul>\n<li>问题描述：前后端上线顺序的问题。前后端在既定的接口服务上线了，但随着后续需求的变化，接口A发生变动，前端需要对改变后接口的处理，存在的问题是：假如后端先上线，那么前端之前的代码并未兼容后端的新接口，会存在一定的问题；假如前端先上线，那么前端请求的接口A还是老的接口，也会存在问题。</li>\n<li>解决方案：<ul>\n<li>前后端服务在流量少的时候部署，这时候影响范围小，但仍有风险</li>\n<li>前后端服务通过脚本并行部署，这样就不会存在前后不同时上线的问题</li>\n<li>其他解决方案。。。</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h4 id=\"一、为什么要前后端分离部署-——-解耦\"><a href=\"#一、为什么要前后端分离部署-——-解耦\" class=\"headerlink\" title=\"一、为什么要前后端分离部署 —— 解耦\"></a>一、为什么要前后端分离部署 —— 解耦</h4><p>传统的前后端开发模式是前端开发完成后将html、css、js等静态资源传给后端，然后由后端对静态资源进行部署，并配置相应的路径指向对应的html。这种模式存在很大的一个问题是前后端的耦合很紧密，前端修改内容后依靠后端上线(即使后端不改)，或者后端的更改也可能会影响前端。</p>","more":"<p>这种耦合度高的模式，在开发、调试、测试、部署等环节都相互制约着，影响着彼此的开发效率，而且出错率高。</p>\n<p>在传统模式的基础上衍生出另一种模式，这种模式和前者的区别是css、js等静态资源在cdn(或其他服务器)上部署，html直接引静态资源的路径。相比前者，这种模式做了一些优化，但还不够彻底，依然存在耦合度等问题。</p>\n<p>为了解决上述问题，采用前后端分离开发部署的方式。那么，什么是前后端分离开发部署？前后端分离开发部署就是前后并行开发，一般是两个不同的repository，在开发完成后，经过测试、部署后两个可以独立访问。</p>\n<h4 id=\"二、怎样实现前后端分离部署\"><a href=\"#二、怎样实现前后端分离部署\" class=\"headerlink\" title=\"二、怎样实现前后端分离部署\"></a>二、怎样实现前后端分离部署</h4><p><strong>前后端分离部署结构图：</strong></p>\n<p><img src=\"/2019/04/26/deploy/deploy.png\" width=\"100%\"></p>\n<p><strong>从图中我们可以看出：</strong></p>\n<ul>\n<li>1、前后端相互独立，分开部署，前端server提供html、css、js、图片等静态资源，后端提供数据服务，js通过接口将前后端建立连接。</li>\n<li>2、前后端各有一个服务器。图示中为Nginx服务器，实际中可以为其他服务器，每个服务器为各端服务</li>\n<li>3、前后端分离部署对用户而言是透明的，无感知的。对于开发人员来说，降低前后端耦合度，各端主要精力放在自身服务上，而不用过多关注对方的变动</li>\n</ul>\n<h4 id=\"三、前后端分离部署应注意的问题\"><a href=\"#三、前后端分离部署应注意的问题\" class=\"headerlink\" title=\"三、前后端分离部署应注意的问题\"></a>三、前后端分离部署应注意的问题</h4><p>前后端分离部署为开发人员提供了一些便利，但也存在一些问题需要解决：</p>\n<p><strong>跨域</strong></p>\n<ul>\n<li>问题描述：前后端部署在不同的服务器上，隶属不同的域名，在浏览器同源的限制下，前端请求后端接口存在跨域问题</li>\n<li>解决方案：<ul>\n<li>借助nginx反向代理来解决跨域</li>\n<li>借助CORS来解决跨域</li>\n<li>其他跨域解决方案(自行百度)。。。</li>\n</ul>\n</li>\n</ul>\n<p>1、借助Nginx反向代理来解决跨域</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// nginx.conf文件</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    listen 80; // 默认访问80端口</span><br><span class=\"line\">    server_name XXX.com; // 域名</span><br><span class=\"line\">    root &quot;C:/front_end/build&quot;; // 前端静态文件的存放目录</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">      try_files $uri /index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // nginx的反向代理来解决跨域，&apos;/api&apos;——接口的路径</span><br><span class=\"line\">    location /api &#123;</span><br><span class=\"line\">        // 前端请求路径以/api开头时，Nginx会代理到proxy_pass上</span><br><span class=\"line\">        proxy_pass http://localhost:8082; // 后端运行的端口</span><br><span class=\"line\">        proxy_http_version 1.1;</span><br><span class=\"line\">        proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">        proxy_set_header Connection ‘upgrade’;</span><br><span class=\"line\">        proxy_set_header Host $host;</span><br><span class=\"line\">        proxy_cache_bypass $http_upgrade;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>Nginx的相关知识，请查阅<a href=\"https://mp.weixin.qq.com/s/BA_JZ_kMBFZBE7jjQDNc1Q\" target=\"_blank\" rel=\"noopener\">前端开发者必备的 Nginx 知识</a>，这篇文章讲的很详细</p>\n<p>2、后端处理<br>前端需要跨域需要后端设置Access-Control-Allow-Origin字段，设置为*或者对应域名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access-Control-Allow-Origin: * // 允许来自任何域名的跨域请求</span><br><span class=\"line\">或</span><br><span class=\"line\">Access-Control-Allow-Origin: http://www.google.com // 允许来自特定域名的跨域请求</span><br></pre></td></tr></table></figure>\n<p>3、特殊情况</p>\n<ul>\n<li>最近做的项目是前后端分离部署的，前后端不仅存在跨域问题，而且还需要携带cookie，对于这种情况需要前端在请求头带上<code>withCredentials: true</code>，具体的携带方法，不同的请求库设置方式不同，<code>axios.defaults.withCredentials = true</code>(axios)，<code>Vue.http.options.xhr = { withCredentials: true }</code>(vue-resource)，其他请求库的设置方法自行百度。</li>\n<li>当withCredentials的情况下，后端要设置Access-Control-Allow-Origin为特定域名的请求，而不能设置为<code>*</code>，而应该是具体的域名，而且需要这是Access-Control-Allow-Credentials为true</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Access-Control-Allow-Origin: http://www.google.com </span><br><span class=\"line\">Access-Control-Allow-Credentials: true</span><br></pre></td></tr></table></figure>\n<p><strong>部署</strong></p>\n<ul>\n<li>问题描述：前后端上线顺序的问题。前后端在既定的接口服务上线了，但随着后续需求的变化，接口A发生变动，前端需要对改变后接口的处理，存在的问题是：假如后端先上线，那么前端之前的代码并未兼容后端的新接口，会存在一定的问题；假如前端先上线，那么前端请求的接口A还是老的接口，也会存在问题。</li>\n<li>解决方案：<ul>\n<li>前后端服务在流量少的时候部署，这时候影响范围小，但仍有风险</li>\n<li>前后端服务通过脚本并行部署，这样就不会存在前后不同时上线的问题</li>\n<li>其他解决方案。。。</li>\n</ul>\n</li>\n</ul>"},{"title":"Nginx","date":"2019-05-06T04:43:41.000Z","_content":"\n#### 1、为什么需要Nginx\n在无Nginx模式下，用户直接访问server，server对每个用户进行响应，当同一时间user的访问量过大时，server就会过载，甚至会宕机，从而导致服务不可用。Tomcat的并发量在500左右，当访问量大于500时，整个服务的稳定性和体验会大打折扣。\n\n<img src=\"./nginx/1.png\" width = \"80%\" />\n\n<!-- more -->\n\n当一台服务器处理能力有限的时候，我们可以通过增加server来分担压力，这样并发的压力就会大大降低，而且server的稳定性也会大幅提升。那么对于用户的访问请求应该由哪个server来响应呢，分发服务器Nginx就应运而生了。\n\nNginx采用反向代理的方式，将用户的请求分发到各个server上，各个server把处理后的结果返回给Nginx，Nginx再返回给用户。Nginx在整个过程中分发请求，作为负载均衡器。\n\n<img src=\"./nginx/2.png\" width = \"80%\" />\n\n\n#### 2、启动与关闭\n**1、启动Nginx**\n\n```\nnginx -c xxx/xxx/nginx.conf\n```\n\n**2、关闭Nginx**\n\n```\n# 查看Nginx进程号\nps -ef|grep nginx\n\n# 杀死Nginx进程\nkill -QUIT 进程id\n```\n\n**3、重启Nginx** —— 修改配置后重新加载生效\n\n```\nnginx -s reload\n```\n\n#### 3、通过不同端口配置虚拟机\n\n```\nhttp {\n    # 端口1\n    server {\n        listen 80;\n        server_name localhost;\n        location / {\n            # 设置根文件夹\n            root html_80;\n            index index.html index.htm\n        }\n    }\n    \n    \n    # 端口2\n    server {\n        listen 81;\n        server_name localhost;\n        location / {\n            # 设置根文件夹\n            root html_81;\n            index index.html index.htm\n        }\n    }\n}\n```\n#### 4、通过域名配置虚拟机\n\n* 不同的域名可通过绑定host来测试\n\n```\nhttp {\n    # server1\n    server {\n        listen 80;\n        server_name 域名1;\n        location / {\n            # 设置根文件夹\n            root html_80;\n            index index.html index.htm\n        }\n    }\n    \n    \n    # server2\n    server {\n        listen 81;\n        server_name 域名2;\n        location / {\n            # 设置根文件夹\n            root html_81;\n            index index.html index.htm\n        }\n    }\n}\n```\n#### 5、反向代理与负载均衡\n* upstream 配置服务器具体地址，负载均衡配置不可或缺的部分\n\n```\nhttp {\n    \n    # 提供服务的server\n    upstream server_address {\n        server ip1:port1;\n        server ip2:port2;\n        ...\n        # weight为权重，默认权重为1，其他配置含义：在20s(fail_timeout)内失败3次(max_fails)表示该主机不可用，使用其他主机\n        server ipN:portN weight=2 max_fails=3 fail_timeout=20s;\n    }\n    # server1\n    server {\n        listen 80;\n        server_name 域名1;\n        location / {\n            # 提供服务的server\n            proxy_pass  server_address;\n            index index.html index.htm\n        }\n    }\n}\n```\n\n#### 6、实现主备 —— 双机热备\n* Question：为什么需要双机热备？\n* 在上述的结构中，一台Nginx服务器负责所有server的转发任务，为防止Nginx服务器发生故障，提高Nginx服务的稳定性，需要提供一台备用的Nginx服务器，主服务器为master，备用服务器为backup，配置两台Nginx构建出高可用负载均衡的服务器。这种结构一般在超大并发量上场景中使用，并发量较小的单台Nginx即可(Nginx的最大并发量为5万)。\n\n<img src=\"./nginx/3.png\" width = \"80%\" />","source":"_posts/nginx.md","raw":"---\ntitle: Nginx\ndate: 2019-05-06 12:43:41\ntags:\n    - nginx\n    - 服务端配置\n---\n\n#### 1、为什么需要Nginx\n在无Nginx模式下，用户直接访问server，server对每个用户进行响应，当同一时间user的访问量过大时，server就会过载，甚至会宕机，从而导致服务不可用。Tomcat的并发量在500左右，当访问量大于500时，整个服务的稳定性和体验会大打折扣。\n\n<img src=\"./nginx/1.png\" width = \"80%\" />\n\n<!-- more -->\n\n当一台服务器处理能力有限的时候，我们可以通过增加server来分担压力，这样并发的压力就会大大降低，而且server的稳定性也会大幅提升。那么对于用户的访问请求应该由哪个server来响应呢，分发服务器Nginx就应运而生了。\n\nNginx采用反向代理的方式，将用户的请求分发到各个server上，各个server把处理后的结果返回给Nginx，Nginx再返回给用户。Nginx在整个过程中分发请求，作为负载均衡器。\n\n<img src=\"./nginx/2.png\" width = \"80%\" />\n\n\n#### 2、启动与关闭\n**1、启动Nginx**\n\n```\nnginx -c xxx/xxx/nginx.conf\n```\n\n**2、关闭Nginx**\n\n```\n# 查看Nginx进程号\nps -ef|grep nginx\n\n# 杀死Nginx进程\nkill -QUIT 进程id\n```\n\n**3、重启Nginx** —— 修改配置后重新加载生效\n\n```\nnginx -s reload\n```\n\n#### 3、通过不同端口配置虚拟机\n\n```\nhttp {\n    # 端口1\n    server {\n        listen 80;\n        server_name localhost;\n        location / {\n            # 设置根文件夹\n            root html_80;\n            index index.html index.htm\n        }\n    }\n    \n    \n    # 端口2\n    server {\n        listen 81;\n        server_name localhost;\n        location / {\n            # 设置根文件夹\n            root html_81;\n            index index.html index.htm\n        }\n    }\n}\n```\n#### 4、通过域名配置虚拟机\n\n* 不同的域名可通过绑定host来测试\n\n```\nhttp {\n    # server1\n    server {\n        listen 80;\n        server_name 域名1;\n        location / {\n            # 设置根文件夹\n            root html_80;\n            index index.html index.htm\n        }\n    }\n    \n    \n    # server2\n    server {\n        listen 81;\n        server_name 域名2;\n        location / {\n            # 设置根文件夹\n            root html_81;\n            index index.html index.htm\n        }\n    }\n}\n```\n#### 5、反向代理与负载均衡\n* upstream 配置服务器具体地址，负载均衡配置不可或缺的部分\n\n```\nhttp {\n    \n    # 提供服务的server\n    upstream server_address {\n        server ip1:port1;\n        server ip2:port2;\n        ...\n        # weight为权重，默认权重为1，其他配置含义：在20s(fail_timeout)内失败3次(max_fails)表示该主机不可用，使用其他主机\n        server ipN:portN weight=2 max_fails=3 fail_timeout=20s;\n    }\n    # server1\n    server {\n        listen 80;\n        server_name 域名1;\n        location / {\n            # 提供服务的server\n            proxy_pass  server_address;\n            index index.html index.htm\n        }\n    }\n}\n```\n\n#### 6、实现主备 —— 双机热备\n* Question：为什么需要双机热备？\n* 在上述的结构中，一台Nginx服务器负责所有server的转发任务，为防止Nginx服务器发生故障，提高Nginx服务的稳定性，需要提供一台备用的Nginx服务器，主服务器为master，备用服务器为backup，配置两台Nginx构建出高可用负载均衡的服务器。这种结构一般在超大并发量上场景中使用，并发量较小的单台Nginx即可(Nginx的最大并发量为5万)。\n\n<img src=\"./nginx/3.png\" width = \"80%\" />","slug":"nginx","published":1,"updated":"2019-05-06T04:51:20.040Z","_id":"cjvbvwwmd0005re6h2hqomqb6","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"1、为什么需要Nginx\"><a href=\"#1、为什么需要Nginx\" class=\"headerlink\" title=\"1、为什么需要Nginx\"></a>1、为什么需要Nginx</h4><p>在无Nginx模式下，用户直接访问server，server对每个用户进行响应，当同一时间user的访问量过大时，server就会过载，甚至会宕机，从而导致服务不可用。Tomcat的并发量在500左右，当访问量大于500时，整个服务的稳定性和体验会大打折扣。</p>\n<p><img src=\"/2019/05/06/nginx/1.png\" width=\"80%\"></p>\n<a id=\"more\"></a>\n<p>当一台服务器处理能力有限的时候，我们可以通过增加server来分担压力，这样并发的压力就会大大降低，而且server的稳定性也会大幅提升。那么对于用户的访问请求应该由哪个server来响应呢，分发服务器Nginx就应运而生了。</p>\n<p>Nginx采用反向代理的方式，将用户的请求分发到各个server上，各个server把处理后的结果返回给Nginx，Nginx再返回给用户。Nginx在整个过程中分发请求，作为负载均衡器。</p>\n<p><img src=\"/2019/05/06/nginx/2.png\" width=\"80%\"></p>\n<h4 id=\"2、启动与关闭\"><a href=\"#2、启动与关闭\" class=\"headerlink\" title=\"2、启动与关闭\"></a>2、启动与关闭</h4><p><strong>1、启动Nginx</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -c xxx/xxx/nginx.conf</span><br></pre></td></tr></table></figure>\n<p><strong>2、关闭Nginx</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看Nginx进程号</span><br><span class=\"line\">ps -ef|grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\"># 杀死Nginx进程</span><br><span class=\"line\">kill -QUIT 进程id</span><br></pre></td></tr></table></figure>\n<p><strong>3、重启Nginx</strong> —— 修改配置后重新加载生效</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n<h4 id=\"3、通过不同端口配置虚拟机\"><a href=\"#3、通过不同端口配置虚拟机\" class=\"headerlink\" title=\"3、通过不同端口配置虚拟机\"></a>3、通过不同端口配置虚拟机</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    # 端口1</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 设置根文件夹</span><br><span class=\"line\">            root html_80;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    # 端口2</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 81;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 设置根文件夹</span><br><span class=\"line\">            root html_81;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、通过域名配置虚拟机\"><a href=\"#4、通过域名配置虚拟机\" class=\"headerlink\" title=\"4、通过域名配置虚拟机\"></a>4、通过域名配置虚拟机</h4><ul>\n<li>不同的域名可通过绑定host来测试</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    # server1</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name 域名1;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 设置根文件夹</span><br><span class=\"line\">            root html_80;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    # server2</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 81;</span><br><span class=\"line\">        server_name 域名2;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 设置根文件夹</span><br><span class=\"line\">            root html_81;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、反向代理与负载均衡\"><a href=\"#5、反向代理与负载均衡\" class=\"headerlink\" title=\"5、反向代理与负载均衡\"></a>5、反向代理与负载均衡</h4><ul>\n<li>upstream 配置服务器具体地址，负载均衡配置不可或缺的部分</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 提供服务的server</span><br><span class=\"line\">    upstream server_address &#123;</span><br><span class=\"line\">        server ip1:port1;</span><br><span class=\"line\">        server ip2:port2;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        # weight为权重，默认权重为1，其他配置含义：在20s(fail_timeout)内失败3次(max_fails)表示该主机不可用，使用其他主机</span><br><span class=\"line\">        server ipN:portN weight=2 max_fails=3 fail_timeout=20s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    # server1</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name 域名1;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 提供服务的server</span><br><span class=\"line\">            proxy_pass  server_address;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6、实现主备-——-双机热备\"><a href=\"#6、实现主备-——-双机热备\" class=\"headerlink\" title=\"6、实现主备 —— 双机热备\"></a>6、实现主备 —— 双机热备</h4><ul>\n<li>Question：为什么需要双机热备？</li>\n<li>在上述的结构中，一台Nginx服务器负责所有server的转发任务，为防止Nginx服务器发生故障，提高Nginx服务的稳定性，需要提供一台备用的Nginx服务器，主服务器为master，备用服务器为backup，配置两台Nginx构建出高可用负载均衡的服务器。这种结构一般在超大并发量上场景中使用，并发量较小的单台Nginx即可(Nginx的最大并发量为5万)。</li>\n</ul>\n<p><img src=\"/2019/05/06/nginx/3.png\" width=\"80%\"></p>\n","site":{"data":{}},"excerpt":"<h4 id=\"1、为什么需要Nginx\"><a href=\"#1、为什么需要Nginx\" class=\"headerlink\" title=\"1、为什么需要Nginx\"></a>1、为什么需要Nginx</h4><p>在无Nginx模式下，用户直接访问server，server对每个用户进行响应，当同一时间user的访问量过大时，server就会过载，甚至会宕机，从而导致服务不可用。Tomcat的并发量在500左右，当访问量大于500时，整个服务的稳定性和体验会大打折扣。</p>\n<p><img src=\"/2019/05/06/nginx/1.png\" width=\"80%\"></p>","more":"<p>当一台服务器处理能力有限的时候，我们可以通过增加server来分担压力，这样并发的压力就会大大降低，而且server的稳定性也会大幅提升。那么对于用户的访问请求应该由哪个server来响应呢，分发服务器Nginx就应运而生了。</p>\n<p>Nginx采用反向代理的方式，将用户的请求分发到各个server上，各个server把处理后的结果返回给Nginx，Nginx再返回给用户。Nginx在整个过程中分发请求，作为负载均衡器。</p>\n<p><img src=\"/2019/05/06/nginx/2.png\" width=\"80%\"></p>\n<h4 id=\"2、启动与关闭\"><a href=\"#2、启动与关闭\" class=\"headerlink\" title=\"2、启动与关闭\"></a>2、启动与关闭</h4><p><strong>1、启动Nginx</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -c xxx/xxx/nginx.conf</span><br></pre></td></tr></table></figure>\n<p><strong>2、关闭Nginx</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看Nginx进程号</span><br><span class=\"line\">ps -ef|grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\"># 杀死Nginx进程</span><br><span class=\"line\">kill -QUIT 进程id</span><br></pre></td></tr></table></figure>\n<p><strong>3、重启Nginx</strong> —— 修改配置后重新加载生效</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n<h4 id=\"3、通过不同端口配置虚拟机\"><a href=\"#3、通过不同端口配置虚拟机\" class=\"headerlink\" title=\"3、通过不同端口配置虚拟机\"></a>3、通过不同端口配置虚拟机</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    # 端口1</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 设置根文件夹</span><br><span class=\"line\">            root html_80;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    # 端口2</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 81;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 设置根文件夹</span><br><span class=\"line\">            root html_81;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、通过域名配置虚拟机\"><a href=\"#4、通过域名配置虚拟机\" class=\"headerlink\" title=\"4、通过域名配置虚拟机\"></a>4、通过域名配置虚拟机</h4><ul>\n<li>不同的域名可通过绑定host来测试</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    # server1</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name 域名1;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 设置根文件夹</span><br><span class=\"line\">            root html_80;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    # server2</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 81;</span><br><span class=\"line\">        server_name 域名2;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 设置根文件夹</span><br><span class=\"line\">            root html_81;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、反向代理与负载均衡\"><a href=\"#5、反向代理与负载均衡\" class=\"headerlink\" title=\"5、反向代理与负载均衡\"></a>5、反向代理与负载均衡</h4><ul>\n<li>upstream 配置服务器具体地址，负载均衡配置不可或缺的部分</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 提供服务的server</span><br><span class=\"line\">    upstream server_address &#123;</span><br><span class=\"line\">        server ip1:port1;</span><br><span class=\"line\">        server ip2:port2;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        # weight为权重，默认权重为1，其他配置含义：在20s(fail_timeout)内失败3次(max_fails)表示该主机不可用，使用其他主机</span><br><span class=\"line\">        server ipN:portN weight=2 max_fails=3 fail_timeout=20s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    # server1</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name 域名1;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            # 提供服务的server</span><br><span class=\"line\">            proxy_pass  server_address;</span><br><span class=\"line\">            index index.html index.htm</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6、实现主备-——-双机热备\"><a href=\"#6、实现主备-——-双机热备\" class=\"headerlink\" title=\"6、实现主备 —— 双机热备\"></a>6、实现主备 —— 双机热备</h4><ul>\n<li>Question：为什么需要双机热备？</li>\n<li>在上述的结构中，一台Nginx服务器负责所有server的转发任务，为防止Nginx服务器发生故障，提高Nginx服务的稳定性，需要提供一台备用的Nginx服务器，主服务器为master，备用服务器为backup，配置两台Nginx构建出高可用负载均衡的服务器。这种结构一般在超大并发量上场景中使用，并发量较小的单台Nginx即可(Nginx的最大并发量为5万)。</li>\n</ul>\n<p><img src=\"/2019/05/06/nginx/3.png\" width=\"80%\"></p>"},{"layout":"post","title":"Web应用中实现全屏效果","date":"2017-07-23T16:00:00.000Z","_content":"### 启动全屏模式\n可以通过Fullscreen API中的requestFullScreen方法来实现。由于该方法还未标准化，因此还需要加上特定浏览器前缀。\n\n<!-- more -->\n\n```\n// 找到正确的方法  \nfunction launchFullScreen(element) {  \n  if(element.requestFullScreen) {  \n    element.requestFullScreen();  \n  } else if(element.mozRequestFullScreen) {  \n    element.mozRequestFullScreen();  \n  } else if(element.webkitRequestFullScreen) {  \n    element.webkitRequestFullScreen();  \n  }  \n}\n// 启动全屏模式  \nlaunchFullScreen(document.documentElement); // 整个页面  \nlaunchFullScreen(document.getElementById(\"videoElement\")); // 单独元素\n```\n### 取消全屏模式\n```\nfunction cancelFullscreen() {  \n  if(document.cancelFullScreen) {  \n    document.cancelFullScreen();  \n  } else if(document.mozCancelFullScreen) {  \n    document.mozCancelFullScreen();  \n  } else if(document.webkitCancelFullScreen) {  \n    document.webkitCancelFullScreen();  \n  }  \n}\n// 取消全屏  \ncancelFullscreen();\n```\n需要注意的是，cancelFullScreen只被文档对象调用，无需单个元素调用\n\n### 全屏属性和事件\ndocument.fullScreenElement：当前全屏显示的元素。\ndocument.fullScreenEnabled：判断浏览器是否支持全屏。\nfullscreenchange事件：全屏状态改变事件。","source":"_posts/full-screen.md","raw":"---\nlayout: post\ntitle: Web应用中实现全屏效果\ndate: 2017-07-24\ntags:\n    - full-screen\n---\n### 启动全屏模式\n可以通过Fullscreen API中的requestFullScreen方法来实现。由于该方法还未标准化，因此还需要加上特定浏览器前缀。\n\n<!-- more -->\n\n```\n// 找到正确的方法  \nfunction launchFullScreen(element) {  \n  if(element.requestFullScreen) {  \n    element.requestFullScreen();  \n  } else if(element.mozRequestFullScreen) {  \n    element.mozRequestFullScreen();  \n  } else if(element.webkitRequestFullScreen) {  \n    element.webkitRequestFullScreen();  \n  }  \n}\n// 启动全屏模式  \nlaunchFullScreen(document.documentElement); // 整个页面  \nlaunchFullScreen(document.getElementById(\"videoElement\")); // 单独元素\n```\n### 取消全屏模式\n```\nfunction cancelFullscreen() {  \n  if(document.cancelFullScreen) {  \n    document.cancelFullScreen();  \n  } else if(document.mozCancelFullScreen) {  \n    document.mozCancelFullScreen();  \n  } else if(document.webkitCancelFullScreen) {  \n    document.webkitCancelFullScreen();  \n  }  \n}\n// 取消全屏  \ncancelFullscreen();\n```\n需要注意的是，cancelFullScreen只被文档对象调用，无需单个元素调用\n\n### 全屏属性和事件\ndocument.fullScreenElement：当前全屏显示的元素。\ndocument.fullScreenEnabled：判断浏览器是否支持全屏。\nfullscreenchange事件：全屏状态改变事件。","slug":"full-screen","published":1,"updated":"2019-04-13T09:57:57.476Z","comments":1,"photos":[],"link":"","_id":"cjvbvwwmg0007re6hr3i0w520","content":"<h3 id=\"启动全屏模式\"><a href=\"#启动全屏模式\" class=\"headerlink\" title=\"启动全屏模式\"></a>启动全屏模式</h3><p>可以通过Fullscreen API中的requestFullScreen方法来实现。由于该方法还未标准化，因此还需要加上特定浏览器前缀。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 找到正确的方法  </span><br><span class=\"line\">function launchFullScreen(element) &#123;  </span><br><span class=\"line\">  if(element.requestFullScreen) &#123;  </span><br><span class=\"line\">    element.requestFullScreen();  </span><br><span class=\"line\">  &#125; else if(element.mozRequestFullScreen) &#123;  </span><br><span class=\"line\">    element.mozRequestFullScreen();  </span><br><span class=\"line\">  &#125; else if(element.webkitRequestFullScreen) &#123;  </span><br><span class=\"line\">    element.webkitRequestFullScreen();  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 启动全屏模式  </span><br><span class=\"line\">launchFullScreen(document.documentElement); // 整个页面  </span><br><span class=\"line\">launchFullScreen(document.getElementById(&quot;videoElement&quot;)); // 单独元素</span><br></pre></td></tr></table></figure>\n<h3 id=\"取消全屏模式\"><a href=\"#取消全屏模式\" class=\"headerlink\" title=\"取消全屏模式\"></a>取消全屏模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function cancelFullscreen() &#123;  </span><br><span class=\"line\">  if(document.cancelFullScreen) &#123;  </span><br><span class=\"line\">    document.cancelFullScreen();  </span><br><span class=\"line\">  &#125; else if(document.mozCancelFullScreen) &#123;  </span><br><span class=\"line\">    document.mozCancelFullScreen();  </span><br><span class=\"line\">  &#125; else if(document.webkitCancelFullScreen) &#123;  </span><br><span class=\"line\">    document.webkitCancelFullScreen();  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 取消全屏  </span><br><span class=\"line\">cancelFullscreen();</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，cancelFullScreen只被文档对象调用，无需单个元素调用</p>\n<h3 id=\"全屏属性和事件\"><a href=\"#全屏属性和事件\" class=\"headerlink\" title=\"全屏属性和事件\"></a>全屏属性和事件</h3><p>document.fullScreenElement：当前全屏显示的元素。<br>document.fullScreenEnabled：判断浏览器是否支持全屏。<br>fullscreenchange事件：全屏状态改变事件。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"启动全屏模式\"><a href=\"#启动全屏模式\" class=\"headerlink\" title=\"启动全屏模式\"></a>启动全屏模式</h3><p>可以通过Fullscreen API中的requestFullScreen方法来实现。由于该方法还未标准化，因此还需要加上特定浏览器前缀。</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 找到正确的方法  </span><br><span class=\"line\">function launchFullScreen(element) &#123;  </span><br><span class=\"line\">  if(element.requestFullScreen) &#123;  </span><br><span class=\"line\">    element.requestFullScreen();  </span><br><span class=\"line\">  &#125; else if(element.mozRequestFullScreen) &#123;  </span><br><span class=\"line\">    element.mozRequestFullScreen();  </span><br><span class=\"line\">  &#125; else if(element.webkitRequestFullScreen) &#123;  </span><br><span class=\"line\">    element.webkitRequestFullScreen();  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 启动全屏模式  </span><br><span class=\"line\">launchFullScreen(document.documentElement); // 整个页面  </span><br><span class=\"line\">launchFullScreen(document.getElementById(&quot;videoElement&quot;)); // 单独元素</span><br></pre></td></tr></table></figure>\n<h3 id=\"取消全屏模式\"><a href=\"#取消全屏模式\" class=\"headerlink\" title=\"取消全屏模式\"></a>取消全屏模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function cancelFullscreen() &#123;  </span><br><span class=\"line\">  if(document.cancelFullScreen) &#123;  </span><br><span class=\"line\">    document.cancelFullScreen();  </span><br><span class=\"line\">  &#125; else if(document.mozCancelFullScreen) &#123;  </span><br><span class=\"line\">    document.mozCancelFullScreen();  </span><br><span class=\"line\">  &#125; else if(document.webkitCancelFullScreen) &#123;  </span><br><span class=\"line\">    document.webkitCancelFullScreen();  </span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 取消全屏  </span><br><span class=\"line\">cancelFullscreen();</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，cancelFullScreen只被文档对象调用，无需单个元素调用</p>\n<h3 id=\"全屏属性和事件\"><a href=\"#全屏属性和事件\" class=\"headerlink\" title=\"全屏属性和事件\"></a>全屏属性和事件</h3><p>document.fullScreenElement：当前全屏显示的元素。<br>document.fullScreenEnabled：判断浏览器是否支持全屏。<br>fullscreenchange事件：全屏状态改变事件。</p>"},{"title":"页面开发小心得","date":"2017-08-28T16:00:00.000Z","_content":"\n### 1、总体规划\n1.设计入口——用户通过什么样的方式可以访问这个页面\n2.拆分组件——对于组件化开发来说，如何拆分是首选要考虑的问题\n3.组件交互——组件之间并非独立的，如何实现组件间的通信也是需要考虑的问题\n\n<!-- more -->\n\n### 2、需求完善\n1.确定业务需求流程，页面开发的同时了解业务\n2.确定细节，每一个细节都考虑有没有更好地方案\n\n### 3、细节优化——提升用户体验\n1.设置导航栏，让用户了解所处的位置，同时也方便进入上一级\n2.小按钮是否可以通过鼠标划入，添加小动画\n3.输入框、下拉框是否支持搜索，便捷用户输入\n4.必须输入值，在输入框附近给予提示，点击查询或提交没有填写的话，给予温馨提示\n5.设置默认值，减少用户的输入\n6.展示列表是否支持轮询or推送，每次更新数据后，同时应该更新相应的数据\n7.隐含功能小提示，对于新用户第一次接触页面，很难发现隐藏功能，小提示让页面更加优化\n\n持续总结中。。。","source":"_posts/page.md","raw":"---\ntitle: 页面开发小心得\ndate: 2017-08-29\ntags:\n---\n\n### 1、总体规划\n1.设计入口——用户通过什么样的方式可以访问这个页面\n2.拆分组件——对于组件化开发来说，如何拆分是首选要考虑的问题\n3.组件交互——组件之间并非独立的，如何实现组件间的通信也是需要考虑的问题\n\n<!-- more -->\n\n### 2、需求完善\n1.确定业务需求流程，页面开发的同时了解业务\n2.确定细节，每一个细节都考虑有没有更好地方案\n\n### 3、细节优化——提升用户体验\n1.设置导航栏，让用户了解所处的位置，同时也方便进入上一级\n2.小按钮是否可以通过鼠标划入，添加小动画\n3.输入框、下拉框是否支持搜索，便捷用户输入\n4.必须输入值，在输入框附近给予提示，点击查询或提交没有填写的话，给予温馨提示\n5.设置默认值，减少用户的输入\n6.展示列表是否支持轮询or推送，每次更新数据后，同时应该更新相应的数据\n7.隐含功能小提示，对于新用户第一次接触页面，很难发现隐藏功能，小提示让页面更加优化\n\n持续总结中。。。","slug":"page","published":1,"updated":"2019-04-13T09:55:54.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwmj0008re6huca802ms","content":"<h3 id=\"1、总体规划\"><a href=\"#1、总体规划\" class=\"headerlink\" title=\"1、总体规划\"></a>1、总体规划</h3><p>1.设计入口——用户通过什么样的方式可以访问这个页面<br>2.拆分组件——对于组件化开发来说，如何拆分是首选要考虑的问题<br>3.组件交互——组件之间并非独立的，如何实现组件间的通信也是需要考虑的问题</p>\n<a id=\"more\"></a>\n<h3 id=\"2、需求完善\"><a href=\"#2、需求完善\" class=\"headerlink\" title=\"2、需求完善\"></a>2、需求完善</h3><p>1.确定业务需求流程，页面开发的同时了解业务<br>2.确定细节，每一个细节都考虑有没有更好地方案</p>\n<h3 id=\"3、细节优化——提升用户体验\"><a href=\"#3、细节优化——提升用户体验\" class=\"headerlink\" title=\"3、细节优化——提升用户体验\"></a>3、细节优化——提升用户体验</h3><p>1.设置导航栏，让用户了解所处的位置，同时也方便进入上一级<br>2.小按钮是否可以通过鼠标划入，添加小动画<br>3.输入框、下拉框是否支持搜索，便捷用户输入<br>4.必须输入值，在输入框附近给予提示，点击查询或提交没有填写的话，给予温馨提示<br>5.设置默认值，减少用户的输入<br>6.展示列表是否支持轮询or推送，每次更新数据后，同时应该更新相应的数据<br>7.隐含功能小提示，对于新用户第一次接触页面，很难发现隐藏功能，小提示让页面更加优化</p>\n<p>持续总结中。。。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"1、总体规划\"><a href=\"#1、总体规划\" class=\"headerlink\" title=\"1、总体规划\"></a>1、总体规划</h3><p>1.设计入口——用户通过什么样的方式可以访问这个页面<br>2.拆分组件——对于组件化开发来说，如何拆分是首选要考虑的问题<br>3.组件交互——组件之间并非独立的，如何实现组件间的通信也是需要考虑的问题</p>","more":"<h3 id=\"2、需求完善\"><a href=\"#2、需求完善\" class=\"headerlink\" title=\"2、需求完善\"></a>2、需求完善</h3><p>1.确定业务需求流程，页面开发的同时了解业务<br>2.确定细节，每一个细节都考虑有没有更好地方案</p>\n<h3 id=\"3、细节优化——提升用户体验\"><a href=\"#3、细节优化——提升用户体验\" class=\"headerlink\" title=\"3、细节优化——提升用户体验\"></a>3、细节优化——提升用户体验</h3><p>1.设置导航栏，让用户了解所处的位置，同时也方便进入上一级<br>2.小按钮是否可以通过鼠标划入，添加小动画<br>3.输入框、下拉框是否支持搜索，便捷用户输入<br>4.必须输入值，在输入框附近给予提示，点击查询或提交没有填写的话，给予温馨提示<br>5.设置默认值，减少用户的输入<br>6.展示列表是否支持轮询or推送，每次更新数据后，同时应该更新相应的数据<br>7.隐含功能小提示，对于新用户第一次接触页面，很难发现隐藏功能，小提示让页面更加优化</p>\n<p>持续总结中。。。</p>"},{"title":"图片格式介绍","date":"2018-07-31T16:00:00.000Z","_content":"\n\n### 1、图片格式有哪些？\n> BMP、JPEG、GIF、PSD、PNG、TIFF、TGA、EPS、SVG、webP、CDR、PCX、EXIF、FPX、PCD、DXF、UFO、AI、HDRI、RAW、WMF、FLIC、EMF、ICO、iconfont、、、\n\n<!-- more -->\n\n### 2、图片分类\n<img src=\"./pictures/%E5%9B%BE%E7%89%87%E5%88%86%E7%B1%BB.png\" width = \"50%\" />\n\n\n**（1）. 矢量图 **\n> 矢量图：由数学向量来记录的图像是矢量图\n> 特点：放大后图片依旧清晰——放大后重新构图\n> 缺点：很难表现自然度高的写实图像\n\n\n<img src=\"./pictures/%E7%9F%A2%E9%87%8F%E5%9B%BE.png\" width = \"50%\" />\n\n\n\n**（2）、位图(Bitmap)**\n位图的构成原理 + 有损压缩/无损压缩\n> 位图：由一系列像素点组成的图像是位图，位图也称为点阵图\n> 特点：\n>(1)、放大会看到像素点，呈现锯齿状——放大后单位面积的像素点减少\n>(2)、dpi决定图像的清晰度\n>(3)、RGB彩色图像——色彩丰富\n\n \n \n<img src=\"./pictures/%E4%BD%8D%E5%9B%BE.png\" width = \"50%\" />\n\n\n**两者差别**\n\n   类型     | 位图            | 矢量图\n---------------|-------------|---------\n构图方式    | 像素点          | 向量\n色彩       | 色彩丰富         | 色彩变化少\n失真       | 放大、缩小易失真  | 不失真，良好的缩放性\n大小       |  大(面积越大,色彩越丰富,越大)           | 小\n分类       |  bpm、jpg、gif、psd、png、... | wmf、ai、EPS、SVG、cdr、emf、dxf、...\n\n\n**位图不同格式的区别 —— 有损压缩、无损压缩**\n`\n不同格式的图像在记录这些数据时的方式不一样，涉及到有损压缩和无损压缩的区别\n`\n\n**（3）.有损压缩**\n> 概念：并不完全真是的记录图像上每个像素点的数据信息，去掉那些图像上会被人眼忽略的细节，然后使用附近的颜色通过渐变或其他形式进行填充。\n> \n> 特点：能大大降低图像信息的数据量，又不会影响图像的还原效果\n> \n> 格式：jpg\n\n\n**（4）.无损压缩**\n> 概念：真实的记录图像上每个像素点的数据信息，为了压缩图像文件的大小会采用一些特殊的算法\n> \n> 压缩原理：先判断图像上哪些区域的颜色是相同的，哪些是不同的然后把这些相同的数据信息进行压缩记录，（例如一片蓝色的天空只需要记录起点和终点的位置就可以了），而把不同的数据另外保存（例如天空上的白云和渐变等数据）\n> \n> 格式：\n> 1、PNG（对图像上所有出现的颜色进行索引，我们把这些颜色成为索引色，PNG8(索引256色)、PNG24(真彩16.7million色)、PNG32(真彩16.7million色)）\n> 2、GIF，索引256色，支持动画\n\n\n### 3、常用格式介绍\n\n介绍 png、jpg、psd、svg、webp、iconfont\n\n**png —— 主要特性是半透明**\n\npng压缩的原理\n\n```\n1、压缩比高于GIF，支持图像透明，无损压缩，质量高\n2、可以利用Alpha通道调节图像的透明度(实验)\n3、逐次逼近显示，先用低分辨率显示图像，然后逐步提高它的分辨率\n4、透明性，用来创建一些有特色的图像\n5、流式读/写性能，允许连续读出和写入图像数据\n6、PNG的开发目标是改善并取代GIF,PNG 8除了不支持动画外，PNG8有GIF所有的特点，但是比GIF更加具有优势的是它支持alpha透明和更优的压缩（GIF仅支持索引透明）\n7、占内存大\n8、能在保证不失真的情况下尽可能压缩图像文件的大小\n9、对于需要高保真的较复杂的图像，PNG虽然能无损压缩，但图片文件较大，不适合应用在web页面上\n10、颜色数越少，文件体积越小\n```\n\n**jpg**\n```\n1、应用最广泛\n2、有损压缩\n3、将不易被人眼察觉的图像颜色删除\n4、较大的压缩比(可达到2:1甚至40:1)\n5、尺寸较小，下载速度快，但不支持透明\n6、位图，由像素构成，放大变虚\n7、JPEG图像存储格式既满足了人眼对色彩和分辨率的要求，又适当的去除了图像中很难被人眼所分辨出的色彩\n8、编辑和重新保存JPG格式图像，清晰度下降损失会累积\n9、JPG不适用于所含颜色较少、具有大块颜色相近的区域或亮度差异十分明显的较简单的图片\n```\n“基线”格式的JPG加载过程\n\n<img src=\"./pictures/%E2%80%9C%E5%9F%BA%E7%BA%BF%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84JPG%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.gif\" width = \"50%\" />\n\n“连续”格式的JPG加载过程\n\n<img src=\"./pictures/%E2%80%9C%E8%BF%9E%E7%BB%AD%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84JPG%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.gif\" width = \"50%\" />\n\njpg格式保存方式\n\n<img src=\"./pictures/jpg%E6%A0%BC%E5%BC%8F%E4%BF%9D%E5%AD%98%E6%96%B9%E5%BC%8F.png\" width = \"50%\" />\n\n\n**psd**\n```\n1、Photoshop的专用图像格式\n2、保存图片的完整信息，图层，透明，通道，文字\n3、文件一般较大\n```\n**svg**\n通过记录坐标的形式存储图形信息，SVG使用基于XML的语义化标签结构，由于是DOM结构，你可以通过ID获取SVG元素，并操纵它们\n\n```\n1、采用文本来描述对象\n2、矢量图形、点阵图像、文本\n3、不适用于写实图像和有许多细节的复杂图片\n4、可用于数据可视化\n5、支持动画、透明、缩放\n```\n\n**webp —— 谷歌发明的新格式，存在兼容性（chrome、opera）**\n\n目标：减少文件大小，但达到和JPEG格式相同的图片质量，希望能够减少图片档在网络上的发送时间\n\n重点看一下\n\n```\n1、支持动画\n2、牺牲图片质量来降低图片文件大小\n3、相同质量的情况下比JPEG文件尺寸小巧许多\n4、支持有损压缩和无损压缩的图片文件格式\n5、无损压缩后的 WebP 比 PNG 文件少了 45％ 的文件大小，即使png经过压缩，webp可以减少28%的大小\n6、更小的图片体积\n7、在 JPEG 和 PNG 上的转化效果都非常优秀、稳定和统一\n```\n\n**iconfont**\n```\n1、矢量图标\n2、引入字体\n3、便于调整大小、颜色\n```\n**gif**\n```\n1、动画\n2、支持透明背景\n3、适用于多种操作系统，压缩比高\n4、色域不太广,只支持256种颜色\n```\n\n### 4、应用介绍\n\n**1、前端使用何种图片格式**\n```\n1、一般层次丰富颜色较多的图像采用JPG存储，而颜色简单对比强烈的则需要采用PNG\n2、有些矢量工具绘制的图像由于采用较多的滤镜特效也会形成丰富的色彩层次，这个时候就需要采用JPG进行存储了\n3、基本视觉元素，如容器的背景、按钮、导航的背景等应该尽量用PNG格式进行存储，这样才能更好的保证设计品质\n\n\n照片用 JPG。\n动画用 GIF。\nLogo、Icon 等小图用 PNG-8。\n```\n<img src=\"./pictures/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%9B%BE%E7%89%87.jpeg\" width = \"50%\" />\n\n\n**2、加载的图片太多、太大怎么办**\n```\n1、将图片和应用分离，防止高I/O负载而崩溃，同一时间对同一域名下的资源的并发请求数目限制\n2、压缩\n3、懒加载\n4、css雪碧图css Sprites\n5、将图片压缩成base64格式来节约请求\n```\n\n**3、前端图像处理工具**\n1、[tinypng.com](https://tinypng.com/)\n2、[腾讯智图](http://zhitu.isux.us/)\n3、[pngcrush](https://pngcrush.com/)\n4、...\n\n\n\n**[tinypng.com](https://tinypng.com/)**\n> 更好的压缩算法，而且通过智能地减少颜色数，达到有效的压缩。\n> 压缩比高，失真小\n\n**[腾讯智图](http://zhitu.isux.us/)**\n> 除了 PNG 和 JPG ，还支持 WebP\n> 可以直接看到压缩后的图片大小\n\n**[pngcrush](https://pngcrush.com/)**\n> \n> 可以批量压缩图片\n> 可减少40%的大小\n\n\n\n#### 4、图片懒加载的原理\n\n\n<img src=\"./pictures/%E6%87%92%E5%8A%A0%E8%BD%BD.png\" width = \"50%\" />","source":"_posts/pictures.md","raw":"---\ntitle: 图片格式介绍\ndate: 2018-08-01\ntags:\n    - pictures\n---\n\n\n### 1、图片格式有哪些？\n> BMP、JPEG、GIF、PSD、PNG、TIFF、TGA、EPS、SVG、webP、CDR、PCX、EXIF、FPX、PCD、DXF、UFO、AI、HDRI、RAW、WMF、FLIC、EMF、ICO、iconfont、、、\n\n<!-- more -->\n\n### 2、图片分类\n<img src=\"./pictures/%E5%9B%BE%E7%89%87%E5%88%86%E7%B1%BB.png\" width = \"50%\" />\n\n\n**（1）. 矢量图 **\n> 矢量图：由数学向量来记录的图像是矢量图\n> 特点：放大后图片依旧清晰——放大后重新构图\n> 缺点：很难表现自然度高的写实图像\n\n\n<img src=\"./pictures/%E7%9F%A2%E9%87%8F%E5%9B%BE.png\" width = \"50%\" />\n\n\n\n**（2）、位图(Bitmap)**\n位图的构成原理 + 有损压缩/无损压缩\n> 位图：由一系列像素点组成的图像是位图，位图也称为点阵图\n> 特点：\n>(1)、放大会看到像素点，呈现锯齿状——放大后单位面积的像素点减少\n>(2)、dpi决定图像的清晰度\n>(3)、RGB彩色图像——色彩丰富\n\n \n \n<img src=\"./pictures/%E4%BD%8D%E5%9B%BE.png\" width = \"50%\" />\n\n\n**两者差别**\n\n   类型     | 位图            | 矢量图\n---------------|-------------|---------\n构图方式    | 像素点          | 向量\n色彩       | 色彩丰富         | 色彩变化少\n失真       | 放大、缩小易失真  | 不失真，良好的缩放性\n大小       |  大(面积越大,色彩越丰富,越大)           | 小\n分类       |  bpm、jpg、gif、psd、png、... | wmf、ai、EPS、SVG、cdr、emf、dxf、...\n\n\n**位图不同格式的区别 —— 有损压缩、无损压缩**\n`\n不同格式的图像在记录这些数据时的方式不一样，涉及到有损压缩和无损压缩的区别\n`\n\n**（3）.有损压缩**\n> 概念：并不完全真是的记录图像上每个像素点的数据信息，去掉那些图像上会被人眼忽略的细节，然后使用附近的颜色通过渐变或其他形式进行填充。\n> \n> 特点：能大大降低图像信息的数据量，又不会影响图像的还原效果\n> \n> 格式：jpg\n\n\n**（4）.无损压缩**\n> 概念：真实的记录图像上每个像素点的数据信息，为了压缩图像文件的大小会采用一些特殊的算法\n> \n> 压缩原理：先判断图像上哪些区域的颜色是相同的，哪些是不同的然后把这些相同的数据信息进行压缩记录，（例如一片蓝色的天空只需要记录起点和终点的位置就可以了），而把不同的数据另外保存（例如天空上的白云和渐变等数据）\n> \n> 格式：\n> 1、PNG（对图像上所有出现的颜色进行索引，我们把这些颜色成为索引色，PNG8(索引256色)、PNG24(真彩16.7million色)、PNG32(真彩16.7million色)）\n> 2、GIF，索引256色，支持动画\n\n\n### 3、常用格式介绍\n\n介绍 png、jpg、psd、svg、webp、iconfont\n\n**png —— 主要特性是半透明**\n\npng压缩的原理\n\n```\n1、压缩比高于GIF，支持图像透明，无损压缩，质量高\n2、可以利用Alpha通道调节图像的透明度(实验)\n3、逐次逼近显示，先用低分辨率显示图像，然后逐步提高它的分辨率\n4、透明性，用来创建一些有特色的图像\n5、流式读/写性能，允许连续读出和写入图像数据\n6、PNG的开发目标是改善并取代GIF,PNG 8除了不支持动画外，PNG8有GIF所有的特点，但是比GIF更加具有优势的是它支持alpha透明和更优的压缩（GIF仅支持索引透明）\n7、占内存大\n8、能在保证不失真的情况下尽可能压缩图像文件的大小\n9、对于需要高保真的较复杂的图像，PNG虽然能无损压缩，但图片文件较大，不适合应用在web页面上\n10、颜色数越少，文件体积越小\n```\n\n**jpg**\n```\n1、应用最广泛\n2、有损压缩\n3、将不易被人眼察觉的图像颜色删除\n4、较大的压缩比(可达到2:1甚至40:1)\n5、尺寸较小，下载速度快，但不支持透明\n6、位图，由像素构成，放大变虚\n7、JPEG图像存储格式既满足了人眼对色彩和分辨率的要求，又适当的去除了图像中很难被人眼所分辨出的色彩\n8、编辑和重新保存JPG格式图像，清晰度下降损失会累积\n9、JPG不适用于所含颜色较少、具有大块颜色相近的区域或亮度差异十分明显的较简单的图片\n```\n“基线”格式的JPG加载过程\n\n<img src=\"./pictures/%E2%80%9C%E5%9F%BA%E7%BA%BF%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84JPG%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.gif\" width = \"50%\" />\n\n“连续”格式的JPG加载过程\n\n<img src=\"./pictures/%E2%80%9C%E8%BF%9E%E7%BB%AD%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84JPG%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.gif\" width = \"50%\" />\n\njpg格式保存方式\n\n<img src=\"./pictures/jpg%E6%A0%BC%E5%BC%8F%E4%BF%9D%E5%AD%98%E6%96%B9%E5%BC%8F.png\" width = \"50%\" />\n\n\n**psd**\n```\n1、Photoshop的专用图像格式\n2、保存图片的完整信息，图层，透明，通道，文字\n3、文件一般较大\n```\n**svg**\n通过记录坐标的形式存储图形信息，SVG使用基于XML的语义化标签结构，由于是DOM结构，你可以通过ID获取SVG元素，并操纵它们\n\n```\n1、采用文本来描述对象\n2、矢量图形、点阵图像、文本\n3、不适用于写实图像和有许多细节的复杂图片\n4、可用于数据可视化\n5、支持动画、透明、缩放\n```\n\n**webp —— 谷歌发明的新格式，存在兼容性（chrome、opera）**\n\n目标：减少文件大小，但达到和JPEG格式相同的图片质量，希望能够减少图片档在网络上的发送时间\n\n重点看一下\n\n```\n1、支持动画\n2、牺牲图片质量来降低图片文件大小\n3、相同质量的情况下比JPEG文件尺寸小巧许多\n4、支持有损压缩和无损压缩的图片文件格式\n5、无损压缩后的 WebP 比 PNG 文件少了 45％ 的文件大小，即使png经过压缩，webp可以减少28%的大小\n6、更小的图片体积\n7、在 JPEG 和 PNG 上的转化效果都非常优秀、稳定和统一\n```\n\n**iconfont**\n```\n1、矢量图标\n2、引入字体\n3、便于调整大小、颜色\n```\n**gif**\n```\n1、动画\n2、支持透明背景\n3、适用于多种操作系统，压缩比高\n4、色域不太广,只支持256种颜色\n```\n\n### 4、应用介绍\n\n**1、前端使用何种图片格式**\n```\n1、一般层次丰富颜色较多的图像采用JPG存储，而颜色简单对比强烈的则需要采用PNG\n2、有些矢量工具绘制的图像由于采用较多的滤镜特效也会形成丰富的色彩层次，这个时候就需要采用JPG进行存储了\n3、基本视觉元素，如容器的背景、按钮、导航的背景等应该尽量用PNG格式进行存储，这样才能更好的保证设计品质\n\n\n照片用 JPG。\n动画用 GIF。\nLogo、Icon 等小图用 PNG-8。\n```\n<img src=\"./pictures/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%9B%BE%E7%89%87.jpeg\" width = \"50%\" />\n\n\n**2、加载的图片太多、太大怎么办**\n```\n1、将图片和应用分离，防止高I/O负载而崩溃，同一时间对同一域名下的资源的并发请求数目限制\n2、压缩\n3、懒加载\n4、css雪碧图css Sprites\n5、将图片压缩成base64格式来节约请求\n```\n\n**3、前端图像处理工具**\n1、[tinypng.com](https://tinypng.com/)\n2、[腾讯智图](http://zhitu.isux.us/)\n3、[pngcrush](https://pngcrush.com/)\n4、...\n\n\n\n**[tinypng.com](https://tinypng.com/)**\n> 更好的压缩算法，而且通过智能地减少颜色数，达到有效的压缩。\n> 压缩比高，失真小\n\n**[腾讯智图](http://zhitu.isux.us/)**\n> 除了 PNG 和 JPG ，还支持 WebP\n> 可以直接看到压缩后的图片大小\n\n**[pngcrush](https://pngcrush.com/)**\n> \n> 可以批量压缩图片\n> 可减少40%的大小\n\n\n\n#### 4、图片懒加载的原理\n\n\n<img src=\"./pictures/%E6%87%92%E5%8A%A0%E8%BD%BD.png\" width = \"50%\" />","slug":"pictures","published":1,"updated":"2019-04-15T05:03:53.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwmm000are6hxgdlcxlc","content":"<h3 id=\"1、图片格式有哪些？\"><a href=\"#1、图片格式有哪些？\" class=\"headerlink\" title=\"1、图片格式有哪些？\"></a>1、图片格式有哪些？</h3><blockquote>\n<p>BMP、JPEG、GIF、PSD、PNG、TIFF、TGA、EPS、SVG、webP、CDR、PCX、EXIF、FPX、PCD、DXF、UFO、AI、HDRI、RAW、WMF、FLIC、EMF、ICO、iconfont、、、</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"2、图片分类\"><a href=\"#2、图片分类\" class=\"headerlink\" title=\"2、图片分类\"></a>2、图片分类</h3><p><img src=\"/2018/08/01/pictures/%E5%9B%BE%E7%89%87%E5%88%86%E7%B1%BB.png\" width=\"50%\"></p>\n<p><strong>（1）. 矢量图 </strong></p>\n<blockquote>\n<p>矢量图：由数学向量来记录的图像是矢量图<br>特点：放大后图片依旧清晰——放大后重新构图<br>缺点：很难表现自然度高的写实图像</p>\n</blockquote>\n<p><img src=\"/2018/08/01/pictures/%E7%9F%A2%E9%87%8F%E5%9B%BE.png\" width=\"50%\"></p>\n<p><strong>（2）、位图(Bitmap)</strong><br>位图的构成原理 + 有损压缩/无损压缩</p>\n<blockquote>\n<p>位图：由一系列像素点组成的图像是位图，位图也称为点阵图<br>特点：<br>(1)、放大会看到像素点，呈现锯齿状——放大后单位面积的像素点减少<br>(2)、dpi决定图像的清晰度<br>(3)、RGB彩色图像——色彩丰富</p>\n</blockquote>\n<p><img src=\"/2018/08/01/pictures/%E4%BD%8D%E5%9B%BE.png\" width=\"50%\"></p>\n<p><strong>两者差别</strong></p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>位图</th>\n<th>矢量图</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>构图方式</td>\n<td>像素点</td>\n<td>向量</td>\n</tr>\n<tr>\n<td>色彩</td>\n<td>色彩丰富</td>\n<td>色彩变化少</td>\n</tr>\n<tr>\n<td>失真</td>\n<td>放大、缩小易失真</td>\n<td>不失真，良好的缩放性</td>\n</tr>\n<tr>\n<td>大小</td>\n<td>大(面积越大,色彩越丰富,越大)</td>\n<td>小</td>\n</tr>\n<tr>\n<td>分类</td>\n<td>bpm、jpg、gif、psd、png、…</td>\n<td>wmf、ai、EPS、SVG、cdr、emf、dxf、…</td>\n</tr>\n</tbody>\n</table>\n<p><strong>位图不同格式的区别 —— 有损压缩、无损压缩</strong><br><code>不同格式的图像在记录这些数据时的方式不一样，涉及到有损压缩和无损压缩的区别</code></p>\n<p><strong>（3）.有损压缩</strong></p>\n<blockquote>\n<p>概念：并不完全真是的记录图像上每个像素点的数据信息，去掉那些图像上会被人眼忽略的细节，然后使用附近的颜色通过渐变或其他形式进行填充。</p>\n<p>特点：能大大降低图像信息的数据量，又不会影响图像的还原效果</p>\n<p>格式：jpg</p>\n</blockquote>\n<p><strong>（4）.无损压缩</strong></p>\n<blockquote>\n<p>概念：真实的记录图像上每个像素点的数据信息，为了压缩图像文件的大小会采用一些特殊的算法</p>\n<p>压缩原理：先判断图像上哪些区域的颜色是相同的，哪些是不同的然后把这些相同的数据信息进行压缩记录，（例如一片蓝色的天空只需要记录起点和终点的位置就可以了），而把不同的数据另外保存（例如天空上的白云和渐变等数据）</p>\n<p>格式：<br>1、PNG（对图像上所有出现的颜色进行索引，我们把这些颜色成为索引色，PNG8(索引256色)、PNG24(真彩16.7million色)、PNG32(真彩16.7million色)）<br>2、GIF，索引256色，支持动画</p>\n</blockquote>\n<h3 id=\"3、常用格式介绍\"><a href=\"#3、常用格式介绍\" class=\"headerlink\" title=\"3、常用格式介绍\"></a>3、常用格式介绍</h3><p>介绍 png、jpg、psd、svg、webp、iconfont</p>\n<p><strong>png —— 主要特性是半透明</strong></p>\n<p>png压缩的原理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、压缩比高于GIF，支持图像透明，无损压缩，质量高</span><br><span class=\"line\">2、可以利用Alpha通道调节图像的透明度(实验)</span><br><span class=\"line\">3、逐次逼近显示，先用低分辨率显示图像，然后逐步提高它的分辨率</span><br><span class=\"line\">4、透明性，用来创建一些有特色的图像</span><br><span class=\"line\">5、流式读/写性能，允许连续读出和写入图像数据</span><br><span class=\"line\">6、PNG的开发目标是改善并取代GIF,PNG 8除了不支持动画外，PNG8有GIF所有的特点，但是比GIF更加具有优势的是它支持alpha透明和更优的压缩（GIF仅支持索引透明）</span><br><span class=\"line\">7、占内存大</span><br><span class=\"line\">8、能在保证不失真的情况下尽可能压缩图像文件的大小</span><br><span class=\"line\">9、对于需要高保真的较复杂的图像，PNG虽然能无损压缩，但图片文件较大，不适合应用在web页面上</span><br><span class=\"line\">10、颜色数越少，文件体积越小</span><br></pre></td></tr></table></figure>\n<p><strong>jpg</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、应用最广泛</span><br><span class=\"line\">2、有损压缩</span><br><span class=\"line\">3、将不易被人眼察觉的图像颜色删除</span><br><span class=\"line\">4、较大的压缩比(可达到2:1甚至40:1)</span><br><span class=\"line\">5、尺寸较小，下载速度快，但不支持透明</span><br><span class=\"line\">6、位图，由像素构成，放大变虚</span><br><span class=\"line\">7、JPEG图像存储格式既满足了人眼对色彩和分辨率的要求，又适当的去除了图像中很难被人眼所分辨出的色彩</span><br><span class=\"line\">8、编辑和重新保存JPG格式图像，清晰度下降损失会累积</span><br><span class=\"line\">9、JPG不适用于所含颜色较少、具有大块颜色相近的区域或亮度差异十分明显的较简单的图片</span><br></pre></td></tr></table></figure></p>\n<p>“基线”格式的JPG加载过程</p>\n<p><img src=\"/2018/08/01/pictures/%E2%80%9C%E5%9F%BA%E7%BA%BF%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84JPG%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.gif\" width=\"50%\"></p>\n<p>“连续”格式的JPG加载过程</p>\n<p><img src=\"/2018/08/01/pictures/%E2%80%9C%E8%BF%9E%E7%BB%AD%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84JPG%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.gif\" width=\"50%\"></p>\n<p>jpg格式保存方式</p>\n<p><img src=\"/2018/08/01/pictures/jpg%E6%A0%BC%E5%BC%8F%E4%BF%9D%E5%AD%98%E6%96%B9%E5%BC%8F.png\" width=\"50%\"></p>\n<p><strong>psd</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、Photoshop的专用图像格式</span><br><span class=\"line\">2、保存图片的完整信息，图层，透明，通道，文字</span><br><span class=\"line\">3、文件一般较大</span><br></pre></td></tr></table></figure></p>\n<p><strong>svg</strong><br>通过记录坐标的形式存储图形信息，SVG使用基于XML的语义化标签结构，由于是DOM结构，你可以通过ID获取SVG元素，并操纵它们</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、采用文本来描述对象</span><br><span class=\"line\">2、矢量图形、点阵图像、文本</span><br><span class=\"line\">3、不适用于写实图像和有许多细节的复杂图片</span><br><span class=\"line\">4、可用于数据可视化</span><br><span class=\"line\">5、支持动画、透明、缩放</span><br></pre></td></tr></table></figure>\n<p><strong>webp —— 谷歌发明的新格式，存在兼容性（chrome、opera）</strong></p>\n<p>目标：减少文件大小，但达到和JPEG格式相同的图片质量，希望能够减少图片档在网络上的发送时间</p>\n<p>重点看一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、支持动画</span><br><span class=\"line\">2、牺牲图片质量来降低图片文件大小</span><br><span class=\"line\">3、相同质量的情况下比JPEG文件尺寸小巧许多</span><br><span class=\"line\">4、支持有损压缩和无损压缩的图片文件格式</span><br><span class=\"line\">5、无损压缩后的 WebP 比 PNG 文件少了 45％ 的文件大小，即使png经过压缩，webp可以减少28%的大小</span><br><span class=\"line\">6、更小的图片体积</span><br><span class=\"line\">7、在 JPEG 和 PNG 上的转化效果都非常优秀、稳定和统一</span><br></pre></td></tr></table></figure>\n<p><strong>iconfont</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、矢量图标</span><br><span class=\"line\">2、引入字体</span><br><span class=\"line\">3、便于调整大小、颜色</span><br></pre></td></tr></table></figure></p>\n<p><strong>gif</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、动画</span><br><span class=\"line\">2、支持透明背景</span><br><span class=\"line\">3、适用于多种操作系统，压缩比高</span><br><span class=\"line\">4、色域不太广,只支持256种颜色</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4、应用介绍\"><a href=\"#4、应用介绍\" class=\"headerlink\" title=\"4、应用介绍\"></a>4、应用介绍</h3><p><strong>1、前端使用何种图片格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、一般层次丰富颜色较多的图像采用JPG存储，而颜色简单对比强烈的则需要采用PNG</span><br><span class=\"line\">2、有些矢量工具绘制的图像由于采用较多的滤镜特效也会形成丰富的色彩层次，这个时候就需要采用JPG进行存储了</span><br><span class=\"line\">3、基本视觉元素，如容器的背景、按钮、导航的背景等应该尽量用PNG格式进行存储，这样才能更好的保证设计品质</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">照片用 JPG。</span><br><span class=\"line\">动画用 GIF。</span><br><span class=\"line\">Logo、Icon 等小图用 PNG-8。</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2018/08/01/pictures/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%9B%BE%E7%89%87.jpeg\" width=\"50%\"></p>\n<p><strong>2、加载的图片太多、太大怎么办</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、将图片和应用分离，防止高I/O负载而崩溃，同一时间对同一域名下的资源的并发请求数目限制</span><br><span class=\"line\">2、压缩</span><br><span class=\"line\">3、懒加载</span><br><span class=\"line\">4、css雪碧图css Sprites</span><br><span class=\"line\">5、将图片压缩成base64格式来节约请求</span><br></pre></td></tr></table></figure></p>\n<p><strong>3、前端图像处理工具</strong><br>1、<a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">tinypng.com</a><br>2、<a href=\"http://zhitu.isux.us/\" target=\"_blank\" rel=\"noopener\">腾讯智图</a><br>3、<a href=\"https://pngcrush.com/\" target=\"_blank\" rel=\"noopener\">pngcrush</a><br>4、…</p>\n<p><strong><a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">tinypng.com</a></strong></p>\n<blockquote>\n<p>更好的压缩算法，而且通过智能地减少颜色数，达到有效的压缩。<br>压缩比高，失真小</p>\n</blockquote>\n<p><strong><a href=\"http://zhitu.isux.us/\" target=\"_blank\" rel=\"noopener\">腾讯智图</a></strong></p>\n<blockquote>\n<p>除了 PNG 和 JPG ，还支持 WebP<br>可以直接看到压缩后的图片大小</p>\n</blockquote>\n<p><strong><a href=\"https://pngcrush.com/\" target=\"_blank\" rel=\"noopener\">pngcrush</a></strong></p>\n<blockquote>\n<p>可以批量压缩图片<br>可减少40%的大小</p>\n</blockquote>\n<h4 id=\"4、图片懒加载的原理\"><a href=\"#4、图片懒加载的原理\" class=\"headerlink\" title=\"4、图片懒加载的原理\"></a>4、图片懒加载的原理</h4><p><img src=\"/2018/08/01/pictures/%E6%87%92%E5%8A%A0%E8%BD%BD.png\" width=\"50%\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"1、图片格式有哪些？\"><a href=\"#1、图片格式有哪些？\" class=\"headerlink\" title=\"1、图片格式有哪些？\"></a>1、图片格式有哪些？</h3><blockquote>\n<p>BMP、JPEG、GIF、PSD、PNG、TIFF、TGA、EPS、SVG、webP、CDR、PCX、EXIF、FPX、PCD、DXF、UFO、AI、HDRI、RAW、WMF、FLIC、EMF、ICO、iconfont、、、</p>\n</blockquote>","more":"<h3 id=\"2、图片分类\"><a href=\"#2、图片分类\" class=\"headerlink\" title=\"2、图片分类\"></a>2、图片分类</h3><p><img src=\"/2018/08/01/pictures/%E5%9B%BE%E7%89%87%E5%88%86%E7%B1%BB.png\" width=\"50%\"></p>\n<p><strong>（1）. 矢量图 </strong></p>\n<blockquote>\n<p>矢量图：由数学向量来记录的图像是矢量图<br>特点：放大后图片依旧清晰——放大后重新构图<br>缺点：很难表现自然度高的写实图像</p>\n</blockquote>\n<p><img src=\"/2018/08/01/pictures/%E7%9F%A2%E9%87%8F%E5%9B%BE.png\" width=\"50%\"></p>\n<p><strong>（2）、位图(Bitmap)</strong><br>位图的构成原理 + 有损压缩/无损压缩</p>\n<blockquote>\n<p>位图：由一系列像素点组成的图像是位图，位图也称为点阵图<br>特点：<br>(1)、放大会看到像素点，呈现锯齿状——放大后单位面积的像素点减少<br>(2)、dpi决定图像的清晰度<br>(3)、RGB彩色图像——色彩丰富</p>\n</blockquote>\n<p><img src=\"/2018/08/01/pictures/%E4%BD%8D%E5%9B%BE.png\" width=\"50%\"></p>\n<p><strong>两者差别</strong></p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>位图</th>\n<th>矢量图</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>构图方式</td>\n<td>像素点</td>\n<td>向量</td>\n</tr>\n<tr>\n<td>色彩</td>\n<td>色彩丰富</td>\n<td>色彩变化少</td>\n</tr>\n<tr>\n<td>失真</td>\n<td>放大、缩小易失真</td>\n<td>不失真，良好的缩放性</td>\n</tr>\n<tr>\n<td>大小</td>\n<td>大(面积越大,色彩越丰富,越大)</td>\n<td>小</td>\n</tr>\n<tr>\n<td>分类</td>\n<td>bpm、jpg、gif、psd、png、…</td>\n<td>wmf、ai、EPS、SVG、cdr、emf、dxf、…</td>\n</tr>\n</tbody>\n</table>\n<p><strong>位图不同格式的区别 —— 有损压缩、无损压缩</strong><br><code>不同格式的图像在记录这些数据时的方式不一样，涉及到有损压缩和无损压缩的区别</code></p>\n<p><strong>（3）.有损压缩</strong></p>\n<blockquote>\n<p>概念：并不完全真是的记录图像上每个像素点的数据信息，去掉那些图像上会被人眼忽略的细节，然后使用附近的颜色通过渐变或其他形式进行填充。</p>\n<p>特点：能大大降低图像信息的数据量，又不会影响图像的还原效果</p>\n<p>格式：jpg</p>\n</blockquote>\n<p><strong>（4）.无损压缩</strong></p>\n<blockquote>\n<p>概念：真实的记录图像上每个像素点的数据信息，为了压缩图像文件的大小会采用一些特殊的算法</p>\n<p>压缩原理：先判断图像上哪些区域的颜色是相同的，哪些是不同的然后把这些相同的数据信息进行压缩记录，（例如一片蓝色的天空只需要记录起点和终点的位置就可以了），而把不同的数据另外保存（例如天空上的白云和渐变等数据）</p>\n<p>格式：<br>1、PNG（对图像上所有出现的颜色进行索引，我们把这些颜色成为索引色，PNG8(索引256色)、PNG24(真彩16.7million色)、PNG32(真彩16.7million色)）<br>2、GIF，索引256色，支持动画</p>\n</blockquote>\n<h3 id=\"3、常用格式介绍\"><a href=\"#3、常用格式介绍\" class=\"headerlink\" title=\"3、常用格式介绍\"></a>3、常用格式介绍</h3><p>介绍 png、jpg、psd、svg、webp、iconfont</p>\n<p><strong>png —— 主要特性是半透明</strong></p>\n<p>png压缩的原理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、压缩比高于GIF，支持图像透明，无损压缩，质量高</span><br><span class=\"line\">2、可以利用Alpha通道调节图像的透明度(实验)</span><br><span class=\"line\">3、逐次逼近显示，先用低分辨率显示图像，然后逐步提高它的分辨率</span><br><span class=\"line\">4、透明性，用来创建一些有特色的图像</span><br><span class=\"line\">5、流式读/写性能，允许连续读出和写入图像数据</span><br><span class=\"line\">6、PNG的开发目标是改善并取代GIF,PNG 8除了不支持动画外，PNG8有GIF所有的特点，但是比GIF更加具有优势的是它支持alpha透明和更优的压缩（GIF仅支持索引透明）</span><br><span class=\"line\">7、占内存大</span><br><span class=\"line\">8、能在保证不失真的情况下尽可能压缩图像文件的大小</span><br><span class=\"line\">9、对于需要高保真的较复杂的图像，PNG虽然能无损压缩，但图片文件较大，不适合应用在web页面上</span><br><span class=\"line\">10、颜色数越少，文件体积越小</span><br></pre></td></tr></table></figure>\n<p><strong>jpg</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、应用最广泛</span><br><span class=\"line\">2、有损压缩</span><br><span class=\"line\">3、将不易被人眼察觉的图像颜色删除</span><br><span class=\"line\">4、较大的压缩比(可达到2:1甚至40:1)</span><br><span class=\"line\">5、尺寸较小，下载速度快，但不支持透明</span><br><span class=\"line\">6、位图，由像素构成，放大变虚</span><br><span class=\"line\">7、JPEG图像存储格式既满足了人眼对色彩和分辨率的要求，又适当的去除了图像中很难被人眼所分辨出的色彩</span><br><span class=\"line\">8、编辑和重新保存JPG格式图像，清晰度下降损失会累积</span><br><span class=\"line\">9、JPG不适用于所含颜色较少、具有大块颜色相近的区域或亮度差异十分明显的较简单的图片</span><br></pre></td></tr></table></figure></p>\n<p>“基线”格式的JPG加载过程</p>\n<p><img src=\"/2018/08/01/pictures/%E2%80%9C%E5%9F%BA%E7%BA%BF%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84JPG%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.gif\" width=\"50%\"></p>\n<p>“连续”格式的JPG加载过程</p>\n<p><img src=\"/2018/08/01/pictures/%E2%80%9C%E8%BF%9E%E7%BB%AD%E2%80%9D%E6%A0%BC%E5%BC%8F%E7%9A%84JPG%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B.gif\" width=\"50%\"></p>\n<p>jpg格式保存方式</p>\n<p><img src=\"/2018/08/01/pictures/jpg%E6%A0%BC%E5%BC%8F%E4%BF%9D%E5%AD%98%E6%96%B9%E5%BC%8F.png\" width=\"50%\"></p>\n<p><strong>psd</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、Photoshop的专用图像格式</span><br><span class=\"line\">2、保存图片的完整信息，图层，透明，通道，文字</span><br><span class=\"line\">3、文件一般较大</span><br></pre></td></tr></table></figure></p>\n<p><strong>svg</strong><br>通过记录坐标的形式存储图形信息，SVG使用基于XML的语义化标签结构，由于是DOM结构，你可以通过ID获取SVG元素，并操纵它们</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、采用文本来描述对象</span><br><span class=\"line\">2、矢量图形、点阵图像、文本</span><br><span class=\"line\">3、不适用于写实图像和有许多细节的复杂图片</span><br><span class=\"line\">4、可用于数据可视化</span><br><span class=\"line\">5、支持动画、透明、缩放</span><br></pre></td></tr></table></figure>\n<p><strong>webp —— 谷歌发明的新格式，存在兼容性（chrome、opera）</strong></p>\n<p>目标：减少文件大小，但达到和JPEG格式相同的图片质量，希望能够减少图片档在网络上的发送时间</p>\n<p>重点看一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、支持动画</span><br><span class=\"line\">2、牺牲图片质量来降低图片文件大小</span><br><span class=\"line\">3、相同质量的情况下比JPEG文件尺寸小巧许多</span><br><span class=\"line\">4、支持有损压缩和无损压缩的图片文件格式</span><br><span class=\"line\">5、无损压缩后的 WebP 比 PNG 文件少了 45％ 的文件大小，即使png经过压缩，webp可以减少28%的大小</span><br><span class=\"line\">6、更小的图片体积</span><br><span class=\"line\">7、在 JPEG 和 PNG 上的转化效果都非常优秀、稳定和统一</span><br></pre></td></tr></table></figure>\n<p><strong>iconfont</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、矢量图标</span><br><span class=\"line\">2、引入字体</span><br><span class=\"line\">3、便于调整大小、颜色</span><br></pre></td></tr></table></figure></p>\n<p><strong>gif</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、动画</span><br><span class=\"line\">2、支持透明背景</span><br><span class=\"line\">3、适用于多种操作系统，压缩比高</span><br><span class=\"line\">4、色域不太广,只支持256种颜色</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4、应用介绍\"><a href=\"#4、应用介绍\" class=\"headerlink\" title=\"4、应用介绍\"></a>4、应用介绍</h3><p><strong>1、前端使用何种图片格式</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、一般层次丰富颜色较多的图像采用JPG存储，而颜色简单对比强烈的则需要采用PNG</span><br><span class=\"line\">2、有些矢量工具绘制的图像由于采用较多的滤镜特效也会形成丰富的色彩层次，这个时候就需要采用JPG进行存储了</span><br><span class=\"line\">3、基本视觉元素，如容器的背景、按钮、导航的背景等应该尽量用PNG格式进行存储，这样才能更好的保证设计品质</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">照片用 JPG。</span><br><span class=\"line\">动画用 GIF。</span><br><span class=\"line\">Logo、Icon 等小图用 PNG-8。</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2018/08/01/pictures/%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%9B%BE%E7%89%87.jpeg\" width=\"50%\"></p>\n<p><strong>2、加载的图片太多、太大怎么办</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、将图片和应用分离，防止高I/O负载而崩溃，同一时间对同一域名下的资源的并发请求数目限制</span><br><span class=\"line\">2、压缩</span><br><span class=\"line\">3、懒加载</span><br><span class=\"line\">4、css雪碧图css Sprites</span><br><span class=\"line\">5、将图片压缩成base64格式来节约请求</span><br></pre></td></tr></table></figure></p>\n<p><strong>3、前端图像处理工具</strong><br>1、<a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">tinypng.com</a><br>2、<a href=\"http://zhitu.isux.us/\" target=\"_blank\" rel=\"noopener\">腾讯智图</a><br>3、<a href=\"https://pngcrush.com/\" target=\"_blank\" rel=\"noopener\">pngcrush</a><br>4、…</p>\n<p><strong><a href=\"https://tinypng.com/\" target=\"_blank\" rel=\"noopener\">tinypng.com</a></strong></p>\n<blockquote>\n<p>更好的压缩算法，而且通过智能地减少颜色数，达到有效的压缩。<br>压缩比高，失真小</p>\n</blockquote>\n<p><strong><a href=\"http://zhitu.isux.us/\" target=\"_blank\" rel=\"noopener\">腾讯智图</a></strong></p>\n<blockquote>\n<p>除了 PNG 和 JPG ，还支持 WebP<br>可以直接看到压缩后的图片大小</p>\n</blockquote>\n<p><strong><a href=\"https://pngcrush.com/\" target=\"_blank\" rel=\"noopener\">pngcrush</a></strong></p>\n<blockquote>\n<p>可以批量压缩图片<br>可减少40%的大小</p>\n</blockquote>\n<h4 id=\"4、图片懒加载的原理\"><a href=\"#4、图片懒加载的原理\" class=\"headerlink\" title=\"4、图片懒加载的原理\"></a>4、图片懒加载的原理</h4><p><img src=\"/2018/08/01/pictures/%E6%87%92%E5%8A%A0%E8%BD%BD.png\" width=\"50%\"></p>"},{"title":"react-router-4","date":"2018-03-14T16:00:00.000Z","_content":"\n\n[router-router 4 新特性](https://note.youdao.com/ynoteshare1/index.html?id=bc7c33403ce1b6b931a23f8b695b92f5&type=note)\n\n点击链接进入云笔记分享页查看\n","source":"_posts/react-router-4.md","raw":"---\ntitle: react-router-4\ndate: 2018-03-15\ntags:\n    - react router \n    - 云笔记\n---\n\n\n[router-router 4 新特性](https://note.youdao.com/ynoteshare1/index.html?id=bc7c33403ce1b6b931a23f8b695b92f5&type=note)\n\n点击链接进入云笔记分享页查看\n","slug":"react-router-4","published":1,"updated":"2019-04-13T10:45:54.650Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwmo000cre6hku2mmhh4","content":"<p><a href=\"https://note.youdao.com/ynoteshare1/index.html?id=bc7c33403ce1b6b931a23f8b695b92f5&amp;type=note\" target=\"_blank\" rel=\"noopener\">router-router 4 新特性</a></p>\n<p>点击链接进入云笔记分享页查看</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://note.youdao.com/ynoteshare1/index.html?id=bc7c33403ce1b6b931a23f8b695b92f5&amp;type=note\" target=\"_blank\" rel=\"noopener\">router-router 4 新特性</a></p>\n<p>点击链接进入云笔记分享页查看</p>\n"},{"title":"日常小知识点","date":"2018-08-01T16:00:00.000Z","_content":"\n**写代码是一件很慎重的事情，对自己的每一句代码负责**\n\n### 1、使用gulp-minify-css对css进行压缩时，会丢弃css hack代码\n```\n解决办法：使用gulp-clean-css打包\n```\n\n<!-- more -->\n\n### 2、在IE中mouseover会有闪烁\n```\n解决办法：使用mouseenter\n\n知识点:\nmouseover事件与mouseenter事件的区别：\n(1).mouseover——不论鼠标指针穿过被选元素或其子元素，都会触发 mouseover 事件，对应mouseout\n(2).mouseenter——只有在鼠标指针穿过被选元素时，才会触发 mouseenter 事件，对应mouseleave\n\nmouseenter子元素不会反复触发事件，否则在IE中经常有闪烁情况发生\n```\n\n### 3.arr.sort(fn)\n```\n在自定义排序规则的时候，需要传入fn，fn的返回值为数字，分别为正数、0、负数，而非Boolean类型\n```\n### 4.一个DIV实现两个背景\n```\nbackground-color与background-image配合使用\n```\n\n### 5.多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行\n```\n解决办法：给item增加一个父级元素，给父级的div加宽，宽度=原宽度 + margin-right，原父级元素的宽度保持不变，并设置overflow：hidden\n```\n\n\n### 6.模态框父级透明，子级会发生继承的问题\n```\n原因：父级设置了opacity，而该属性是会被子元素继承，导致子元素透明\n解决办法：父元素通过background-color: raba(0, 0, 0, 0.5)来设置透明度\n```\n\n### 7.跨域的解决办法 \n\n\n```\n// MAC, 在控制台执行:\nopen -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/hunter(用户名)/MyChromeDevUserData/\n\n// windows:\n新建一个chrome快捷方式，右键“属性”，“快捷方式”选项卡里选择“目标”，添加--args --disable-web-security --user-data-dir\n```\n\n\n### 8.scss循环\n```\n// 模板的数量\n$num: 4;\n$bg_color: #6D43DF #E02DB4 #EB8900 #2D69E0;\n$headline_color: #5A4D80 #804D73 #806A4D #4D5D80;\n\n// 模板\n@for $i from 1 through $num {\n\n    $back_color: nth($bg_color, $i);\n    $title_color: nth($headline_color, $i);\n\n    .template#{$i} {\n        .top-sale {\n            background-image: url(~imgUrl/brand-top-bg-#{$i}.png);\n            background-size: 100% 100%;\n\n            .pro-item {\n                background-color: $back_color !important;\n            }\n        }\n        .headline-title {\n            color: $title_color;\n        }\n\n    }\n}\n```\n\n\n","source":"_posts/summary.md","raw":"---\ntitle: 日常小知识点\ndate: 2018-08-02\ntags:\n---\n\n**写代码是一件很慎重的事情，对自己的每一句代码负责**\n\n### 1、使用gulp-minify-css对css进行压缩时，会丢弃css hack代码\n```\n解决办法：使用gulp-clean-css打包\n```\n\n<!-- more -->\n\n### 2、在IE中mouseover会有闪烁\n```\n解决办法：使用mouseenter\n\n知识点:\nmouseover事件与mouseenter事件的区别：\n(1).mouseover——不论鼠标指针穿过被选元素或其子元素，都会触发 mouseover 事件，对应mouseout\n(2).mouseenter——只有在鼠标指针穿过被选元素时，才会触发 mouseenter 事件，对应mouseleave\n\nmouseenter子元素不会反复触发事件，否则在IE中经常有闪烁情况发生\n```\n\n### 3.arr.sort(fn)\n```\n在自定义排序规则的时候，需要传入fn，fn的返回值为数字，分别为正数、0、负数，而非Boolean类型\n```\n### 4.一个DIV实现两个背景\n```\nbackground-color与background-image配合使用\n```\n\n### 5.多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行\n```\n解决办法：给item增加一个父级元素，给父级的div加宽，宽度=原宽度 + margin-right，原父级元素的宽度保持不变，并设置overflow：hidden\n```\n\n\n### 6.模态框父级透明，子级会发生继承的问题\n```\n原因：父级设置了opacity，而该属性是会被子元素继承，导致子元素透明\n解决办法：父元素通过background-color: raba(0, 0, 0, 0.5)来设置透明度\n```\n\n### 7.跨域的解决办法 \n\n\n```\n// MAC, 在控制台执行:\nopen -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/hunter(用户名)/MyChromeDevUserData/\n\n// windows:\n新建一个chrome快捷方式，右键“属性”，“快捷方式”选项卡里选择“目标”，添加--args --disable-web-security --user-data-dir\n```\n\n\n### 8.scss循环\n```\n// 模板的数量\n$num: 4;\n$bg_color: #6D43DF #E02DB4 #EB8900 #2D69E0;\n$headline_color: #5A4D80 #804D73 #806A4D #4D5D80;\n\n// 模板\n@for $i from 1 through $num {\n\n    $back_color: nth($bg_color, $i);\n    $title_color: nth($headline_color, $i);\n\n    .template#{$i} {\n        .top-sale {\n            background-image: url(~imgUrl/brand-top-bg-#{$i}.png);\n            background-size: 100% 100%;\n\n            .pro-item {\n                background-color: $back_color !important;\n            }\n        }\n        .headline-title {\n            color: $title_color;\n        }\n\n    }\n}\n```\n\n\n","slug":"summary","published":1,"updated":"2019-04-15T05:03:00.617Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwmr000fre6hys32ijjc","content":"<p><strong>写代码是一件很慎重的事情，对自己的每一句代码负责</strong></p>\n<h3 id=\"1、使用gulp-minify-css对css进行压缩时，会丢弃css-hack代码\"><a href=\"#1、使用gulp-minify-css对css进行压缩时，会丢弃css-hack代码\" class=\"headerlink\" title=\"1、使用gulp-minify-css对css进行压缩时，会丢弃css hack代码\"></a>1、使用gulp-minify-css对css进行压缩时，会丢弃css hack代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决办法：使用gulp-clean-css打包</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"2、在IE中mouseover会有闪烁\"><a href=\"#2、在IE中mouseover会有闪烁\" class=\"headerlink\" title=\"2、在IE中mouseover会有闪烁\"></a>2、在IE中mouseover会有闪烁</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决办法：使用mouseenter</span><br><span class=\"line\"></span><br><span class=\"line\">知识点:</span><br><span class=\"line\">mouseover事件与mouseenter事件的区别：</span><br><span class=\"line\">(1).mouseover——不论鼠标指针穿过被选元素或其子元素，都会触发 mouseover 事件，对应mouseout</span><br><span class=\"line\">(2).mouseenter——只有在鼠标指针穿过被选元素时，才会触发 mouseenter 事件，对应mouseleave</span><br><span class=\"line\"></span><br><span class=\"line\">mouseenter子元素不会反复触发事件，否则在IE中经常有闪烁情况发生</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-arr-sort-fn\"><a href=\"#3-arr-sort-fn\" class=\"headerlink\" title=\"3.arr.sort(fn)\"></a>3.arr.sort(fn)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在自定义排序规则的时候，需要传入fn，fn的返回值为数字，分别为正数、0、负数，而非Boolean类型</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-一个DIV实现两个背景\"><a href=\"#4-一个DIV实现两个背景\" class=\"headerlink\" title=\"4.一个DIV实现两个背景\"></a>4.一个DIV实现两个背景</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">background-color与background-image配合使用</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行\"><a href=\"#5-多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行\" class=\"headerlink\" title=\"5.多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行\"></a>5.多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决办法：给item增加一个父级元素，给父级的div加宽，宽度=原宽度 + margin-right，原父级元素的宽度保持不变，并设置overflow：hidden</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-模态框父级透明，子级会发生继承的问题\"><a href=\"#6-模态框父级透明，子级会发生继承的问题\" class=\"headerlink\" title=\"6.模态框父级透明，子级会发生继承的问题\"></a>6.模态框父级透明，子级会发生继承的问题</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原因：父级设置了opacity，而该属性是会被子元素继承，导致子元素透明</span><br><span class=\"line\">解决办法：父元素通过background-color: raba(0, 0, 0, 0.5)来设置透明度</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-跨域的解决办法\"><a href=\"#7-跨域的解决办法\" class=\"headerlink\" title=\"7.跨域的解决办法\"></a>7.跨域的解决办法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// MAC, 在控制台执行:</span><br><span class=\"line\">open -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/hunter(用户名)/MyChromeDevUserData/</span><br><span class=\"line\"></span><br><span class=\"line\">// windows:</span><br><span class=\"line\">新建一个chrome快捷方式，右键“属性”，“快捷方式”选项卡里选择“目标”，添加--args --disable-web-security --user-data-dir</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-scss循环\"><a href=\"#8-scss循环\" class=\"headerlink\" title=\"8.scss循环\"></a>8.scss循环</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 模板的数量</span><br><span class=\"line\">$num: 4;</span><br><span class=\"line\">$bg_color: #6D43DF #E02DB4 #EB8900 #2D69E0;</span><br><span class=\"line\">$headline_color: #5A4D80 #804D73 #806A4D #4D5D80;</span><br><span class=\"line\"></span><br><span class=\"line\">// 模板</span><br><span class=\"line\">@for $i from 1 through $num &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $back_color: nth($bg_color, $i);</span><br><span class=\"line\">    $title_color: nth($headline_color, $i);</span><br><span class=\"line\"></span><br><span class=\"line\">    .template#&#123;$i&#125; &#123;</span><br><span class=\"line\">        .top-sale &#123;</span><br><span class=\"line\">            background-image: url(~imgUrl/brand-top-bg-#&#123;$i&#125;.png);</span><br><span class=\"line\">            background-size: 100% 100%;</span><br><span class=\"line\"></span><br><span class=\"line\">            .pro-item &#123;</span><br><span class=\"line\">                background-color: $back_color !important;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .headline-title &#123;</span><br><span class=\"line\">            color: $title_color;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><strong>写代码是一件很慎重的事情，对自己的每一句代码负责</strong></p>\n<h3 id=\"1、使用gulp-minify-css对css进行压缩时，会丢弃css-hack代码\"><a href=\"#1、使用gulp-minify-css对css进行压缩时，会丢弃css-hack代码\" class=\"headerlink\" title=\"1、使用gulp-minify-css对css进行压缩时，会丢弃css hack代码\"></a>1、使用gulp-minify-css对css进行压缩时，会丢弃css hack代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决办法：使用gulp-clean-css打包</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"2、在IE中mouseover会有闪烁\"><a href=\"#2、在IE中mouseover会有闪烁\" class=\"headerlink\" title=\"2、在IE中mouseover会有闪烁\"></a>2、在IE中mouseover会有闪烁</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决办法：使用mouseenter</span><br><span class=\"line\"></span><br><span class=\"line\">知识点:</span><br><span class=\"line\">mouseover事件与mouseenter事件的区别：</span><br><span class=\"line\">(1).mouseover——不论鼠标指针穿过被选元素或其子元素，都会触发 mouseover 事件，对应mouseout</span><br><span class=\"line\">(2).mouseenter——只有在鼠标指针穿过被选元素时，才会触发 mouseenter 事件，对应mouseleave</span><br><span class=\"line\"></span><br><span class=\"line\">mouseenter子元素不会反复触发事件，否则在IE中经常有闪烁情况发生</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-arr-sort-fn\"><a href=\"#3-arr-sort-fn\" class=\"headerlink\" title=\"3.arr.sort(fn)\"></a>3.arr.sort(fn)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在自定义排序规则的时候，需要传入fn，fn的返回值为数字，分别为正数、0、负数，而非Boolean类型</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-一个DIV实现两个背景\"><a href=\"#4-一个DIV实现两个背景\" class=\"headerlink\" title=\"4.一个DIV实现两个背景\"></a>4.一个DIV实现两个背景</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">background-color与background-image配合使用</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行\"><a href=\"#5-多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行\" class=\"headerlink\" title=\"5.多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行\"></a>5.多个item设有margin-right时，最后一个因margin-right的存在被显示到了下一行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决办法：给item增加一个父级元素，给父级的div加宽，宽度=原宽度 + margin-right，原父级元素的宽度保持不变，并设置overflow：hidden</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-模态框父级透明，子级会发生继承的问题\"><a href=\"#6-模态框父级透明，子级会发生继承的问题\" class=\"headerlink\" title=\"6.模态框父级透明，子级会发生继承的问题\"></a>6.模态框父级透明，子级会发生继承的问题</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原因：父级设置了opacity，而该属性是会被子元素继承，导致子元素透明</span><br><span class=\"line\">解决办法：父元素通过background-color: raba(0, 0, 0, 0.5)来设置透明度</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-跨域的解决办法\"><a href=\"#7-跨域的解决办法\" class=\"headerlink\" title=\"7.跨域的解决办法\"></a>7.跨域的解决办法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// MAC, 在控制台执行:</span><br><span class=\"line\">open -n /Applications/Google\\ Chrome.app/ --args --disable-web-security  --user-data-dir=/Users/hunter(用户名)/MyChromeDevUserData/</span><br><span class=\"line\"></span><br><span class=\"line\">// windows:</span><br><span class=\"line\">新建一个chrome快捷方式，右键“属性”，“快捷方式”选项卡里选择“目标”，添加--args --disable-web-security --user-data-dir</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-scss循环\"><a href=\"#8-scss循环\" class=\"headerlink\" title=\"8.scss循环\"></a>8.scss循环</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 模板的数量</span><br><span class=\"line\">$num: 4;</span><br><span class=\"line\">$bg_color: #6D43DF #E02DB4 #EB8900 #2D69E0;</span><br><span class=\"line\">$headline_color: #5A4D80 #804D73 #806A4D #4D5D80;</span><br><span class=\"line\"></span><br><span class=\"line\">// 模板</span><br><span class=\"line\">@for $i from 1 through $num &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $back_color: nth($bg_color, $i);</span><br><span class=\"line\">    $title_color: nth($headline_color, $i);</span><br><span class=\"line\"></span><br><span class=\"line\">    .template#&#123;$i&#125; &#123;</span><br><span class=\"line\">        .top-sale &#123;</span><br><span class=\"line\">            background-image: url(~imgUrl/brand-top-bg-#&#123;$i&#125;.png);</span><br><span class=\"line\">            background-size: 100% 100%;</span><br><span class=\"line\"></span><br><span class=\"line\">            .pro-item &#123;</span><br><span class=\"line\">                background-color: $back_color !important;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .headline-title &#123;</span><br><span class=\"line\">            color: $title_color;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"SSH","date":"2019-04-27T10:00:47.000Z","_content":"\n### 一、为什么有SSH？\n\n- SSH解决的问题：加密登录远程机器\n- SSH是一种网络协议，使用SSH协议登录另一台远程计算机是安全的，即使中途被拦截，密码也不会泄露\n\n<!-- more -->\n\n### 二、SSH登录过程\n- 1、用户尝试登录远程主机，然后远程主机会将自己的公钥返回给用户\n- 2、用户使用公钥将密码加密后发给远程主机\n- 3、远程主机将加密后的密码用私钥进行验证，如果正确则登录成功，否则失败\n\n### 三、SSH命令\n\n**1、登录命令**\n \n```\nssh [-l login_name] [-p port] [user@]hostname \n```\n* 登录远程主机host，`ssh user@host`，user指用户名，host为IP地址\n\n* shh默认登录22端口， `ssh -p port user@host`，通过这条命令改变端口号\n\n* 首次登录会询问用户是否继续链接远程主机，确认后会将公钥发给用户\n\n```\nssh hht@192.168.12.32\nshh -p 2232 hht@192.168.12.32  // 链接到主机的2232端口\n```\n\n* 公钥登录：解决每次登录都要输入密码的问题\n\n> 公钥登录：用户将自己的公钥(ssh-keygen生成)储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。\n\n\n### 四、scp 跨机远程拷贝\nscp —— secure copy，可用于在Linux下实现远程命令的拷贝，常用的拷贝cp只能在本机上实现拷贝不能跨服务器，scp的传输是加密的，所以传输速度略慢，由于涉及到远程服务器之间的拷贝，需要操作者具备各服务器的权限。\n\n**scp命令使用方法**\n\n```\nscp [param] 源地址 目标地址\n\n// 将远程的文件复制到本地\nscp hht@192.168.12.32:/hht/work/index.html  /hht/work/index.html\n\n// 复制文件夹\nscp -r hht@192.168.12.32:/hht/work/ /hht/work/\n```","source":"_posts/ssh.md","raw":"---\ntitle: SSH\ndate: 2019-04-27 18:00:47\ntags:\n    - linux\n    - 服务器\n---\n\n### 一、为什么有SSH？\n\n- SSH解决的问题：加密登录远程机器\n- SSH是一种网络协议，使用SSH协议登录另一台远程计算机是安全的，即使中途被拦截，密码也不会泄露\n\n<!-- more -->\n\n### 二、SSH登录过程\n- 1、用户尝试登录远程主机，然后远程主机会将自己的公钥返回给用户\n- 2、用户使用公钥将密码加密后发给远程主机\n- 3、远程主机将加密后的密码用私钥进行验证，如果正确则登录成功，否则失败\n\n### 三、SSH命令\n\n**1、登录命令**\n \n```\nssh [-l login_name] [-p port] [user@]hostname \n```\n* 登录远程主机host，`ssh user@host`，user指用户名，host为IP地址\n\n* shh默认登录22端口， `ssh -p port user@host`，通过这条命令改变端口号\n\n* 首次登录会询问用户是否继续链接远程主机，确认后会将公钥发给用户\n\n```\nssh hht@192.168.12.32\nshh -p 2232 hht@192.168.12.32  // 链接到主机的2232端口\n```\n\n* 公钥登录：解决每次登录都要输入密码的问题\n\n> 公钥登录：用户将自己的公钥(ssh-keygen生成)储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。\n\n\n### 四、scp 跨机远程拷贝\nscp —— secure copy，可用于在Linux下实现远程命令的拷贝，常用的拷贝cp只能在本机上实现拷贝不能跨服务器，scp的传输是加密的，所以传输速度略慢，由于涉及到远程服务器之间的拷贝，需要操作者具备各服务器的权限。\n\n**scp命令使用方法**\n\n```\nscp [param] 源地址 目标地址\n\n// 将远程的文件复制到本地\nscp hht@192.168.12.32:/hht/work/index.html  /hht/work/index.html\n\n// 复制文件夹\nscp -r hht@192.168.12.32:/hht/work/ /hht/work/\n```","slug":"ssh","published":1,"updated":"2019-04-27T10:13:12.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwms000hre6hvzqjclid","content":"<h3 id=\"一、为什么有SSH？\"><a href=\"#一、为什么有SSH？\" class=\"headerlink\" title=\"一、为什么有SSH？\"></a>一、为什么有SSH？</h3><ul>\n<li>SSH解决的问题：加密登录远程机器</li>\n<li>SSH是一种网络协议，使用SSH协议登录另一台远程计算机是安全的，即使中途被拦截，密码也不会泄露</li>\n</ul>\n<a id=\"more\"></a>\n<h3 id=\"二、SSH登录过程\"><a href=\"#二、SSH登录过程\" class=\"headerlink\" title=\"二、SSH登录过程\"></a>二、SSH登录过程</h3><ul>\n<li>1、用户尝试登录远程主机，然后远程主机会将自己的公钥返回给用户</li>\n<li>2、用户使用公钥将密码加密后发给远程主机</li>\n<li>3、远程主机将加密后的密码用私钥进行验证，如果正确则登录成功，否则失败</li>\n</ul>\n<h3 id=\"三、SSH命令\"><a href=\"#三、SSH命令\" class=\"headerlink\" title=\"三、SSH命令\"></a>三、SSH命令</h3><p><strong>1、登录命令</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh [-l login_name] [-p port] [user@]hostname</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>登录远程主机host，<code>ssh user@host</code>，user指用户名，host为IP地址</p>\n</li>\n<li><p>shh默认登录22端口， <code>ssh -p port user@host</code>，通过这条命令改变端口号</p>\n</li>\n<li><p>首次登录会询问用户是否继续链接远程主机，确认后会将公钥发给用户</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh hht@192.168.12.32</span><br><span class=\"line\">shh -p 2232 hht@192.168.12.32  // 链接到主机的2232端口</span><br></pre></td></tr></table></figure>\n<ul>\n<li>公钥登录：解决每次登录都要输入密码的问题</li>\n</ul>\n<blockquote>\n<p>公钥登录：用户将自己的公钥(ssh-keygen生成)储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。</p>\n</blockquote>\n<h3 id=\"四、scp-跨机远程拷贝\"><a href=\"#四、scp-跨机远程拷贝\" class=\"headerlink\" title=\"四、scp 跨机远程拷贝\"></a>四、scp 跨机远程拷贝</h3><p>scp —— secure copy，可用于在Linux下实现远程命令的拷贝，常用的拷贝cp只能在本机上实现拷贝不能跨服务器，scp的传输是加密的，所以传输速度略慢，由于涉及到远程服务器之间的拷贝，需要操作者具备各服务器的权限。</p>\n<p><strong>scp命令使用方法</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp [param] 源地址 目标地址</span><br><span class=\"line\"></span><br><span class=\"line\">// 将远程的文件复制到本地</span><br><span class=\"line\">scp hht@192.168.12.32:/hht/work/index.html  /hht/work/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">// 复制文件夹</span><br><span class=\"line\">scp -r hht@192.168.12.32:/hht/work/ /hht/work/</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"一、为什么有SSH？\"><a href=\"#一、为什么有SSH？\" class=\"headerlink\" title=\"一、为什么有SSH？\"></a>一、为什么有SSH？</h3><ul>\n<li>SSH解决的问题：加密登录远程机器</li>\n<li>SSH是一种网络协议，使用SSH协议登录另一台远程计算机是安全的，即使中途被拦截，密码也不会泄露</li>\n</ul>","more":"<h3 id=\"二、SSH登录过程\"><a href=\"#二、SSH登录过程\" class=\"headerlink\" title=\"二、SSH登录过程\"></a>二、SSH登录过程</h3><ul>\n<li>1、用户尝试登录远程主机，然后远程主机会将自己的公钥返回给用户</li>\n<li>2、用户使用公钥将密码加密后发给远程主机</li>\n<li>3、远程主机将加密后的密码用私钥进行验证，如果正确则登录成功，否则失败</li>\n</ul>\n<h3 id=\"三、SSH命令\"><a href=\"#三、SSH命令\" class=\"headerlink\" title=\"三、SSH命令\"></a>三、SSH命令</h3><p><strong>1、登录命令</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh [-l login_name] [-p port] [user@]hostname</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>登录远程主机host，<code>ssh user@host</code>，user指用户名，host为IP地址</p>\n</li>\n<li><p>shh默认登录22端口， <code>ssh -p port user@host</code>，通过这条命令改变端口号</p>\n</li>\n<li><p>首次登录会询问用户是否继续链接远程主机，确认后会将公钥发给用户</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh hht@192.168.12.32</span><br><span class=\"line\">shh -p 2232 hht@192.168.12.32  // 链接到主机的2232端口</span><br></pre></td></tr></table></figure>\n<ul>\n<li>公钥登录：解决每次登录都要输入密码的问题</li>\n</ul>\n<blockquote>\n<p>公钥登录：用户将自己的公钥(ssh-keygen生成)储存在远程主机上。登录的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密后，再发回来。远程主机用事先储存的公钥进行解密，如果成功，就证明用户是可信的，直接允许登录shell，不再要求密码。</p>\n</blockquote>\n<h3 id=\"四、scp-跨机远程拷贝\"><a href=\"#四、scp-跨机远程拷贝\" class=\"headerlink\" title=\"四、scp 跨机远程拷贝\"></a>四、scp 跨机远程拷贝</h3><p>scp —— secure copy，可用于在Linux下实现远程命令的拷贝，常用的拷贝cp只能在本机上实现拷贝不能跨服务器，scp的传输是加密的，所以传输速度略慢，由于涉及到远程服务器之间的拷贝，需要操作者具备各服务器的权限。</p>\n<p><strong>scp命令使用方法</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp [param] 源地址 目标地址</span><br><span class=\"line\"></span><br><span class=\"line\">// 将远程的文件复制到本地</span><br><span class=\"line\">scp hht@192.168.12.32:/hht/work/index.html  /hht/work/index.html</span><br><span class=\"line\"></span><br><span class=\"line\">// 复制文件夹</span><br><span class=\"line\">scp -r hht@192.168.12.32:/hht/work/ /hht/work/</span><br></pre></td></tr></table></figure>"},{"title":"Require","date":"2017-01-01T16:00:00.000Z","_content":"\n\n### 1、产生背景\n​一个网页文件中引入多个javascript文件时，在页面加载的过程中，页面会停止渲染，加载的文件越多，网页响应的时间越长，而且有些JS文件存在依赖关系，当依赖关系变得复杂时，代码的编写和维护就变得困难。因此，RequireJS应运而生，它主要为了解决两个问题：\n\n\n<!-- more -->\n\n```\n1、实现js文件的异步加载，避免网页失去响应\n\n2、管理模块之间的依赖性，便于代码的编写和维护\n```\n### 2、概念——异步模块定义\n\n```\n​ 1、AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。所有的模块将被异步加载，模块加载不影响后面语句运行，所有依赖某些模块的语句均放置在回调函数中。\n\n​ 2、针对多个模块需要加载多次，产生多次HTTP请求影响网页加载速度的情形，require提供了一个优化工具，当模块部署完毕后，优化工具将多个模块合并在一个文件中，减少HTTP请求数。\n```\n\n### 3、主模块中的加载位置的配置，放在主文件最前面，require.js通过回调函数来执行模块中的代码：\n​ (1)、加载位置的配置\n```\nrequire.config({\n\n    ​ baseUrl: “相对路径的前部分”\n\n    ​ paths:{\n\n    ​   “jquery”：“文件名”\n\n    ​ }\n\n​ });\n```\n\n​ (2)、加载模块\n\n```\nrequire([“需要加载的模块”] , function(对应模块的参数){\n\n    ​ //调用\n\n    ​ 模块名称.方法（参数）;\n\n​ })\n```\n\n### 4、定义新模块\n​ (1)、无依赖模块的写法\n```\ndefine(function(){\n\n    ​ function a(){\n\n        ​ dosomething();\n\n    ​ }\n\n​     . . .\n\n    ​ return {\n\n        ​ a:a\n\n    ​ };\n\n​ })\n```\n​ (2)、有依赖模块的写法\n```\ndefine([“依赖模块的标识符”]，function(参数名){\n\n    ​ function a(){\n\n    ​   dosomething();\n\n    ​ }\n\n    ​ . . .\n\n    ​ return {\n\n    ​   a:a\n\n    ​ };\n\n​ })\n```\n5、非规范模块的加载——require.config()对象中加入shim属性\n```\n​ require.config({\n\n    ​ paths:{\n\n    ​   . . .\n\n    ​ }\n\n    ​ shim:{\n\n        ​ ‘backbone’:{\n\n            ​ deps:[‘underscore’ ,‘jquery’ ], //表示依赖项\n\n            ​ exports：‘Backbone’ //输出的变量名，即外部调用的时的名称\n\n        ​ }\n\n    ​ }\n\n​ })\n```\n\n6、require.js插件\n\n​ (1)、domready插件：让回调函数在页面DOM加载完成后执行\n\n​ (2)、text和image插件：允许require.js加载文本和图片文件\n","source":"_posts/require.md","raw":"---\ntitle: Require\ndate: 2017-01-02\ntags: \n    - require\n---\n\n\n### 1、产生背景\n​一个网页文件中引入多个javascript文件时，在页面加载的过程中，页面会停止渲染，加载的文件越多，网页响应的时间越长，而且有些JS文件存在依赖关系，当依赖关系变得复杂时，代码的编写和维护就变得困难。因此，RequireJS应运而生，它主要为了解决两个问题：\n\n\n<!-- more -->\n\n```\n1、实现js文件的异步加载，避免网页失去响应\n\n2、管理模块之间的依赖性，便于代码的编写和维护\n```\n### 2、概念——异步模块定义\n\n```\n​ 1、AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。所有的模块将被异步加载，模块加载不影响后面语句运行，所有依赖某些模块的语句均放置在回调函数中。\n\n​ 2、针对多个模块需要加载多次，产生多次HTTP请求影响网页加载速度的情形，require提供了一个优化工具，当模块部署完毕后，优化工具将多个模块合并在一个文件中，减少HTTP请求数。\n```\n\n### 3、主模块中的加载位置的配置，放在主文件最前面，require.js通过回调函数来执行模块中的代码：\n​ (1)、加载位置的配置\n```\nrequire.config({\n\n    ​ baseUrl: “相对路径的前部分”\n\n    ​ paths:{\n\n    ​   “jquery”：“文件名”\n\n    ​ }\n\n​ });\n```\n\n​ (2)、加载模块\n\n```\nrequire([“需要加载的模块”] , function(对应模块的参数){\n\n    ​ //调用\n\n    ​ 模块名称.方法（参数）;\n\n​ })\n```\n\n### 4、定义新模块\n​ (1)、无依赖模块的写法\n```\ndefine(function(){\n\n    ​ function a(){\n\n        ​ dosomething();\n\n    ​ }\n\n​     . . .\n\n    ​ return {\n\n        ​ a:a\n\n    ​ };\n\n​ })\n```\n​ (2)、有依赖模块的写法\n```\ndefine([“依赖模块的标识符”]，function(参数名){\n\n    ​ function a(){\n\n    ​   dosomething();\n\n    ​ }\n\n    ​ . . .\n\n    ​ return {\n\n    ​   a:a\n\n    ​ };\n\n​ })\n```\n5、非规范模块的加载——require.config()对象中加入shim属性\n```\n​ require.config({\n\n    ​ paths:{\n\n    ​   . . .\n\n    ​ }\n\n    ​ shim:{\n\n        ​ ‘backbone’:{\n\n            ​ deps:[‘underscore’ ,‘jquery’ ], //表示依赖项\n\n            ​ exports：‘Backbone’ //输出的变量名，即外部调用的时的名称\n\n        ​ }\n\n    ​ }\n\n​ })\n```\n\n6、require.js插件\n\n​ (1)、domready插件：让回调函数在页面DOM加载完成后执行\n\n​ (2)、text和image插件：允许require.js加载文本和图片文件\n","slug":"require","published":1,"updated":"2019-04-13T04:32:01.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwms000jre6he6n8vi00","content":"<h3 id=\"1、产生背景\"><a href=\"#1、产生背景\" class=\"headerlink\" title=\"1、产生背景\"></a>1、产生背景</h3><p>​一个网页文件中引入多个javascript文件时，在页面加载的过程中，页面会停止渲染，加载的文件越多，网页响应的时间越长，而且有些JS文件存在依赖关系，当依赖关系变得复杂时，代码的编写和维护就变得困难。因此，RequireJS应运而生，它主要为了解决两个问题：</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、实现js文件的异步加载，避免网页失去响应</span><br><span class=\"line\"></span><br><span class=\"line\">2、管理模块之间的依赖性，便于代码的编写和维护</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、概念——异步模块定义\"><a href=\"#2、概念——异步模块定义\" class=\"headerlink\" title=\"2、概念——异步模块定义\"></a>2、概念——异步模块定义</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​ 1、AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。所有的模块将被异步加载，模块加载不影响后面语句运行，所有依赖某些模块的语句均放置在回调函数中。</span><br><span class=\"line\"></span><br><span class=\"line\">​ 2、针对多个模块需要加载多次，产生多次HTTP请求影响网页加载速度的情形，require提供了一个优化工具，当模块部署完毕后，优化工具将多个模块合并在一个文件中，减少HTTP请求数。</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、主模块中的加载位置的配置，放在主文件最前面，require-js通过回调函数来执行模块中的代码：\"><a href=\"#3、主模块中的加载位置的配置，放在主文件最前面，require-js通过回调函数来执行模块中的代码：\" class=\"headerlink\" title=\"3、主模块中的加载位置的配置，放在主文件最前面，require.js通过回调函数来执行模块中的代码：\"></a>3、主模块中的加载位置的配置，放在主文件最前面，require.js通过回调函数来执行模块中的代码：</h3><p>​ (1)、加载位置的配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require.config(&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ baseUrl: “相对路径的前部分”</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ paths:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​   “jquery”：“文件名”</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>​ (2)、加载模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require([“需要加载的模块”] , function(对应模块的参数)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ //调用</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ 模块名称.方法（参数）;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、定义新模块\"><a href=\"#4、定义新模块\" class=\"headerlink\" title=\"4、定义新模块\"></a>4、定义新模块</h3><p>​ (1)、无依赖模块的写法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ function a()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ​ dosomething();</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">​     . . .</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ return &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ​ a:a</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>​ (2)、有依赖模块的写法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define([“依赖模块的标识符”]，function(参数名)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ function a()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​   dosomething();</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ . . .</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ return &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​   a:a</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>5、非规范模块的加载——require.config()对象中加入shim属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​ require.config(&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ paths:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​   . . .</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ shim:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ​ ‘backbone’:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            ​ deps:[‘underscore’ ,‘jquery’ ], //表示依赖项</span><br><span class=\"line\"></span><br><span class=\"line\">            ​ exports：‘Backbone’ //输出的变量名，即外部调用的时的名称</span><br><span class=\"line\"></span><br><span class=\"line\">        ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>6、require.js插件</p>\n<p>​ (1)、domready插件：让回调函数在页面DOM加载完成后执行</p>\n<p>​ (2)、text和image插件：允许require.js加载文本和图片文件</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"1、产生背景\"><a href=\"#1、产生背景\" class=\"headerlink\" title=\"1、产生背景\"></a>1、产生背景</h3><p>​一个网页文件中引入多个javascript文件时，在页面加载的过程中，页面会停止渲染，加载的文件越多，网页响应的时间越长，而且有些JS文件存在依赖关系，当依赖关系变得复杂时，代码的编写和维护就变得困难。因此，RequireJS应运而生，它主要为了解决两个问题：</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、实现js文件的异步加载，避免网页失去响应</span><br><span class=\"line\"></span><br><span class=\"line\">2、管理模块之间的依赖性，便于代码的编写和维护</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、概念——异步模块定义\"><a href=\"#2、概念——异步模块定义\" class=\"headerlink\" title=\"2、概念——异步模块定义\"></a>2、概念——异步模块定义</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​ 1、AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。所有的模块将被异步加载，模块加载不影响后面语句运行，所有依赖某些模块的语句均放置在回调函数中。</span><br><span class=\"line\"></span><br><span class=\"line\">​ 2、针对多个模块需要加载多次，产生多次HTTP请求影响网页加载速度的情形，require提供了一个优化工具，当模块部署完毕后，优化工具将多个模块合并在一个文件中，减少HTTP请求数。</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、主模块中的加载位置的配置，放在主文件最前面，require-js通过回调函数来执行模块中的代码：\"><a href=\"#3、主模块中的加载位置的配置，放在主文件最前面，require-js通过回调函数来执行模块中的代码：\" class=\"headerlink\" title=\"3、主模块中的加载位置的配置，放在主文件最前面，require.js通过回调函数来执行模块中的代码：\"></a>3、主模块中的加载位置的配置，放在主文件最前面，require.js通过回调函数来执行模块中的代码：</h3><p>​ (1)、加载位置的配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require.config(&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ baseUrl: “相对路径的前部分”</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ paths:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​   “jquery”：“文件名”</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>​ (2)、加载模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">require([“需要加载的模块”] , function(对应模块的参数)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ //调用</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ 模块名称.方法（参数）;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、定义新模块\"><a href=\"#4、定义新模块\" class=\"headerlink\" title=\"4、定义新模块\"></a>4、定义新模块</h3><p>​ (1)、无依赖模块的写法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define(function()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ function a()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ​ dosomething();</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">​     . . .</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ return &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ​ a:a</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>​ (2)、有依赖模块的写法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">define([“依赖模块的标识符”]，function(参数名)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ function a()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​   dosomething();</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ . . .</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ return &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​   a:a</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>5、非规范模块的加载——require.config()对象中加入shim属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​ require.config(&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ paths:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​   . . .</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ shim:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ​ ‘backbone’:&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            ​ deps:[‘underscore’ ,‘jquery’ ], //表示依赖项</span><br><span class=\"line\"></span><br><span class=\"line\">            ​ exports：‘Backbone’ //输出的变量名，即外部调用的时的名称</span><br><span class=\"line\"></span><br><span class=\"line\">        ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ​ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">​ &#125;)</span><br></pre></td></tr></table></figure></p>\n<p>6、require.js插件</p>\n<p>​ (1)、domready插件：让回调函数在页面DOM加载完成后执行</p>\n<p>​ (2)、text和image插件：允许require.js加载文本和图片文件</p>"},{"title":"webpack使用参数说明","date":"2017-06-21T16:00:00.000Z","_content":"\n### 1、entry 用来定义入口文件，可以是字符串或者是对象\n\n<!-- more -->\n\n```\n1、entry值为字符串，如\n    entry: __dirname + './index.js'\n    \n2、entry值为数组，表示数组里面的文件最后导出到一个js，如\n    entry: ['index1.js', 'index2.js']\n    \n3、entry值为对象，表示输出多个文件，输出文件也应做相应的配置，如\n\n    entry: {\n        home: './home.js',\n        index: ['./index1.js', './index2.js'],\n        register: './register.js',\n        error: './error.js',\n        vendor: ['react', 'react-dom']\n    }\n\n```\n### 2、output 用来定义输出文件，对象类型\n\n```\n1、path属性: 用来定义打包后文件的输出路径，如\n    path: './public/js'\n2、filename属性: 用来定义输出文件的文件名，可以是一个字符串\n    如果entry为字符串或数组，表示生成到统一个文件，直接可以这样写，如\n        filename: 'build.js'\n    如果entry为对象，可以根据entry的key值构建到不同的js包中，如\n        filename: '[name].bundle.js'\n    如上述entry对象分别会打包到不同js包中，依次会打包到home.bundle.js、index.bundle.js、register.bundle.js、error.bundle.js\n3、publicPath属性: 指定被引用的URL地址，一般为public\n    publicPath: '/assets/'\n\n```\n### 3、module 模块加载器，对象类型\n\n```\nmodule: {\n    loaders: {\n        // 正则匹配，匹配到的会进行打包\n        test: /\\.js$/,\n        // 设置加载器\n        loader: 'babel-loader',\n        // 不打包的文件夹\n        exclude: /node_modules/\n    },\n    {\n        test: /\\.css$/,\n        loader: 'style-loader!css-loader',\n        exclude: /node_modules/\n    },\n    ...\n}\n\n```\n### 4、resolve用于配置中补全的后缀\n\n```\nresolve: {\n    // 自动扩展文件的后缀名\n    extensions: ['', '.', '.json'],\n    // 设置查找路径\n    root: 'resource/components/',\n    // 模块别名定义，方便后续直接引用别名，不需要写很长的地址\n    alias: {\n        requestData: 'js/api/ajax.js'\n    }\n}\n\n```\n### 5、plugins 添加各种额外的插件\n\n```\nplugins: [\n    // 单独将entry中的文件进行打包\n    new webpack.optimize.CommonsChunkPlugin({\n        name: 'vendor',\n        filename: 'vendor.bundle.js'\n    }),\n    // 代码压缩UglifyJsPlugin\n    new webpack.optimize.UglifyJsPlugin({\n        compress: {\n            warning: false   \n        }\n    })\n]\n\n```\n### 6、externals 通过script引入类库，但不希望webpack打包到输出文件中\n```\nexternels: {\n    'react': 'window.React',\n    'react-dom': 'window.ReactDOM',\n    'router': 'window.ReactRouter',\n    'echarts': 'window.echarts'\n}\n```","source":"_posts/webpack.md","raw":"---\ntitle: webpack使用参数说明\ndate: 2017-06-22\ntags:\n    - webpack\n---\n\n### 1、entry 用来定义入口文件，可以是字符串或者是对象\n\n<!-- more -->\n\n```\n1、entry值为字符串，如\n    entry: __dirname + './index.js'\n    \n2、entry值为数组，表示数组里面的文件最后导出到一个js，如\n    entry: ['index1.js', 'index2.js']\n    \n3、entry值为对象，表示输出多个文件，输出文件也应做相应的配置，如\n\n    entry: {\n        home: './home.js',\n        index: ['./index1.js', './index2.js'],\n        register: './register.js',\n        error: './error.js',\n        vendor: ['react', 'react-dom']\n    }\n\n```\n### 2、output 用来定义输出文件，对象类型\n\n```\n1、path属性: 用来定义打包后文件的输出路径，如\n    path: './public/js'\n2、filename属性: 用来定义输出文件的文件名，可以是一个字符串\n    如果entry为字符串或数组，表示生成到统一个文件，直接可以这样写，如\n        filename: 'build.js'\n    如果entry为对象，可以根据entry的key值构建到不同的js包中，如\n        filename: '[name].bundle.js'\n    如上述entry对象分别会打包到不同js包中，依次会打包到home.bundle.js、index.bundle.js、register.bundle.js、error.bundle.js\n3、publicPath属性: 指定被引用的URL地址，一般为public\n    publicPath: '/assets/'\n\n```\n### 3、module 模块加载器，对象类型\n\n```\nmodule: {\n    loaders: {\n        // 正则匹配，匹配到的会进行打包\n        test: /\\.js$/,\n        // 设置加载器\n        loader: 'babel-loader',\n        // 不打包的文件夹\n        exclude: /node_modules/\n    },\n    {\n        test: /\\.css$/,\n        loader: 'style-loader!css-loader',\n        exclude: /node_modules/\n    },\n    ...\n}\n\n```\n### 4、resolve用于配置中补全的后缀\n\n```\nresolve: {\n    // 自动扩展文件的后缀名\n    extensions: ['', '.', '.json'],\n    // 设置查找路径\n    root: 'resource/components/',\n    // 模块别名定义，方便后续直接引用别名，不需要写很长的地址\n    alias: {\n        requestData: 'js/api/ajax.js'\n    }\n}\n\n```\n### 5、plugins 添加各种额外的插件\n\n```\nplugins: [\n    // 单独将entry中的文件进行打包\n    new webpack.optimize.CommonsChunkPlugin({\n        name: 'vendor',\n        filename: 'vendor.bundle.js'\n    }),\n    // 代码压缩UglifyJsPlugin\n    new webpack.optimize.UglifyJsPlugin({\n        compress: {\n            warning: false   \n        }\n    })\n]\n\n```\n### 6、externals 通过script引入类库，但不希望webpack打包到输出文件中\n```\nexternels: {\n    'react': 'window.React',\n    'react-dom': 'window.ReactDOM',\n    'router': 'window.ReactRouter',\n    'echarts': 'window.echarts'\n}\n```","slug":"webpack","published":1,"updated":"2019-04-13T10:01:38.849Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwmw000kre6h78skg2ff","content":"<h3 id=\"1、entry-用来定义入口文件，可以是字符串或者是对象\"><a href=\"#1、entry-用来定义入口文件，可以是字符串或者是对象\" class=\"headerlink\" title=\"1、entry 用来定义入口文件，可以是字符串或者是对象\"></a>1、entry 用来定义入口文件，可以是字符串或者是对象</h3><a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、entry值为字符串，如</span><br><span class=\"line\">    entry: __dirname + &apos;./index.js&apos;</span><br><span class=\"line\">    </span><br><span class=\"line\">2、entry值为数组，表示数组里面的文件最后导出到一个js，如</span><br><span class=\"line\">    entry: [&apos;index1.js&apos;, &apos;index2.js&apos;]</span><br><span class=\"line\">    </span><br><span class=\"line\">3、entry值为对象，表示输出多个文件，输出文件也应做相应的配置，如</span><br><span class=\"line\"></span><br><span class=\"line\">    entry: &#123;</span><br><span class=\"line\">        home: &apos;./home.js&apos;,</span><br><span class=\"line\">        index: [&apos;./index1.js&apos;, &apos;./index2.js&apos;],</span><br><span class=\"line\">        register: &apos;./register.js&apos;,</span><br><span class=\"line\">        error: &apos;./error.js&apos;,</span><br><span class=\"line\">        vendor: [&apos;react&apos;, &apos;react-dom&apos;]</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、output-用来定义输出文件，对象类型\"><a href=\"#2、output-用来定义输出文件，对象类型\" class=\"headerlink\" title=\"2、output 用来定义输出文件，对象类型\"></a>2、output 用来定义输出文件，对象类型</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、path属性: 用来定义打包后文件的输出路径，如</span><br><span class=\"line\">    path: &apos;./public/js&apos;</span><br><span class=\"line\">2、filename属性: 用来定义输出文件的文件名，可以是一个字符串</span><br><span class=\"line\">    如果entry为字符串或数组，表示生成到统一个文件，直接可以这样写，如</span><br><span class=\"line\">        filename: &apos;build.js&apos;</span><br><span class=\"line\">    如果entry为对象，可以根据entry的key值构建到不同的js包中，如</span><br><span class=\"line\">        filename: &apos;[name].bundle.js&apos;</span><br><span class=\"line\">    如上述entry对象分别会打包到不同js包中，依次会打包到home.bundle.js、index.bundle.js、register.bundle.js、error.bundle.js</span><br><span class=\"line\">3、publicPath属性: 指定被引用的URL地址，一般为public</span><br><span class=\"line\">    publicPath: &apos;/assets/&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、module-模块加载器，对象类型\"><a href=\"#3、module-模块加载器，对象类型\" class=\"headerlink\" title=\"3、module 模块加载器，对象类型\"></a>3、module 模块加载器，对象类型</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module: &#123;</span><br><span class=\"line\">    loaders: &#123;</span><br><span class=\"line\">        // 正则匹配，匹配到的会进行打包</span><br><span class=\"line\">        test: /\\.js$/,</span><br><span class=\"line\">        // 设置加载器</span><br><span class=\"line\">        loader: &apos;babel-loader&apos;,</span><br><span class=\"line\">        // 不打包的文件夹</span><br><span class=\"line\">        exclude: /node_modules/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.css$/,</span><br><span class=\"line\">        loader: &apos;style-loader!css-loader&apos;,</span><br><span class=\"line\">        exclude: /node_modules/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、resolve用于配置中补全的后缀\"><a href=\"#4、resolve用于配置中补全的后缀\" class=\"headerlink\" title=\"4、resolve用于配置中补全的后缀\"></a>4、resolve用于配置中补全的后缀</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">    // 自动扩展文件的后缀名</span><br><span class=\"line\">    extensions: [&apos;&apos;, &apos;.&apos;, &apos;.json&apos;],</span><br><span class=\"line\">    // 设置查找路径</span><br><span class=\"line\">    root: &apos;resource/components/&apos;,</span><br><span class=\"line\">    // 模块别名定义，方便后续直接引用别名，不需要写很长的地址</span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">        requestData: &apos;js/api/ajax.js&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、plugins-添加各种额外的插件\"><a href=\"#5、plugins-添加各种额外的插件\" class=\"headerlink\" title=\"5、plugins 添加各种额外的插件\"></a>5、plugins 添加各种额外的插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">    // 单独将entry中的文件进行打包</span><br><span class=\"line\">    new webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">        name: &apos;vendor&apos;,</span><br><span class=\"line\">        filename: &apos;vendor.bundle.js&apos;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // 代码压缩UglifyJsPlugin</span><br><span class=\"line\">    new webpack.optimize.UglifyJsPlugin(&#123;</span><br><span class=\"line\">        compress: &#123;</span><br><span class=\"line\">            warning: false   </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"6、externals-通过script引入类库，但不希望webpack打包到输出文件中\"><a href=\"#6、externals-通过script引入类库，但不希望webpack打包到输出文件中\" class=\"headerlink\" title=\"6、externals 通过script引入类库，但不希望webpack打包到输出文件中\"></a>6、externals 通过script引入类库，但不希望webpack打包到输出文件中</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">externels: &#123;</span><br><span class=\"line\">    &apos;react&apos;: &apos;window.React&apos;,</span><br><span class=\"line\">    &apos;react-dom&apos;: &apos;window.ReactDOM&apos;,</span><br><span class=\"line\">    &apos;router&apos;: &apos;window.ReactRouter&apos;,</span><br><span class=\"line\">    &apos;echarts&apos;: &apos;window.echarts&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"1、entry-用来定义入口文件，可以是字符串或者是对象\"><a href=\"#1、entry-用来定义入口文件，可以是字符串或者是对象\" class=\"headerlink\" title=\"1、entry 用来定义入口文件，可以是字符串或者是对象\"></a>1、entry 用来定义入口文件，可以是字符串或者是对象</h3>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、entry值为字符串，如</span><br><span class=\"line\">    entry: __dirname + &apos;./index.js&apos;</span><br><span class=\"line\">    </span><br><span class=\"line\">2、entry值为数组，表示数组里面的文件最后导出到一个js，如</span><br><span class=\"line\">    entry: [&apos;index1.js&apos;, &apos;index2.js&apos;]</span><br><span class=\"line\">    </span><br><span class=\"line\">3、entry值为对象，表示输出多个文件，输出文件也应做相应的配置，如</span><br><span class=\"line\"></span><br><span class=\"line\">    entry: &#123;</span><br><span class=\"line\">        home: &apos;./home.js&apos;,</span><br><span class=\"line\">        index: [&apos;./index1.js&apos;, &apos;./index2.js&apos;],</span><br><span class=\"line\">        register: &apos;./register.js&apos;,</span><br><span class=\"line\">        error: &apos;./error.js&apos;,</span><br><span class=\"line\">        vendor: [&apos;react&apos;, &apos;react-dom&apos;]</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、output-用来定义输出文件，对象类型\"><a href=\"#2、output-用来定义输出文件，对象类型\" class=\"headerlink\" title=\"2、output 用来定义输出文件，对象类型\"></a>2、output 用来定义输出文件，对象类型</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、path属性: 用来定义打包后文件的输出路径，如</span><br><span class=\"line\">    path: &apos;./public/js&apos;</span><br><span class=\"line\">2、filename属性: 用来定义输出文件的文件名，可以是一个字符串</span><br><span class=\"line\">    如果entry为字符串或数组，表示生成到统一个文件，直接可以这样写，如</span><br><span class=\"line\">        filename: &apos;build.js&apos;</span><br><span class=\"line\">    如果entry为对象，可以根据entry的key值构建到不同的js包中，如</span><br><span class=\"line\">        filename: &apos;[name].bundle.js&apos;</span><br><span class=\"line\">    如上述entry对象分别会打包到不同js包中，依次会打包到home.bundle.js、index.bundle.js、register.bundle.js、error.bundle.js</span><br><span class=\"line\">3、publicPath属性: 指定被引用的URL地址，一般为public</span><br><span class=\"line\">    publicPath: &apos;/assets/&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、module-模块加载器，对象类型\"><a href=\"#3、module-模块加载器，对象类型\" class=\"headerlink\" title=\"3、module 模块加载器，对象类型\"></a>3、module 模块加载器，对象类型</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module: &#123;</span><br><span class=\"line\">    loaders: &#123;</span><br><span class=\"line\">        // 正则匹配，匹配到的会进行打包</span><br><span class=\"line\">        test: /\\.js$/,</span><br><span class=\"line\">        // 设置加载器</span><br><span class=\"line\">        loader: &apos;babel-loader&apos;,</span><br><span class=\"line\">        // 不打包的文件夹</span><br><span class=\"line\">        exclude: /node_modules/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        test: /\\.css$/,</span><br><span class=\"line\">        loader: &apos;style-loader!css-loader&apos;,</span><br><span class=\"line\">        exclude: /node_modules/</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、resolve用于配置中补全的后缀\"><a href=\"#4、resolve用于配置中补全的后缀\" class=\"headerlink\" title=\"4、resolve用于配置中补全的后缀\"></a>4、resolve用于配置中补全的后缀</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resolve: &#123;</span><br><span class=\"line\">    // 自动扩展文件的后缀名</span><br><span class=\"line\">    extensions: [&apos;&apos;, &apos;.&apos;, &apos;.json&apos;],</span><br><span class=\"line\">    // 设置查找路径</span><br><span class=\"line\">    root: &apos;resource/components/&apos;,</span><br><span class=\"line\">    // 模块别名定义，方便后续直接引用别名，不需要写很长的地址</span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">        requestData: &apos;js/api/ajax.js&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、plugins-添加各种额外的插件\"><a href=\"#5、plugins-添加各种额外的插件\" class=\"headerlink\" title=\"5、plugins 添加各种额外的插件\"></a>5、plugins 添加各种额外的插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">    // 单独将entry中的文件进行打包</span><br><span class=\"line\">    new webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">        name: &apos;vendor&apos;,</span><br><span class=\"line\">        filename: &apos;vendor.bundle.js&apos;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // 代码压缩UglifyJsPlugin</span><br><span class=\"line\">    new webpack.optimize.UglifyJsPlugin(&#123;</span><br><span class=\"line\">        compress: &#123;</span><br><span class=\"line\">            warning: false   </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h3 id=\"6、externals-通过script引入类库，但不希望webpack打包到输出文件中\"><a href=\"#6、externals-通过script引入类库，但不希望webpack打包到输出文件中\" class=\"headerlink\" title=\"6、externals 通过script引入类库，但不希望webpack打包到输出文件中\"></a>6、externals 通过script引入类库，但不希望webpack打包到输出文件中</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">externels: &#123;</span><br><span class=\"line\">    &apos;react&apos;: &apos;window.React&apos;,</span><br><span class=\"line\">    &apos;react-dom&apos;: &apos;window.ReactDOM&apos;,</span><br><span class=\"line\">    &apos;router&apos;: &apos;window.ReactRouter&apos;,</span><br><span class=\"line\">    &apos;echarts&apos;: &apos;window.echarts&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"前端调试方法","date":"2019-03-22T16:00:00.000Z","_content":"\n- css调试\n- js调试\n- network\n- 性能调试\n- Application\n- Security\n- Audits\n- h5页面调试\n\n<!-- more -->\n\n控制面板快捷键： Command + Option + I（Mac）或 Control + Shift + I（Windows，Linux）\n\n\n## css调试\n\n** 1. 查看css **\n<img src=\"./debug/%E6%9F%A5%E7%9C%8Bcss.png\" width = \"50%\" />\n\n** 2. 查看伪元素样式 **\n\n<img src=\"./debug/%E4%BC%AA%E5%85%83%E7%B4%A0.png\" width = \"50%\" />\n\n** 3.添加或修改css样式 **\n1.直接在原class中添加新样式\n2.在新class中添加新样式\n3.复选框切换样式声明\n\n<img src=\"./debug/%E6%B7%BB%E5%8A%A0%E6%96%B0%E6%A0%B7%E5%BC%8F.png\" width = \"50%\" />\n\n\n\n** 4.快捷键修改声明值 **\n\n- 编辑声明的值时，可以使用以下键盘快捷键将值递增固定量\n\n```\n步长1：Up 将值更改为1\n步长0.1：Option+ Up（Mac）或Alt+ Up （Windows，Linux）增加0.1。\n步长10：Shift+ Up增加10。\n步长100：Shift+ Command+ Up（Mac）或 Shift+ Page Up（Windows，Linux）将值增加100\n```\n\n- 快速修改盒模型尺寸\n\n\n\n** 查看当前元素的事件 **\n- Ancestors：当前选定节点 + 祖先节点的事件(冒泡)\n- Framework listeners：安装在chrome上的插件的事件\n\n** 5.使用Coverage选项卡查看CSS和js的使用情况 **\n\n打开Coverage方法：\n- 打开devtools\n- 点击右上角...\n- More tools \n- Coverage\n\n快捷键：Command+ Shift+ P（Mac）或 Control+ Shift+ P（Windows，Linux，Chrome OS），输入coverage\n\n\n## js调试\n - 输出测试\n - 断点调试\n     - DOM断点调试\n     - js执行断点调试\n     - http request 断点调试\n\n** 1. 输出调试 **\n\nalert、[console](https://developer.mozilla.org/zh-CN/docs/Web/API/Console)、document.write、innerHTML等\n \n** 控制台 **\n\n快捷键： Ctrl+Shift+J (Windows / Linux) 或者 Cmd+Opt+J (Mac)。\n\n- console.log( )\n- console.error( )\n- console.warn( )\n- console.info( )\n- console.table( )\n- console.time( )、console.timeEnd( )\n- console.clear( )\n- console.assert( )\n- console.group( )、console.groupEnd( )\n- console.count( ) \n- copy( )\n- 。。。\n\n** 格式化输出 **\n\n- console.log('%c不一样的console.log', 'font-size: 20px; color: blue');\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8A%E5%8D%8811.44.09.png\" width = \"50%\" />\n\n** 2.断点调试 **\n\n\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-23%20%E4%B8%8A%E5%8D%8811.07.15.png\" width = \"50%\" />\n\n\n** 断点 **\n- 普通断点\n- 条件断点\n\ndebugger断点调试\n\n<img src=\"./debug/%E6%96%AD%E7%82%B9.png\" width = \"50%\" />\n\n- Watch：查看自定义表达式的值\n- Call stack ：调用栈\n- Scope：作用域\n- Breakpoints：管理代码断点\n- XHR/fetch Breakpoints：[http 请求断点](https://re.m.jd.com/ks/item/999992.html)\n- DOM Breakpoints：DOM断点\n\n### source面板\n Control + P or Command + P (Mac)\n<img src=\"./debug/openfile.png\" width = \"50%\" />\n\n\n## network \n\n查看资源加载情况\n\n- 设置是否启用缓存\n- 网络加载速度\n- 捕捉页面渲染瞬间\n\n** Filter 文本框：过滤请求 **\n\n** Group by frame **\nhttp://www.w3school.com.cn/tiy/t.asp?f=html_iframe\n\n** 在页面加载期间捕获屏幕截图 **：Capture screenshots 捕获屏幕截图 \n\n```\n1、将鼠标指针悬停在屏幕截图上以查看捕获屏幕截图的时间点。 Overview 窗格中将显示一条黄线。\n2、点击屏幕截图的缩略图以过滤捕获屏幕截图后出现的任何请求。\n3、双击缩略图进行放大。\n```\n<img src=\"./debug/screenshot-hover.png\" width = \"50%\" />\n\n\n\n** 跨页面加载保存请求 **: Preserve log 复选框\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-26%20%E4%B8%8B%E5%8D%8812.54.07.png\" width = \"50%\" />\n\n\n** Disable cache **：停用浏览器缓存 —— 模拟新用户的体验\n\n** Network Throttling **：模拟 2G、3G 和其他连接速度\n\n** 手动清楚浏览器缓存、cookie **\n<img src=\"./debug/clear-browser-cookies.png\" width = \"50%\" />\n\n\n**  Hide data URLs **：隐藏数据网址，data: 开头的所有请求都是数据网址\n\n** 添加或移除列 **\n<img src=\"./debug/add-column.png\" width = \"50%\" />\n\n** [waterfall说明](https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing) **\n\n- Queueing：请求排队\n- Stalled：请求等待发送所用的时间\n- Waiting(TTFB)：浏览器正在等待响应的第一个字节。 TTFB 表示 Time To First Byte（至第一字节的时间）。此时间包括 1 次往返延迟时间及服务器准备响应所用的时间。\n- Content Download：浏览器正在接收响应。\n\n\n\n## 性能调试\n\ntips：无痕模式下分析，快捷键ctrl + shift + N\n\n- 查看页面渲染过程\n- 统计页面各个环节的耗时\n- 模拟各个配置下运行情况\n\n<img src=\"./debug/chromePerformance2.png\" width = \"50%\" />\n\n\n\n<img src=\"./debug/overview-annotated.jpg\" width = \"50%\" />\n\n\n\n- FPS(帧率)：绿色竖线越高，FPS越高，红色的话表示长时间帧，很可能会出现卡顿，所在测试的时候要特别注意红色部分\n- CPU：CPU的使用情况，面积图指示消耗 CPU 资源的事件类型\n- NET：每条色彩横线表示一种资源，越长表示检索资源所需的时间越长\n\n#** 三条竖线： **\n- 蓝色：DCL —— DOMContentLoaded\n- 绿色：FCP —— First Contentful Paint\n- 红色：L —— Load\n\n** [页面生命周期](https://www.jianshu.com/p/3b581af02ebf)： **\n- DOMContentLoaded\n- load\n- beforeunload/unload \n\n** document.readyState **\n- loading(加载中)\n- interactive(完成加载，文档已被解析)\n- complete(所有资源完成加载，load事件将被触发)\n\n### 火焰图\n\n<img src=\"./debug/js-profile.png\" width = \"50%\" />\n\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%884.38.19.png\" width = \"50%\" />\n\n* 蓝色(Loading)：网络通信和HTML解析        \n* 黄色(Scripting)：JavaScript执行     \n* 紫色(Rendering)：样式计算和布局，即重排     \n* 绿色(Painting)：重绘      \n* 灰色(other)：其它事件花费的时间       \n* 白色(Idle)：空闲时间\n\n\n<img src=\"./debug/20180324151603563.png\" width = \"50%\" />\n\n* Send Request                发送网络请求时触发\n* Receive Response         响应头报文到达时触发\n* Receive Data                 请求的响应数据到达事件，如果响应数据很大（拆包），可能会多次触发该事件\n* Finish Loading               网络请求完毕事件\n* Parse HTML                   浏览器执行HTML解析\n* Update Layer Tree        \n* Paint                              确定渲染树上的节点的大小和位置后，便可以对节点进行渲染\n* Composite Layers         合成层；当渲染树上的节点涂鸦完毕后，便生成位图（bitmap），浏览器把此位图从CPU传输到GPU\n\n\n\n\n** 模拟移动端加载过程 **\n- 设置网络状态\n- 设置CPU倍速\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%884.42.29.png\" width = \"50%\" />\n\n\n## Application\n缓存 + 离线存储\n\n* 查看和修改本地存储与会话存储。\n* 检查和修改 IndexedDB 数据库。\n* 对 Web SQL 数据库执行语句。\n* 查看应用缓存和服务工作线程缓存。\n* 点击一次按钮即可清除所有存储、数据库、缓存和服务工作线程。\n\n** manifest **：离线缓存\n** service worker **： Web Worker，可以拦截网络请求、缓存资源或从缓存中检索资源、传递推送消息\n** clear storage **：清空所有数据\n\n** IndexDB **\n- 数据库的安全源、名称和版本\n<img src=\"./debug/idb-db.png\" width = \"50%\" />\n\n- 查看其键值对\n<img src=\"./debug/idb-kvps.png\" width = \"50%\" />\n\n** Web SQL **\n- 用SQL来操纵客户端数据库\n<img src=\"./debug/web-sql-console.png\" width = \"50%\" />\n\n\n## Security\n调试当前网页的安全和认证等问题并确保您已经在你的网站上正确地实现HTTPS\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%886.29.30%202.png\" width = \"50%\" />\n\n- not secure\n<img src=\"./debug/nonsecuremain.png\" width = \"50%\" />\n\n- not secure （混合内容）：页面的主要来源是安全的，但页面请求来自非安全来源的资源\n<img src=\"./debug/mixedoverview.png\" width = \"50%\" />\n\n\n\n## Audits\n对当前网页进行网络利用情况、网页性能方面的诊断，并给出一些优化建议\n\n<img src=\"./debug/audits-2.png\" width = \"50%\" />\n\n## 性能测试网站\n- lighthouse\n- [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/)\n- [pingdom](https://tools.pingdom.com/)\n- 。。。\n\n\n\n##  h5页面调试\n- Chrome DevTools 模拟手机调试\n- Chrome 远程调试(Android) + safari远程调试(iPhone)\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8B%E5%8D%883.34.17.png\" width = \"50%\" />\n\n- fiddler + WiFi + 手机\n\n- Eruda —— 手机网页前端调试面板，[npm](https://www.npmjs.com/package/eruda)，[预览](https://eruda.liriliri.io/)\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8B%E5%8D%882.04.21.png\" width = \"50%\" />\n\n<img src=\"./debug/WechatIMG28.jpeg\" width = \"50%\" />\n\n- weinre远程调试工具：不能调试JS,也不支持打断点调试，仅能用于调试页面样式，使用场景有限\n\n## 其他调试\n- 模拟设备感应器：More tools -> Sensors\n\n\n\n### 参考文章\n- https://developers.google.com/web/tools/chrome-devtools/open\n- https://blog.csdn.net/userkang/article/details/85161244\n- https://blog.csdn.net/userkang/article/details/85252644\n- https://www.jianshu.com/p/b6f87bac5381\n- https://www.jianshu.com/p/a43417b28280\n\n","source":"_posts/debug.md","raw":"---\ntitle: 前端调试方法\ndate: 2019-03-23\ntags:\n    - debug\n---\n\n- css调试\n- js调试\n- network\n- 性能调试\n- Application\n- Security\n- Audits\n- h5页面调试\n\n<!-- more -->\n\n控制面板快捷键： Command + Option + I（Mac）或 Control + Shift + I（Windows，Linux）\n\n\n## css调试\n\n** 1. 查看css **\n<img src=\"./debug/%E6%9F%A5%E7%9C%8Bcss.png\" width = \"50%\" />\n\n** 2. 查看伪元素样式 **\n\n<img src=\"./debug/%E4%BC%AA%E5%85%83%E7%B4%A0.png\" width = \"50%\" />\n\n** 3.添加或修改css样式 **\n1.直接在原class中添加新样式\n2.在新class中添加新样式\n3.复选框切换样式声明\n\n<img src=\"./debug/%E6%B7%BB%E5%8A%A0%E6%96%B0%E6%A0%B7%E5%BC%8F.png\" width = \"50%\" />\n\n\n\n** 4.快捷键修改声明值 **\n\n- 编辑声明的值时，可以使用以下键盘快捷键将值递增固定量\n\n```\n步长1：Up 将值更改为1\n步长0.1：Option+ Up（Mac）或Alt+ Up （Windows，Linux）增加0.1。\n步长10：Shift+ Up增加10。\n步长100：Shift+ Command+ Up（Mac）或 Shift+ Page Up（Windows，Linux）将值增加100\n```\n\n- 快速修改盒模型尺寸\n\n\n\n** 查看当前元素的事件 **\n- Ancestors：当前选定节点 + 祖先节点的事件(冒泡)\n- Framework listeners：安装在chrome上的插件的事件\n\n** 5.使用Coverage选项卡查看CSS和js的使用情况 **\n\n打开Coverage方法：\n- 打开devtools\n- 点击右上角...\n- More tools \n- Coverage\n\n快捷键：Command+ Shift+ P（Mac）或 Control+ Shift+ P（Windows，Linux，Chrome OS），输入coverage\n\n\n## js调试\n - 输出测试\n - 断点调试\n     - DOM断点调试\n     - js执行断点调试\n     - http request 断点调试\n\n** 1. 输出调试 **\n\nalert、[console](https://developer.mozilla.org/zh-CN/docs/Web/API/Console)、document.write、innerHTML等\n \n** 控制台 **\n\n快捷键： Ctrl+Shift+J (Windows / Linux) 或者 Cmd+Opt+J (Mac)。\n\n- console.log( )\n- console.error( )\n- console.warn( )\n- console.info( )\n- console.table( )\n- console.time( )、console.timeEnd( )\n- console.clear( )\n- console.assert( )\n- console.group( )、console.groupEnd( )\n- console.count( ) \n- copy( )\n- 。。。\n\n** 格式化输出 **\n\n- console.log('%c不一样的console.log', 'font-size: 20px; color: blue');\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8A%E5%8D%8811.44.09.png\" width = \"50%\" />\n\n** 2.断点调试 **\n\n\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-23%20%E4%B8%8A%E5%8D%8811.07.15.png\" width = \"50%\" />\n\n\n** 断点 **\n- 普通断点\n- 条件断点\n\ndebugger断点调试\n\n<img src=\"./debug/%E6%96%AD%E7%82%B9.png\" width = \"50%\" />\n\n- Watch：查看自定义表达式的值\n- Call stack ：调用栈\n- Scope：作用域\n- Breakpoints：管理代码断点\n- XHR/fetch Breakpoints：[http 请求断点](https://re.m.jd.com/ks/item/999992.html)\n- DOM Breakpoints：DOM断点\n\n### source面板\n Control + P or Command + P (Mac)\n<img src=\"./debug/openfile.png\" width = \"50%\" />\n\n\n## network \n\n查看资源加载情况\n\n- 设置是否启用缓存\n- 网络加载速度\n- 捕捉页面渲染瞬间\n\n** Filter 文本框：过滤请求 **\n\n** Group by frame **\nhttp://www.w3school.com.cn/tiy/t.asp?f=html_iframe\n\n** 在页面加载期间捕获屏幕截图 **：Capture screenshots 捕获屏幕截图 \n\n```\n1、将鼠标指针悬停在屏幕截图上以查看捕获屏幕截图的时间点。 Overview 窗格中将显示一条黄线。\n2、点击屏幕截图的缩略图以过滤捕获屏幕截图后出现的任何请求。\n3、双击缩略图进行放大。\n```\n<img src=\"./debug/screenshot-hover.png\" width = \"50%\" />\n\n\n\n** 跨页面加载保存请求 **: Preserve log 复选框\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-26%20%E4%B8%8B%E5%8D%8812.54.07.png\" width = \"50%\" />\n\n\n** Disable cache **：停用浏览器缓存 —— 模拟新用户的体验\n\n** Network Throttling **：模拟 2G、3G 和其他连接速度\n\n** 手动清楚浏览器缓存、cookie **\n<img src=\"./debug/clear-browser-cookies.png\" width = \"50%\" />\n\n\n**  Hide data URLs **：隐藏数据网址，data: 开头的所有请求都是数据网址\n\n** 添加或移除列 **\n<img src=\"./debug/add-column.png\" width = \"50%\" />\n\n** [waterfall说明](https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing) **\n\n- Queueing：请求排队\n- Stalled：请求等待发送所用的时间\n- Waiting(TTFB)：浏览器正在等待响应的第一个字节。 TTFB 表示 Time To First Byte（至第一字节的时间）。此时间包括 1 次往返延迟时间及服务器准备响应所用的时间。\n- Content Download：浏览器正在接收响应。\n\n\n\n## 性能调试\n\ntips：无痕模式下分析，快捷键ctrl + shift + N\n\n- 查看页面渲染过程\n- 统计页面各个环节的耗时\n- 模拟各个配置下运行情况\n\n<img src=\"./debug/chromePerformance2.png\" width = \"50%\" />\n\n\n\n<img src=\"./debug/overview-annotated.jpg\" width = \"50%\" />\n\n\n\n- FPS(帧率)：绿色竖线越高，FPS越高，红色的话表示长时间帧，很可能会出现卡顿，所在测试的时候要特别注意红色部分\n- CPU：CPU的使用情况，面积图指示消耗 CPU 资源的事件类型\n- NET：每条色彩横线表示一种资源，越长表示检索资源所需的时间越长\n\n#** 三条竖线： **\n- 蓝色：DCL —— DOMContentLoaded\n- 绿色：FCP —— First Contentful Paint\n- 红色：L —— Load\n\n** [页面生命周期](https://www.jianshu.com/p/3b581af02ebf)： **\n- DOMContentLoaded\n- load\n- beforeunload/unload \n\n** document.readyState **\n- loading(加载中)\n- interactive(完成加载，文档已被解析)\n- complete(所有资源完成加载，load事件将被触发)\n\n### 火焰图\n\n<img src=\"./debug/js-profile.png\" width = \"50%\" />\n\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%884.38.19.png\" width = \"50%\" />\n\n* 蓝色(Loading)：网络通信和HTML解析        \n* 黄色(Scripting)：JavaScript执行     \n* 紫色(Rendering)：样式计算和布局，即重排     \n* 绿色(Painting)：重绘      \n* 灰色(other)：其它事件花费的时间       \n* 白色(Idle)：空闲时间\n\n\n<img src=\"./debug/20180324151603563.png\" width = \"50%\" />\n\n* Send Request                发送网络请求时触发\n* Receive Response         响应头报文到达时触发\n* Receive Data                 请求的响应数据到达事件，如果响应数据很大（拆包），可能会多次触发该事件\n* Finish Loading               网络请求完毕事件\n* Parse HTML                   浏览器执行HTML解析\n* Update Layer Tree        \n* Paint                              确定渲染树上的节点的大小和位置后，便可以对节点进行渲染\n* Composite Layers         合成层；当渲染树上的节点涂鸦完毕后，便生成位图（bitmap），浏览器把此位图从CPU传输到GPU\n\n\n\n\n** 模拟移动端加载过程 **\n- 设置网络状态\n- 设置CPU倍速\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%884.42.29.png\" width = \"50%\" />\n\n\n## Application\n缓存 + 离线存储\n\n* 查看和修改本地存储与会话存储。\n* 检查和修改 IndexedDB 数据库。\n* 对 Web SQL 数据库执行语句。\n* 查看应用缓存和服务工作线程缓存。\n* 点击一次按钮即可清除所有存储、数据库、缓存和服务工作线程。\n\n** manifest **：离线缓存\n** service worker **： Web Worker，可以拦截网络请求、缓存资源或从缓存中检索资源、传递推送消息\n** clear storage **：清空所有数据\n\n** IndexDB **\n- 数据库的安全源、名称和版本\n<img src=\"./debug/idb-db.png\" width = \"50%\" />\n\n- 查看其键值对\n<img src=\"./debug/idb-kvps.png\" width = \"50%\" />\n\n** Web SQL **\n- 用SQL来操纵客户端数据库\n<img src=\"./debug/web-sql-console.png\" width = \"50%\" />\n\n\n## Security\n调试当前网页的安全和认证等问题并确保您已经在你的网站上正确地实现HTTPS\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%886.29.30%202.png\" width = \"50%\" />\n\n- not secure\n<img src=\"./debug/nonsecuremain.png\" width = \"50%\" />\n\n- not secure （混合内容）：页面的主要来源是安全的，但页面请求来自非安全来源的资源\n<img src=\"./debug/mixedoverview.png\" width = \"50%\" />\n\n\n\n## Audits\n对当前网页进行网络利用情况、网页性能方面的诊断，并给出一些优化建议\n\n<img src=\"./debug/audits-2.png\" width = \"50%\" />\n\n## 性能测试网站\n- lighthouse\n- [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/)\n- [pingdom](https://tools.pingdom.com/)\n- 。。。\n\n\n\n##  h5页面调试\n- Chrome DevTools 模拟手机调试\n- Chrome 远程调试(Android) + safari远程调试(iPhone)\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8B%E5%8D%883.34.17.png\" width = \"50%\" />\n\n- fiddler + WiFi + 手机\n\n- Eruda —— 手机网页前端调试面板，[npm](https://www.npmjs.com/package/eruda)，[预览](https://eruda.liriliri.io/)\n\n<img src=\"./debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8B%E5%8D%882.04.21.png\" width = \"50%\" />\n\n<img src=\"./debug/WechatIMG28.jpeg\" width = \"50%\" />\n\n- weinre远程调试工具：不能调试JS,也不支持打断点调试，仅能用于调试页面样式，使用场景有限\n\n## 其他调试\n- 模拟设备感应器：More tools -> Sensors\n\n\n\n### 参考文章\n- https://developers.google.com/web/tools/chrome-devtools/open\n- https://blog.csdn.net/userkang/article/details/85161244\n- https://blog.csdn.net/userkang/article/details/85252644\n- https://www.jianshu.com/p/b6f87bac5381\n- https://www.jianshu.com/p/a43417b28280\n\n","slug":"debug","published":1,"updated":"2019-04-15T05:04:13.366Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjvbvwwnv001bre6hwkk9d25c","content":"<ul>\n<li>css调试</li>\n<li>js调试</li>\n<li>network</li>\n<li>性能调试</li>\n<li>Application</li>\n<li>Security</li>\n<li>Audits</li>\n<li>h5页面调试</li>\n</ul>\n<a id=\"more\"></a>\n<p>控制面板快捷键： Command + Option + I（Mac）或 Control + Shift + I（Windows，Linux）</p>\n<h2 id=\"css调试\"><a href=\"#css调试\" class=\"headerlink\" title=\"css调试\"></a>css调试</h2><p><strong> 1. 查看css </strong><br><img src=\"/2019/03/23/debug/%E6%9F%A5%E7%9C%8Bcss.png\" width=\"50%\"></p>\n<p><strong> 2. 查看伪元素样式 </strong></p>\n<p><img src=\"/2019/03/23/debug/%E4%BC%AA%E5%85%83%E7%B4%A0.png\" width=\"50%\"></p>\n<p><strong> 3.添加或修改css样式 </strong><br>1.直接在原class中添加新样式<br>2.在新class中添加新样式<br>3.复选框切换样式声明</p>\n<p><img src=\"/2019/03/23/debug/%E6%B7%BB%E5%8A%A0%E6%96%B0%E6%A0%B7%E5%BC%8F.png\" width=\"50%\"></p>\n<p><strong> 4.快捷键修改声明值 </strong></p>\n<ul>\n<li>编辑声明的值时，可以使用以下键盘快捷键将值递增固定量</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">步长1：Up 将值更改为1</span><br><span class=\"line\">步长0.1：Option+ Up（Mac）或Alt+ Up （Windows，Linux）增加0.1。</span><br><span class=\"line\">步长10：Shift+ Up增加10。</span><br><span class=\"line\">步长100：Shift+ Command+ Up（Mac）或 Shift+ Page Up（Windows，Linux）将值增加100</span><br></pre></td></tr></table></figure>\n<ul>\n<li>快速修改盒模型尺寸</li>\n</ul>\n<p><strong> 查看当前元素的事件 </strong></p>\n<ul>\n<li>Ancestors：当前选定节点 + 祖先节点的事件(冒泡)</li>\n<li>Framework listeners：安装在chrome上的插件的事件</li>\n</ul>\n<p><strong> 5.使用Coverage选项卡查看CSS和js的使用情况 </strong></p>\n<p>打开Coverage方法：</p>\n<ul>\n<li>打开devtools</li>\n<li>点击右上角…</li>\n<li>More tools </li>\n<li>Coverage</li>\n</ul>\n<p>快捷键：Command+ Shift+ P（Mac）或 Control+ Shift+ P（Windows，Linux，Chrome OS），输入coverage</p>\n<h2 id=\"js调试\"><a href=\"#js调试\" class=\"headerlink\" title=\"js调试\"></a>js调试</h2><ul>\n<li>输出测试</li>\n<li>断点调试<ul>\n<li>DOM断点调试</li>\n<li>js执行断点调试</li>\n<li>http request 断点调试</li>\n</ul>\n</li>\n</ul>\n<p><strong> 1. 输出调试 </strong></p>\n<p>alert、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console\" target=\"_blank\" rel=\"noopener\">console</a>、document.write、innerHTML等</p>\n<p><strong> 控制台 </strong></p>\n<p>快捷键： Ctrl+Shift+J (Windows / Linux) 或者 Cmd+Opt+J (Mac)。</p>\n<ul>\n<li>console.log( )</li>\n<li>console.error( )</li>\n<li>console.warn( )</li>\n<li>console.info( )</li>\n<li>console.table( )</li>\n<li>console.time( )、console.timeEnd( )</li>\n<li>console.clear( )</li>\n<li>console.assert( )</li>\n<li>console.group( )、console.groupEnd( )</li>\n<li>console.count( ) </li>\n<li>copy( )</li>\n<li>。。。</li>\n</ul>\n<p><strong> 格式化输出 </strong></p>\n<ul>\n<li>console.log(‘%c不一样的console.log’, ‘font-size: 20px; color: blue’);</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8A%E5%8D%8811.44.09.png\" width=\"50%\"></p>\n<p><strong> 2.断点调试 </strong></p>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-23%20%E4%B8%8A%E5%8D%8811.07.15.png\" width=\"50%\"></p>\n<p><strong> 断点 </strong></p>\n<ul>\n<li>普通断点</li>\n<li>条件断点</li>\n</ul>\n<p>debugger断点调试</p>\n<p><img src=\"/2019/03/23/debug/%E6%96%AD%E7%82%B9.png\" width=\"50%\"></p>\n<ul>\n<li>Watch：查看自定义表达式的值</li>\n<li>Call stack ：调用栈</li>\n<li>Scope：作用域</li>\n<li>Breakpoints：管理代码断点</li>\n<li>XHR/fetch Breakpoints：<a href=\"https://re.m.jd.com/ks/item/999992.html\" target=\"_blank\" rel=\"noopener\">http 请求断点</a></li>\n<li>DOM Breakpoints：DOM断点</li>\n</ul>\n<h3 id=\"source面板\"><a href=\"#source面板\" class=\"headerlink\" title=\"source面板\"></a>source面板</h3><p> Control + P or Command + P (Mac)<br><img src=\"/2019/03/23/debug/openfile.png\" width=\"50%\"></p>\n<h2 id=\"network\"><a href=\"#network\" class=\"headerlink\" title=\"network\"></a>network</h2><p>查看资源加载情况</p>\n<ul>\n<li>设置是否启用缓存</li>\n<li>网络加载速度</li>\n<li>捕捉页面渲染瞬间</li>\n</ul>\n<p><strong> Filter 文本框：过滤请求 </strong></p>\n<p><strong> Group by frame </strong><br><a href=\"http://www.w3school.com.cn/tiy/t.asp?f=html_iframe\" target=\"_blank\" rel=\"noopener\">http://www.w3school.com.cn/tiy/t.asp?f=html_iframe</a></p>\n<p><strong> 在页面加载期间捕获屏幕截图 </strong>：Capture screenshots 捕获屏幕截图 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、将鼠标指针悬停在屏幕截图上以查看捕获屏幕截图的时间点。 Overview 窗格中将显示一条黄线。</span><br><span class=\"line\">2、点击屏幕截图的缩略图以过滤捕获屏幕截图后出现的任何请求。</span><br><span class=\"line\">3、双击缩略图进行放大。</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/03/23/debug/screenshot-hover.png\" width=\"50%\"></p>\n<p><strong> 跨页面加载保存请求 </strong>: Preserve log 复选框</p>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-26%20%E4%B8%8B%E5%8D%8812.54.07.png\" width=\"50%\"></p>\n<p><strong> Disable cache </strong>：停用浏览器缓存 —— 模拟新用户的体验</p>\n<p><strong> Network Throttling </strong>：模拟 2G、3G 和其他连接速度</p>\n<p><strong> 手动清楚浏览器缓存、cookie </strong><br><img src=\"/2019/03/23/debug/clear-browser-cookies.png\" width=\"50%\"></p>\n<p><strong>  Hide data URLs </strong>：隐藏数据网址，data: 开头的所有请求都是数据网址</p>\n<p><strong> 添加或移除列 </strong><br><img src=\"/2019/03/23/debug/add-column.png\" width=\"50%\"></p>\n<p><strong> <a href=\"https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing\" target=\"_blank\" rel=\"noopener\">waterfall说明</a> </strong></p>\n<ul>\n<li>Queueing：请求排队</li>\n<li>Stalled：请求等待发送所用的时间</li>\n<li>Waiting(TTFB)：浏览器正在等待响应的第一个字节。 TTFB 表示 Time To First Byte（至第一字节的时间）。此时间包括 1 次往返延迟时间及服务器准备响应所用的时间。</li>\n<li>Content Download：浏览器正在接收响应。</li>\n</ul>\n<h2 id=\"性能调试\"><a href=\"#性能调试\" class=\"headerlink\" title=\"性能调试\"></a>性能调试</h2><p>tips：无痕模式下分析，快捷键ctrl + shift + N</p>\n<ul>\n<li>查看页面渲染过程</li>\n<li>统计页面各个环节的耗时</li>\n<li>模拟各个配置下运行情况</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/chromePerformance2.png\" width=\"50%\"></p>\n<p><img src=\"/2019/03/23/debug/overview-annotated.jpg\" width=\"50%\"></p>\n<ul>\n<li>FPS(帧率)：绿色竖线越高，FPS越高，红色的话表示长时间帧，很可能会出现卡顿，所在测试的时候要特别注意红色部分</li>\n<li>CPU：CPU的使用情况，面积图指示消耗 CPU 资源的事件类型</li>\n<li>NET：每条色彩横线表示一种资源，越长表示检索资源所需的时间越长</li>\n</ul>\n<p>#<strong> 三条竖线： </strong></p>\n<ul>\n<li>蓝色：DCL —— DOMContentLoaded</li>\n<li>绿色：FCP —— First Contentful Paint</li>\n<li>红色：L —— Load</li>\n</ul>\n<p><strong> <a href=\"https://www.jianshu.com/p/3b581af02ebf\" target=\"_blank\" rel=\"noopener\">页面生命周期</a>： </strong></p>\n<ul>\n<li>DOMContentLoaded</li>\n<li>load</li>\n<li>beforeunload/unload </li>\n</ul>\n<p><strong> document.readyState </strong></p>\n<ul>\n<li>loading(加载中)</li>\n<li>interactive(完成加载，文档已被解析)</li>\n<li>complete(所有资源完成加载，load事件将被触发)</li>\n</ul>\n<h3 id=\"火焰图\"><a href=\"#火焰图\" class=\"headerlink\" title=\"火焰图\"></a>火焰图</h3><p><img src=\"/2019/03/23/debug/js-profile.png\" width=\"50%\"></p>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%884.38.19.png\" width=\"50%\"></p>\n<ul>\n<li>蓝色(Loading)：网络通信和HTML解析        </li>\n<li>黄色(Scripting)：JavaScript执行     </li>\n<li>紫色(Rendering)：样式计算和布局，即重排     </li>\n<li>绿色(Painting)：重绘      </li>\n<li>灰色(other)：其它事件花费的时间       </li>\n<li>白色(Idle)：空闲时间</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/20180324151603563.png\" width=\"50%\"></p>\n<ul>\n<li>Send Request                发送网络请求时触发</li>\n<li>Receive Response         响应头报文到达时触发</li>\n<li>Receive Data                 请求的响应数据到达事件，如果响应数据很大（拆包），可能会多次触发该事件</li>\n<li>Finish Loading               网络请求完毕事件</li>\n<li>Parse HTML                   浏览器执行HTML解析</li>\n<li>Update Layer Tree        </li>\n<li>Paint                              确定渲染树上的节点的大小和位置后，便可以对节点进行渲染</li>\n<li>Composite Layers         合成层；当渲染树上的节点涂鸦完毕后，便生成位图（bitmap），浏览器把此位图从CPU传输到GPU</li>\n</ul>\n<p><strong> 模拟移动端加载过程 </strong></p>\n<ul>\n<li>设置网络状态</li>\n<li>设置CPU倍速<br><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%884.42.29.png\" width=\"50%\"></li>\n</ul>\n<h2 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h2><p>缓存 + 离线存储</p>\n<ul>\n<li>查看和修改本地存储与会话存储。</li>\n<li>检查和修改 IndexedDB 数据库。</li>\n<li>对 Web SQL 数据库执行语句。</li>\n<li>查看应用缓存和服务工作线程缓存。</li>\n<li>点击一次按钮即可清除所有存储、数据库、缓存和服务工作线程。</li>\n</ul>\n<p><strong> manifest </strong>：离线缓存<br><strong> service worker </strong>： Web Worker，可以拦截网络请求、缓存资源或从缓存中检索资源、传递推送消息<br><strong> clear storage </strong>：清空所有数据</p>\n<p><strong> IndexDB </strong></p>\n<ul>\n<li><p>数据库的安全源、名称和版本<br><img src=\"/2019/03/23/debug/idb-db.png\" width=\"50%\"></p>\n</li>\n<li><p>查看其键值对<br><img src=\"/2019/03/23/debug/idb-kvps.png\" width=\"50%\"></p>\n</li>\n</ul>\n<p><strong> Web SQL </strong></p>\n<ul>\n<li>用SQL来操纵客户端数据库<br><img src=\"/2019/03/23/debug/web-sql-console.png\" width=\"50%\"></li>\n</ul>\n<h2 id=\"Security\"><a href=\"#Security\" class=\"headerlink\" title=\"Security\"></a>Security</h2><p>调试当前网页的安全和认证等问题并确保您已经在你的网站上正确地实现HTTPS</p>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%886.29.30%202.png\" width=\"50%\"></p>\n<ul>\n<li><p>not secure<br><img src=\"/2019/03/23/debug/nonsecuremain.png\" width=\"50%\"></p>\n</li>\n<li><p>not secure （混合内容）：页面的主要来源是安全的，但页面请求来自非安全来源的资源<br><img src=\"/2019/03/23/debug/mixedoverview.png\" width=\"50%\"></p>\n</li>\n</ul>\n<h2 id=\"Audits\"><a href=\"#Audits\" class=\"headerlink\" title=\"Audits\"></a>Audits</h2><p>对当前网页进行网络利用情况、网页性能方面的诊断，并给出一些优化建议</p>\n<p><img src=\"/2019/03/23/debug/audits-2.png\" width=\"50%\"></p>\n<h2 id=\"性能测试网站\"><a href=\"#性能测试网站\" class=\"headerlink\" title=\"性能测试网站\"></a>性能测试网站</h2><ul>\n<li>lighthouse</li>\n<li><a href=\"https://developers.google.com/speed/pagespeed/insights/\" target=\"_blank\" rel=\"noopener\">PageSpeed Insights</a></li>\n<li><a href=\"https://tools.pingdom.com/\" target=\"_blank\" rel=\"noopener\">pingdom</a></li>\n<li>。。。</li>\n</ul>\n<h2 id=\"h5页面调试\"><a href=\"#h5页面调试\" class=\"headerlink\" title=\"h5页面调试\"></a>h5页面调试</h2><ul>\n<li>Chrome DevTools 模拟手机调试</li>\n<li>Chrome 远程调试(Android) + safari远程调试(iPhone)</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8B%E5%8D%883.34.17.png\" width=\"50%\"></p>\n<ul>\n<li><p>fiddler + WiFi + 手机</p>\n</li>\n<li><p>Eruda —— 手机网页前端调试面板，<a href=\"https://www.npmjs.com/package/eruda\" target=\"_blank\" rel=\"noopener\">npm</a>，<a href=\"https://eruda.liriliri.io/\" target=\"_blank\" rel=\"noopener\">预览</a></p>\n</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8B%E5%8D%882.04.21.png\" width=\"50%\"></p>\n<p><img src=\"/2019/03/23/debug/WechatIMG28.jpeg\" width=\"50%\"></p>\n<ul>\n<li>weinre远程调试工具：不能调试JS,也不支持打断点调试，仅能用于调试页面样式，使用场景有限</li>\n</ul>\n<h2 id=\"其他调试\"><a href=\"#其他调试\" class=\"headerlink\" title=\"其他调试\"></a>其他调试</h2><ul>\n<li>模拟设备感应器：More tools -&gt; Sensors</li>\n</ul>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://developers.google.com/web/tools/chrome-devtools/open\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/web/tools/chrome-devtools/open</a></li>\n<li><a href=\"https://blog.csdn.net/userkang/article/details/85161244\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/userkang/article/details/85161244</a></li>\n<li><a href=\"https://blog.csdn.net/userkang/article/details/85252644\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/userkang/article/details/85252644</a></li>\n<li><a href=\"https://www.jianshu.com/p/b6f87bac5381\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/b6f87bac5381</a></li>\n<li><a href=\"https://www.jianshu.com/p/a43417b28280\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/a43417b28280</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>css调试</li>\n<li>js调试</li>\n<li>network</li>\n<li>性能调试</li>\n<li>Application</li>\n<li>Security</li>\n<li>Audits</li>\n<li>h5页面调试</li>\n</ul>","more":"<p>控制面板快捷键： Command + Option + I（Mac）或 Control + Shift + I（Windows，Linux）</p>\n<h2 id=\"css调试\"><a href=\"#css调试\" class=\"headerlink\" title=\"css调试\"></a>css调试</h2><p><strong> 1. 查看css </strong><br><img src=\"/2019/03/23/debug/%E6%9F%A5%E7%9C%8Bcss.png\" width=\"50%\"></p>\n<p><strong> 2. 查看伪元素样式 </strong></p>\n<p><img src=\"/2019/03/23/debug/%E4%BC%AA%E5%85%83%E7%B4%A0.png\" width=\"50%\"></p>\n<p><strong> 3.添加或修改css样式 </strong><br>1.直接在原class中添加新样式<br>2.在新class中添加新样式<br>3.复选框切换样式声明</p>\n<p><img src=\"/2019/03/23/debug/%E6%B7%BB%E5%8A%A0%E6%96%B0%E6%A0%B7%E5%BC%8F.png\" width=\"50%\"></p>\n<p><strong> 4.快捷键修改声明值 </strong></p>\n<ul>\n<li>编辑声明的值时，可以使用以下键盘快捷键将值递增固定量</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">步长1：Up 将值更改为1</span><br><span class=\"line\">步长0.1：Option+ Up（Mac）或Alt+ Up （Windows，Linux）增加0.1。</span><br><span class=\"line\">步长10：Shift+ Up增加10。</span><br><span class=\"line\">步长100：Shift+ Command+ Up（Mac）或 Shift+ Page Up（Windows，Linux）将值增加100</span><br></pre></td></tr></table></figure>\n<ul>\n<li>快速修改盒模型尺寸</li>\n</ul>\n<p><strong> 查看当前元素的事件 </strong></p>\n<ul>\n<li>Ancestors：当前选定节点 + 祖先节点的事件(冒泡)</li>\n<li>Framework listeners：安装在chrome上的插件的事件</li>\n</ul>\n<p><strong> 5.使用Coverage选项卡查看CSS和js的使用情况 </strong></p>\n<p>打开Coverage方法：</p>\n<ul>\n<li>打开devtools</li>\n<li>点击右上角…</li>\n<li>More tools </li>\n<li>Coverage</li>\n</ul>\n<p>快捷键：Command+ Shift+ P（Mac）或 Control+ Shift+ P（Windows，Linux，Chrome OS），输入coverage</p>\n<h2 id=\"js调试\"><a href=\"#js调试\" class=\"headerlink\" title=\"js调试\"></a>js调试</h2><ul>\n<li>输出测试</li>\n<li>断点调试<ul>\n<li>DOM断点调试</li>\n<li>js执行断点调试</li>\n<li>http request 断点调试</li>\n</ul>\n</li>\n</ul>\n<p><strong> 1. 输出调试 </strong></p>\n<p>alert、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Console\" target=\"_blank\" rel=\"noopener\">console</a>、document.write、innerHTML等</p>\n<p><strong> 控制台 </strong></p>\n<p>快捷键： Ctrl+Shift+J (Windows / Linux) 或者 Cmd+Opt+J (Mac)。</p>\n<ul>\n<li>console.log( )</li>\n<li>console.error( )</li>\n<li>console.warn( )</li>\n<li>console.info( )</li>\n<li>console.table( )</li>\n<li>console.time( )、console.timeEnd( )</li>\n<li>console.clear( )</li>\n<li>console.assert( )</li>\n<li>console.group( )、console.groupEnd( )</li>\n<li>console.count( ) </li>\n<li>copy( )</li>\n<li>。。。</li>\n</ul>\n<p><strong> 格式化输出 </strong></p>\n<ul>\n<li>console.log(‘%c不一样的console.log’, ‘font-size: 20px; color: blue’);</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8A%E5%8D%8811.44.09.png\" width=\"50%\"></p>\n<p><strong> 2.断点调试 </strong></p>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-23%20%E4%B8%8A%E5%8D%8811.07.15.png\" width=\"50%\"></p>\n<p><strong> 断点 </strong></p>\n<ul>\n<li>普通断点</li>\n<li>条件断点</li>\n</ul>\n<p>debugger断点调试</p>\n<p><img src=\"/2019/03/23/debug/%E6%96%AD%E7%82%B9.png\" width=\"50%\"></p>\n<ul>\n<li>Watch：查看自定义表达式的值</li>\n<li>Call stack ：调用栈</li>\n<li>Scope：作用域</li>\n<li>Breakpoints：管理代码断点</li>\n<li>XHR/fetch Breakpoints：<a href=\"https://re.m.jd.com/ks/item/999992.html\" target=\"_blank\" rel=\"noopener\">http 请求断点</a></li>\n<li>DOM Breakpoints：DOM断点</li>\n</ul>\n<h3 id=\"source面板\"><a href=\"#source面板\" class=\"headerlink\" title=\"source面板\"></a>source面板</h3><p> Control + P or Command + P (Mac)<br><img src=\"/2019/03/23/debug/openfile.png\" width=\"50%\"></p>\n<h2 id=\"network\"><a href=\"#network\" class=\"headerlink\" title=\"network\"></a>network</h2><p>查看资源加载情况</p>\n<ul>\n<li>设置是否启用缓存</li>\n<li>网络加载速度</li>\n<li>捕捉页面渲染瞬间</li>\n</ul>\n<p><strong> Filter 文本框：过滤请求 </strong></p>\n<p><strong> Group by frame </strong><br><a href=\"http://www.w3school.com.cn/tiy/t.asp?f=html_iframe\" target=\"_blank\" rel=\"noopener\">http://www.w3school.com.cn/tiy/t.asp?f=html_iframe</a></p>\n<p><strong> 在页面加载期间捕获屏幕截图 </strong>：Capture screenshots 捕获屏幕截图 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、将鼠标指针悬停在屏幕截图上以查看捕获屏幕截图的时间点。 Overview 窗格中将显示一条黄线。</span><br><span class=\"line\">2、点击屏幕截图的缩略图以过滤捕获屏幕截图后出现的任何请求。</span><br><span class=\"line\">3、双击缩略图进行放大。</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/03/23/debug/screenshot-hover.png\" width=\"50%\"></p>\n<p><strong> 跨页面加载保存请求 </strong>: Preserve log 复选框</p>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-26%20%E4%B8%8B%E5%8D%8812.54.07.png\" width=\"50%\"></p>\n<p><strong> Disable cache </strong>：停用浏览器缓存 —— 模拟新用户的体验</p>\n<p><strong> Network Throttling </strong>：模拟 2G、3G 和其他连接速度</p>\n<p><strong> 手动清楚浏览器缓存、cookie </strong><br><img src=\"/2019/03/23/debug/clear-browser-cookies.png\" width=\"50%\"></p>\n<p><strong>  Hide data URLs </strong>：隐藏数据网址，data: 开头的所有请求都是数据网址</p>\n<p><strong> 添加或移除列 </strong><br><img src=\"/2019/03/23/debug/add-column.png\" width=\"50%\"></p>\n<p><strong> <a href=\"https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing\" target=\"_blank\" rel=\"noopener\">waterfall说明</a> </strong></p>\n<ul>\n<li>Queueing：请求排队</li>\n<li>Stalled：请求等待发送所用的时间</li>\n<li>Waiting(TTFB)：浏览器正在等待响应的第一个字节。 TTFB 表示 Time To First Byte（至第一字节的时间）。此时间包括 1 次往返延迟时间及服务器准备响应所用的时间。</li>\n<li>Content Download：浏览器正在接收响应。</li>\n</ul>\n<h2 id=\"性能调试\"><a href=\"#性能调试\" class=\"headerlink\" title=\"性能调试\"></a>性能调试</h2><p>tips：无痕模式下分析，快捷键ctrl + shift + N</p>\n<ul>\n<li>查看页面渲染过程</li>\n<li>统计页面各个环节的耗时</li>\n<li>模拟各个配置下运行情况</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/chromePerformance2.png\" width=\"50%\"></p>\n<p><img src=\"/2019/03/23/debug/overview-annotated.jpg\" width=\"50%\"></p>\n<ul>\n<li>FPS(帧率)：绿色竖线越高，FPS越高，红色的话表示长时间帧，很可能会出现卡顿，所在测试的时候要特别注意红色部分</li>\n<li>CPU：CPU的使用情况，面积图指示消耗 CPU 资源的事件类型</li>\n<li>NET：每条色彩横线表示一种资源，越长表示检索资源所需的时间越长</li>\n</ul>\n<p>#<strong> 三条竖线： </strong></p>\n<ul>\n<li>蓝色：DCL —— DOMContentLoaded</li>\n<li>绿色：FCP —— First Contentful Paint</li>\n<li>红色：L —— Load</li>\n</ul>\n<p><strong> <a href=\"https://www.jianshu.com/p/3b581af02ebf\" target=\"_blank\" rel=\"noopener\">页面生命周期</a>： </strong></p>\n<ul>\n<li>DOMContentLoaded</li>\n<li>load</li>\n<li>beforeunload/unload </li>\n</ul>\n<p><strong> document.readyState </strong></p>\n<ul>\n<li>loading(加载中)</li>\n<li>interactive(完成加载，文档已被解析)</li>\n<li>complete(所有资源完成加载，load事件将被触发)</li>\n</ul>\n<h3 id=\"火焰图\"><a href=\"#火焰图\" class=\"headerlink\" title=\"火焰图\"></a>火焰图</h3><p><img src=\"/2019/03/23/debug/js-profile.png\" width=\"50%\"></p>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%884.38.19.png\" width=\"50%\"></p>\n<ul>\n<li>蓝色(Loading)：网络通信和HTML解析        </li>\n<li>黄色(Scripting)：JavaScript执行     </li>\n<li>紫色(Rendering)：样式计算和布局，即重排     </li>\n<li>绿色(Painting)：重绘      </li>\n<li>灰色(other)：其它事件花费的时间       </li>\n<li>白色(Idle)：空闲时间</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/20180324151603563.png\" width=\"50%\"></p>\n<ul>\n<li>Send Request                发送网络请求时触发</li>\n<li>Receive Response         响应头报文到达时触发</li>\n<li>Receive Data                 请求的响应数据到达事件，如果响应数据很大（拆包），可能会多次触发该事件</li>\n<li>Finish Loading               网络请求完毕事件</li>\n<li>Parse HTML                   浏览器执行HTML解析</li>\n<li>Update Layer Tree        </li>\n<li>Paint                              确定渲染树上的节点的大小和位置后，便可以对节点进行渲染</li>\n<li>Composite Layers         合成层；当渲染树上的节点涂鸦完毕后，便生成位图（bitmap），浏览器把此位图从CPU传输到GPU</li>\n</ul>\n<p><strong> 模拟移动端加载过程 </strong></p>\n<ul>\n<li>设置网络状态</li>\n<li>设置CPU倍速<br><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%884.42.29.png\" width=\"50%\"></li>\n</ul>\n<h2 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h2><p>缓存 + 离线存储</p>\n<ul>\n<li>查看和修改本地存储与会话存储。</li>\n<li>检查和修改 IndexedDB 数据库。</li>\n<li>对 Web SQL 数据库执行语句。</li>\n<li>查看应用缓存和服务工作线程缓存。</li>\n<li>点击一次按钮即可清除所有存储、数据库、缓存和服务工作线程。</li>\n</ul>\n<p><strong> manifest </strong>：离线缓存<br><strong> service worker </strong>： Web Worker，可以拦截网络请求、缓存资源或从缓存中检索资源、传递推送消息<br><strong> clear storage </strong>：清空所有数据</p>\n<p><strong> IndexDB </strong></p>\n<ul>\n<li><p>数据库的安全源、名称和版本<br><img src=\"/2019/03/23/debug/idb-db.png\" width=\"50%\"></p>\n</li>\n<li><p>查看其键值对<br><img src=\"/2019/03/23/debug/idb-kvps.png\" width=\"50%\"></p>\n</li>\n</ul>\n<p><strong> Web SQL </strong></p>\n<ul>\n<li>用SQL来操纵客户端数据库<br><img src=\"/2019/03/23/debug/web-sql-console.png\" width=\"50%\"></li>\n</ul>\n<h2 id=\"Security\"><a href=\"#Security\" class=\"headerlink\" title=\"Security\"></a>Security</h2><p>调试当前网页的安全和认证等问题并确保您已经在你的网站上正确地实现HTTPS</p>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-24%20%E4%B8%8B%E5%8D%886.29.30%202.png\" width=\"50%\"></p>\n<ul>\n<li><p>not secure<br><img src=\"/2019/03/23/debug/nonsecuremain.png\" width=\"50%\"></p>\n</li>\n<li><p>not secure （混合内容）：页面的主要来源是安全的，但页面请求来自非安全来源的资源<br><img src=\"/2019/03/23/debug/mixedoverview.png\" width=\"50%\"></p>\n</li>\n</ul>\n<h2 id=\"Audits\"><a href=\"#Audits\" class=\"headerlink\" title=\"Audits\"></a>Audits</h2><p>对当前网页进行网络利用情况、网页性能方面的诊断，并给出一些优化建议</p>\n<p><img src=\"/2019/03/23/debug/audits-2.png\" width=\"50%\"></p>\n<h2 id=\"性能测试网站\"><a href=\"#性能测试网站\" class=\"headerlink\" title=\"性能测试网站\"></a>性能测试网站</h2><ul>\n<li>lighthouse</li>\n<li><a href=\"https://developers.google.com/speed/pagespeed/insights/\" target=\"_blank\" rel=\"noopener\">PageSpeed Insights</a></li>\n<li><a href=\"https://tools.pingdom.com/\" target=\"_blank\" rel=\"noopener\">pingdom</a></li>\n<li>。。。</li>\n</ul>\n<h2 id=\"h5页面调试\"><a href=\"#h5页面调试\" class=\"headerlink\" title=\"h5页面调试\"></a>h5页面调试</h2><ul>\n<li>Chrome DevTools 模拟手机调试</li>\n<li>Chrome 远程调试(Android) + safari远程调试(iPhone)</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8B%E5%8D%883.34.17.png\" width=\"50%\"></p>\n<ul>\n<li><p>fiddler + WiFi + 手机</p>\n</li>\n<li><p>Eruda —— 手机网页前端调试面板，<a href=\"https://www.npmjs.com/package/eruda\" target=\"_blank\" rel=\"noopener\">npm</a>，<a href=\"https://eruda.liriliri.io/\" target=\"_blank\" rel=\"noopener\">预览</a></p>\n</li>\n</ul>\n<p><img src=\"/2019/03/23/debug/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%20%E4%B8%8B%E5%8D%882.04.21.png\" width=\"50%\"></p>\n<p><img src=\"/2019/03/23/debug/WechatIMG28.jpeg\" width=\"50%\"></p>\n<ul>\n<li>weinre远程调试工具：不能调试JS,也不支持打断点调试，仅能用于调试页面样式，使用场景有限</li>\n</ul>\n<h2 id=\"其他调试\"><a href=\"#其他调试\" class=\"headerlink\" title=\"其他调试\"></a>其他调试</h2><ul>\n<li>模拟设备感应器：More tools -&gt; Sensors</li>\n</ul>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://developers.google.com/web/tools/chrome-devtools/open\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/web/tools/chrome-devtools/open</a></li>\n<li><a href=\"https://blog.csdn.net/userkang/article/details/85161244\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/userkang/article/details/85161244</a></li>\n<li><a href=\"https://blog.csdn.net/userkang/article/details/85252644\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/userkang/article/details/85252644</a></li>\n<li><a href=\"https://www.jianshu.com/p/b6f87bac5381\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/b6f87bac5381</a></li>\n<li><a href=\"https://www.jianshu.com/p/a43417b28280\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/a43417b28280</a></li>\n</ul>"}],"PostAsset":[{"_id":"source/_posts/pictures/矢量图.png","slug":"矢量图.png","post":"cjvbvwwmm000are6hxgdlcxlc","modified":1,"renderable":0},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午4.32.41.png","slug":"屏幕快照 2019-03-24 下午4.32.41.png","post":"cjvbvwwnv001bre6hwkk9d25c","modified":1,"renderable":0},{"_id":"source/_posts/deploy/deploy.png","post":"cjvbvwwma0004re6h7g3c765w","slug":"deploy.png","modified":1,"renderable":1},{"_id":"source/_posts/JS常用API整理/Array.png","post":"cjvbvwwlx0000re6h92nb2aq5","slug":"Array.png","modified":1,"renderable":1},{"_id":"source/_posts/JS常用API整理/Object.png","post":"cjvbvwwlx0000re6h92nb2aq5","slug":"Object.png","modified":1,"renderable":1},{"_id":"source/_posts/JS常用API整理/String.png","post":"cjvbvwwlx0000re6h92nb2aq5","slug":"String.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/1.png","post":"cjvbvwwmd0005re6h2hqomqb6","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/2.png","post":"cjvbvwwmd0005re6h2hqomqb6","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/nginx/3.png","post":"cjvbvwwmd0005re6h2hqomqb6","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15331179979335.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15331179979335.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15331180641337.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15331180641337.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15332640085635.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15332640085635.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15332640185394.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15332640185394.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15332640316291.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15332640316291.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15332641324646.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15332641324646.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15332642376956.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15332642376956.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15332643083915.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15332643083915.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15332643831055.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15332643831055.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/15332675960710.jpg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"15332675960710.jpg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/5831473-3031e966db4e6b7d.gif","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"5831473-3031e966db4e6b7d.gif","modified":1,"renderable":1},{"_id":"source/_posts/pictures/jpg格式保存方式.png","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"jpg格式保存方式.png","modified":1,"renderable":1},{"_id":"source/_posts/pictures/“基线”格式的JPG加载过程.gif","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"“基线”格式的JPG加载过程.gif","modified":1,"renderable":1},{"_id":"source/_posts/pictures/“连续”格式的JPG加载过程.gif","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"“连续”格式的JPG加载过程.gif","modified":1,"renderable":1},{"_id":"source/_posts/pictures/位图.png","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"位图.png","modified":1,"renderable":1},{"_id":"source/_posts/pictures/图片分类.png","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"图片分类.png","modified":1,"renderable":1},{"_id":"source/_posts/pictures/如何选择图片.jpeg","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"如何选择图片.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/pictures/懒加载.png","post":"cjvbvwwmm000are6hxgdlcxlc","slug":"懒加载.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午3.44.39.png","slug":"屏幕快照 2019-03-24 下午3.44.39.png","post":"cjvbvwwnv001bre6hwkk9d25c","modified":1,"renderable":0},{"_id":"source/_posts/debug/屏幕快照 2019-03-23 上午10.49.24.png","slug":"屏幕快照 2019-03-23 上午10.49.24.png","post":"cjvbvwwnv001bre6hwkk9d25c","modified":1,"renderable":0},{"_id":"source/_posts/debug/15535759171201.jpg","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"15535759171201.jpg","modified":1,"renderable":1},{"_id":"source/_posts/debug/1658016-a26cb97a6601c64c.webp","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"1658016-a26cb97a6601c64c.webp","modified":1,"renderable":1},{"_id":"source/_posts/debug/20180324151603563.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"20180324151603563.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/20180324155945272.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"20180324155945272.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/WechatIMG28.jpeg","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"WechatIMG28.jpeg","modified":1,"renderable":1},{"_id":"source/_posts/debug/add-column.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"add-column.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/audits-2.png","slug":"audits-2.png","post":"cjvbvwwnv001bre6hwkk9d25c","modified":1,"renderable":0},{"_id":"source/_posts/debug/chromePerformance2.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"chromePerformance2.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/clear-browser-cookies.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"clear-browser-cookies.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/idb-db.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"idb-db.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/idb-kvps.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"idb-kvps.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/js-profile.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"js-profile.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/mixedoverview.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"mixedoverview.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/nonsecuremain.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"nonsecuremain.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/openfile.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"openfile.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/overview-annotated.jpg","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"overview-annotated.jpg","modified":1,"renderable":1},{"_id":"source/_posts/debug/preserve-log.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"preserve-log.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/preserve-log.svg","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"preserve-log.svg","modified":1,"renderable":1},{"_id":"source/_posts/debug/screenshot-hover.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"screenshot-hover.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/timeline-annotated.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"timeline-annotated.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/web-sql-console.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"web-sql-console.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/伪元素.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"伪元素.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-17 下午10.56.24.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-17 下午10.56.24.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-23 上午11.07.15.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-23 上午11.07.15.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午4.38.19.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-24 下午4.38.19.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午4.42.29.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-24 下午4.42.29.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午6.29.30 2.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-24 下午6.29.30 2.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-24 下午6.29.30.sketch","slug":"屏幕快照 2019-03-24 下午6.29.30.sketch","post":"cjvbvwwnv001bre6hwkk9d25c","modified":1,"renderable":0},{"_id":"source/_posts/debug/屏幕快照 2019-03-26 下午12.54.07.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-26 下午12.54.07.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-28 上午11.44.09.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-28 上午11.44.09.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-28 下午2.01.39.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-28 下午2.01.39.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-28 下午2.04.21.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"屏幕快照 2019-03-28 下午2.04.21.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/屏幕快照 2019-03-28 下午3.34.17.png","slug":"屏幕快照 2019-03-28 下午3.34.17.png","post":"cjvbvwwnv001bre6hwkk9d25c","modified":1,"renderable":0},{"_id":"source/_posts/debug/断点.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"断点.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/查看css.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"查看css.png","modified":1,"renderable":1},{"_id":"source/_posts/debug/添加新样式.png","post":"cjvbvwwnv001bre6hwkk9d25c","slug":"添加新样式.png","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[{"post_id":"cjvbvwwlx0000re6h92nb2aq5","tag_id":"cjvbvwwm60002re6hsqoo70gs","_id":"cjvbvwwmn000bre6hhctggdg6"},{"post_id":"cjvbvwwlx0000re6h92nb2aq5","tag_id":"cjvbvwwme0006re6hjzjqjv86","_id":"cjvbvwwmp000dre6hhc07s4nz"},{"post_id":"cjvbvwwm30001re6h9eh66pdy","tag_id":"cjvbvwwmj0009re6h6n7uywmb","_id":"cjvbvwwmr000gre6hsdi99kv9"},{"post_id":"cjvbvwwm80003re6hl27gleqj","tag_id":"cjvbvwwmq000ere6hqjr1ziqy","_id":"cjvbvwwmx000mre6hlz9ofxfp"},{"post_id":"cjvbvwwm80003re6hl27gleqj","tag_id":"cjvbvwwms000ire6hcbw8oadi","_id":"cjvbvwwmx000nre6hdpzko8lk"},{"post_id":"cjvbvwwma0004re6h7g3c765w","tag_id":"cjvbvwwmx000lre6hq54ql9hl","_id":"cjvbvwwmy000qre6hrrsjcnvv"},{"post_id":"cjvbvwwma0004re6h7g3c765w","tag_id":"cjvbvwwmx000ore6hkf8vb83k","_id":"cjvbvwwmz000rre6himn9ooiw"},{"post_id":"cjvbvwwmd0005re6h2hqomqb6","tag_id":"cjvbvwwmy000pre6hcx9wqlzi","_id":"cjvbvwwn0000ure6hawe7aaf6"},{"post_id":"cjvbvwwmg0007re6hr3i0w520","tag_id":"cjvbvwwn0000tre6h1ppaktz1","_id":"cjvbvwwn1000xre6hf9j2g8dz"},{"post_id":"cjvbvwwmm000are6hxgdlcxlc","tag_id":"cjvbvwwn0000wre6h25e2miyo","_id":"cjvbvwwn1000zre6hs6x0qhav"},{"post_id":"cjvbvwwmo000cre6hku2mmhh4","tag_id":"cjvbvwwn1000yre6hss6ny13d","_id":"cjvbvwwn40012re6hlbdknb4c"},{"post_id":"cjvbvwwmo000cre6hku2mmhh4","tag_id":"cjvbvwwms000ire6hcbw8oadi","_id":"cjvbvwwn40013re6h94kah2g3"},{"post_id":"cjvbvwwms000hre6hvzqjclid","tag_id":"cjvbvwwn30011re6ha3ubv1fz","_id":"cjvbvwwn60016re6h4c4vilhu"},{"post_id":"cjvbvwwms000hre6hvzqjclid","tag_id":"cjvbvwwn50014re6h47r64ok2","_id":"cjvbvwwn60017re6ht6rvdcqu"},{"post_id":"cjvbvwwms000jre6he6n8vi00","tag_id":"cjvbvwwn50015re6hji0l8tm7","_id":"cjvbvwwn70019re6hf59uy8y6"},{"post_id":"cjvbvwwmw000kre6h78skg2ff","tag_id":"cjvbvwwn60018re6hg1f3g2pw","_id":"cjvbvwwn8001are6hu7gjl51m"},{"post_id":"cjvbvwwnv001bre6hwkk9d25c","tag_id":"cjvbvwwnw001cre6hi0zjtyaf","_id":"cjvbvwwo0001dre6h2s0gioqi"},{"post_id":"cjvbvwwmd0005re6h2hqomqb6","tag_id":"cjvbvypdl001ere6hnpn5s93w","_id":"cjvbvypdl001fre6hv1b1iu7q"}],"Tag":[{"name":"API","_id":"cjvbvwwm60002re6hsqoo70gs"},{"name":"JS","_id":"cjvbvwwme0006re6hjzjqjv86"},{"name":"My-first-post","_id":"cjvbvwwmj0009re6h6n7uywmb"},{"name":"设计模式","_id":"cjvbvwwmq000ere6hqjr1ziqy"},{"name":"云笔记","_id":"cjvbvwwms000ire6hcbw8oadi"},{"name":"deploy","_id":"cjvbvwwmx000lre6hq54ql9hl"},{"name":"配置","_id":"cjvbvwwmx000ore6hkf8vb83k"},{"name":"nginx","_id":"cjvbvwwmy000pre6hcx9wqlzi"},{"name":"服务端","_id":"cjvbvwwmz000sre6hotmjjvv4"},{"name":"full-screen","_id":"cjvbvwwn0000tre6h1ppaktz1"},{"name":"pictures","_id":"cjvbvwwn0000wre6h25e2miyo"},{"name":"react router","_id":"cjvbvwwn1000yre6hss6ny13d"},{"name":"linux","_id":"cjvbvwwn30011re6ha3ubv1fz"},{"name":"服务器","_id":"cjvbvwwn50014re6h47r64ok2"},{"name":"require","_id":"cjvbvwwn50015re6hji0l8tm7"},{"name":"webpack","_id":"cjvbvwwn60018re6hg1f3g2pw"},{"name":"debug","_id":"cjvbvwwnw001cre6hi0zjtyaf"},{"name":"服务端配置","_id":"cjvbvypdl001ere6hnpn5s93w"}]}}